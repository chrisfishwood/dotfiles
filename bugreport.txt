uname -a
Darwin homunculus.local 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64


VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Aug 10 2013 18:40:52)
MacOS X (unix) version
Compiled by Douglas Drumond <douglas@eee19.com>
Huge version with MacVim GUI.  Features included (+) or not (-):
+arabic          +diff            +insert_expand   +mouse_sgr       +rightleft       +transparency
+autocmd         +digraphs        +jumplist        -mouse_sysmouse  +ruby            +user_commands
+balloon_eval    +dnd             +keymap          +mouse_urxvt     +scrollbind      +vertsplit
+browse          -ebcdic          +langmap         +mouse_xterm     +signs           +virtualedit
++builtin_terms  +emacs_tags      +libcall         +multi_byte      +smartindent     +visual
+byte_offset     +eval            +linebreak       +multi_lang      -sniff           +visualextra
+cindent         +ex_extra        +lispindent      -mzscheme        +startuptime     +viminfo
+clientserver    +extra_search    +listcmds        +netbeans_intg   +statusline      +vreplace
+clipboard       +farsi           +localmap        +odbeditor       -sun_workshop    +wildignore
+cmdline_compl   +file_in_path    -lua             +path_extra      +syntax          +wildmenu
+cmdline_hist    +find_in_path    +menu            +perl            +tag_binary      +windows
+cmdline_info    +float           +mksession       +persistent_undo +tag_old_static  +writebackup
+comments        +folding         +modify_fname    +postscript      -tag_any_white   -X11
+conceal         -footer          +mouse           +printer         -tcl             -xfontset
+cryptv          +fork()          +mouseshape      +profile         +terminfo        +xim
+cscope          +fullscreen      +mouse_dec       +python          +termresponse    -xsmp
+cursorbind      -gettext         -mouse_gpm       -python3         +textobjects     -xterm_clipboard+cursorshape     -hangul_input    -mouse_jsbterm   +quickfix        +title           -xterm_save
+dialog_con_gui  +iconv           +mouse_netterm   +reltime         +toolbar         
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
 2nd user vimrc file: "~/.vim/vimrc"
      user exrc file: "$HOME/.exrc"
  system gvimrc file: "$VIM/gvimrc"
    user gvimrc file: "$HOME/.gvimrc"
2nd user gvimrc file: "~/.vim/gvimrc"
    system menu file: "$VIMRUNTIME/menu.vim"
  fall-back for $VIM: "/Applications/MacVim.app/Contents/Resources/vim"
Compilation: clang -c -I. -Iproto -DHAVE_CONFIG_H -DFEAT_GUI_MACVIM -Wall -Wno-unknown-pragmas -pipe  -DMACOS_X_UNIX -no-cpp-precomp  -g -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      
Linking: clang   -L.    -L.     -L/usr/local/lib -o Vim -framework Cocoa -framework Carbon       -lncurses  -liconv -framework Cocoa   -fstack-protector -L/usr/local/lib  -L/System/Library/Perl/5.12/darwin-thread-multi-2level/CORE -lperl -lm -lutil -lc -framework Python   -framework Ruby   
--- Directories and Files ---
$VIM = "/Applications/MacVim.app/Contents/Resources/vim"
directory "/Applications/MacVim.app/Contents/Resources/vim" exists
$VIMRUNTIME = "/Applications/MacVim.app/Contents/Resources/vim/runtime"
directory "/Applications/MacVim.app/Contents/Resources/vim/runtime" exists
"/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt" is readable
"/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/tags" is readable
"/Applications/MacVim.app/Contents/Resources/vim/runtime/menu.vim" is readable
"/Applications/MacVim.app/Contents/Resources/vim/runtime/filetype.vim" is readable
"/Applications/MacVim.app/Contents/Resources/vim/runtime/syntax/synload.vim" is readable
--- Scripts sourced ---
  1: /Applications/MacVim.app/Contents/Resources/vim/vimrc
  2: ~/.vimrc
  3: /Applications/MacVim.app/Contents/Resources/vim/runtime/ftoff.vim
  4: ~/dotfiles/vim/bundle/vundle/autoload/vundle.vim
  5: ~/dotfiles/vim/bundle/vundle/autoload/vundle/config.vim
  6: /Applications/MacVim.app/Contents/Resources/vim/runtime/syntax/syntax.vim
  7: /Applications/MacVim.app/Contents/Resources/vim/runtime/syntax/synload.vim
  8: /Applications/MacVim.app/Contents/Resources/vim/runtime/syntax/syncolor.vim
  9: /Applications/MacVim.app/Contents/Resources/vim/runtime/filetype.vim
 10: ~/dotfiles/vim/bundle/vim-ls/ftdetect/ls.vim
 11: ~/dotfiles/vim/bundle/vim-ruby/ftdetect/ruby.vim
 12: ~/dotfiles/vim/bundle/vim-javascript/ftdetect/javascript.vim
 13: ~/dotfiles/vim/bundle/vim-markdown/ftdetect/markdown.vim
 14: ~/dotfiles/vim/bundle/scss-syntax.vim/ftdetect/scss.vim
 15: ~/dotfiles/vim/bundle/vim-coffee-script/ftdetect/coffee.vim
 16: ~/dotfiles/vim/bundle/csv.vim/ftdetect/csv.vim
 17: ~/dotfiles/vim/bundle/vim-git/ftdetect/git.vim
 18: ~/dotfiles/vim/bundle/jellybeans.vim/colors/jellybeans.vim
 19: /Applications/MacVim.app/Contents/Resources/vim/runtime/ftplugin.vim
 20: /Applications/MacVim.app/Contents/Resources/vim/runtime/indent.vim
 21: ~/dotfiles/vim/bundle/tlib_vim/plugin/02tlib.vim
 22: ~/dotfiles/vim/bundle/vim-snipmate/plugin/snipMate.vim
 23: ~/dotfiles/vim/bundle/vim-addon-mw-utils/autoload/funcref.vim
 24: ~/dotfiles/vim/bundle/vim-snippets/plugin/vimsnippets.vim
 25: ~/dotfiles/vim/bundle/vim-numbertoggle/plugin/number_toggle.vim
 26: ~/dotfiles/vim/bundle/vim_test_runner/plugin/triggertest.vim
 27: ~/dotfiles/vim/bundle/vim-rails/plugin/rails.vim
 28: ~/dotfiles/vim/bundle/csv.vim/plugin/csv.vim
 29: ~/dotfiles/vim/bundle/vim-tmux-navigator/plugin/tmux_navigator.vim
 30: ~/dotfiles/vim/bundle/vim-gitgutter/plugin/gitgutter.vim
 31: ~/dotfiles/vim/bundle/vim-gitgutter/autoload/highlight.vim
 32: ~/dotfiles/vim/bundle/ag.vim/plugin/ag.vim
 33: ~/dotfiles/vim/bundle/vim-buffergator/plugin/buffergator.vim
 34: ~/dotfiles/vim/bundle/vim-unimpaired/plugin/unimpaired.vim
 35: ~/dotfiles/vim/bundle/ctrlp.vim/plugin/ctrlp.vim
 36: ~/dotfiles/vim/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim
 37: ~/dotfiles/vim/bundle/vim-dispatch/plugin/dispatch.vim
 38: ~/dotfiles/vim/bundle/vim-endwise/plugin/endwise.vim
 39: ~/dotfiles/vim/bundle/vim-easymotion/plugin/EasyMotion.vim
 40: ~/dotfiles/vim/bundle/vim-eunuch/plugin/eunuch.vim
 41: ~/dotfiles/vim/bundle/vim-fugitive/plugin/fugitive.vim
 42: ~/dotfiles/vim/bundle/gist-vim/plugin/gist.vim
 43: ~/dotfiles/vim/bundle/gundo.vim/plugin/gundo.vim
 44: ~/dotfiles/vim/bundle/vim-matchit/plugin/matchit.vim
 45: ~/dotfiles/vim/bundle/vim-multiple-cursors/plugin/multiple_cursors.vim
 46: ~/dotfiles/vim/bundle/NrrwRgn/plugin/NrrwRgn.vim
 47: ~/dotfiles/vim/bundle/nerdcommenter/plugin/NERD_commenter.vim
 48: ~/dotfiles/vim/bundle/nerdtree/plugin/NERD_tree.vim
 49: ~/dotfiles/vim/bundle/nerdtree/autoload/nerdtree.vim
 50: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/path.vim
 51: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/menu_controller.vim
 52: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/menu_item.vim
 53: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/key_map.vim
 54: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/bookmark.vim
 55: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/tree_file_node.vim
 56: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim
 57: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/opener.vim
 58: ~/dotfiles/vim/bundle/nerdtree/lib/nerdtree/creator.vim
 59: ~/dotfiles/vim/bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim
 60: ~/dotfiles/vim/bundle/nerdtree/nerdtree_plugin/fs_menu.vim
 61: ~/dotfiles/vim/bundle/supertab/plugin/supertab.vim
 62: ~/dotfiles/vim/bundle/vim-surround/plugin/surround.vim
 63: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/autoloclist.vim
 64: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/balloons.vim
 65: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/checker.vim
 66: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/cursor.vim
 67: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/highlighting.vim
 68: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/loclist.vim
 69: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/modemap.vim
 70: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/notifiers.vim
 71: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/registry.vim
 72: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic/signs.vim
 73: ~/dotfiles/vim/bundle/syntastic/plugin/syntastic.vim
 74: ~/dotfiles/vim/bundle/syntastic/autoload/syntastic/log.vim
 75: ~/dotfiles/vim/bundle/syntastic/autoload/syntastic/util.vim
 76: ~/dotfiles/vim/bundle/tagbar/plugin/tagbar.vim
 77: ~/dotfiles/vim/bundle/vim-trailing-whitespace/plugin/trailing-whitespace.vim
 78: ~/dotfiles/vim/bundle/vimwiki/plugin/vimwiki.vim
 79: ~/dotfiles/vim/bundle/vimwiki/autoload/vimwiki/base.vim
 80: ~/dotfiles/vim/bundle/vim-visualstar/plugin/visualstar.vim
 81: ~/dotfiles/vim/bundle/vim-vroom/plugin/vroom.vim
 82: ~/dotfiles/vim/bundle/ZoomWin/plugin/ZoomWinPlugin.vim
 83: ~/dotfiles/vim/bundle/vim-rooter/plugin/rooter.vim
 84: ~/dotfiles/vim/bundle/vim-airline/plugin/airline.vim
 85: ~/dotfiles/vim/bundle/vim-airline/autoload/airline.vim
 86: ~/dotfiles/vim/bundle/tmuxline.vim/plugin/tmuxline.vim
 87: ~/dotfiles/vim/bundle/vim-signature/plugin/signature.vim
 88: /Applications/MacVim.app/Contents/Resources/vim/runtime/plugin/getscriptPlugin.vim
 89: /Applications/MacVim.app/Contents/Resources/vim/runtime/plugin/gzip.vim
 90: /Applications/MacVim.app/Contents/Resources/vim/runtime/plugin/matchparen.vim
 91: /Applications/MacVim.app/Contents/Resources/vim/runtime/plugin/netrwPlugin.vim
 92: /Applications/MacVim.app/Contents/Resources/vim/runtime/plugin/rrhelper.vim
 93: /Applications/MacVim.app/Contents/Resources/vim/runtime/plugin/spellfile.vim
 94: /Applications/MacVim.app/Contents/Resources/vim/runtime/plugin/tarPlugin.vim
 95: /Applications/MacVim.app/Contents/Resources/vim/runtime/plugin/tohtml.vim
 96: /Applications/MacVim.app/Contents/Resources/vim/runtime/plugin/vimballPlugin.vim
 97: /Applications/MacVim.app/Contents/Resources/vim/runtime/plugin/zipPlugin.vim
 98: ~/dotfiles/vim/bundle/vim-snipmate/after/plugin/snipMate.vim
 99: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/init.vim
100: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/parts.vim
101: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions.vim
102: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/quickfix.vim
103: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/netrw.vim
104: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/ctrlp.vim
105: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/hunks.vim
106: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/tagbar.vim
107: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/csv.vim
108: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/branch.vim
109: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/syntastic.vim
110: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/whitespace.vim
111: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/tabline.vim
112: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/tmuxline.vim
113: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/section.vim
114: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/highlighter.vim
115: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/themes/jellybeans.vim
116: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/themes.vim
117: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/builder.vim
118: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/util.vim
119: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/default.vim
120: ~/dotfiles/vim/bundle/tmuxline.vim/autoload/tmuxline/api.vim
121: ~/dotfiles/vim/bundle/tmuxline.vim/autoload/tmuxline/util.vim
122: ~/dotfiles/vim/bundle/tmuxline.vim/autoload/tmuxline.vim
123: ~/dotfiles/vim/bundle/tmuxline.vim/autoload/tmuxline/presets/powerline.vim
124: ~/dotfiles/vim/bundle/tmuxline.vim/autoload/tmuxline/builder.vim
125: ~/dotfiles/vim/bundle/vim-gitgutter/autoload/gitgutter.vim
126: ~/dotfiles/vim/bundle/vim-gitgutter/autoload/utility.vim
127: ~/dotfiles/vim/bundle/vim-gitgutter/autoload/hunk.vim
128: ~/dotfiles/vim/bundle/vim-signature/autoload/signature.vim
129: ~/dotfiles/vim/bundle/vim-rails/autoload/rails.vim
130: ~/dotfiles/vim/bundle/vim-airline/autoload/airline/extensions/tabline/default.vim
131: ~/dotfiles/vim/bundle/tagbar/autoload/tagbar.vim
132: ~/dotfiles/vim/bundle/ctrlp.vim/autoload/ctrlp/utils.vim
133: /Applications/MacVim.app/Contents/Resources/vim/runtime/syntax/vim.vim
134: /Applications/MacVim.app/Contents/Resources/vim/runtime/syntax/perl.vim
135: /Applications/MacVim.app/Contents/Resources/vim/runtime/syntax/pod.vim
136: /Applications/MacVim.app/Contents/Resources/vim/runtime/syntax/ruby.vim
137: /Applications/MacVim.app/Contents/Resources/vim/runtime/syntax/python.vim
138: ~/dotfiles/vim/bundle/vim-css-color/after/syntax/vim.vim
139: ~/dotfiles/vim/bundle/vim-css-color/autoload/css_color.vim
140: /Applications/MacVim.app/Contents/Resources/vim/runtime/ftplugin/vim.vim
141: /Applications/MacVim.app/Contents/Resources/vim/runtime/indent/vim.vim
142: ~/dotfiles/vim/bundle/vim-gitgutter/autoload/diff.vim
143: /Applications/MacVim.app/Contents/Resources/vim/runtime/bugreport.vim
--- Options ---
  aleph=224           diffexpr=         noinsertmode          readonly          notermbidi
  antialias           diffopt=filler      isprint=@,161-255   redrawtime=2000     termencoding=
noarabic            nodigraph             joinspaces          regexpengine=0    noterse
  arabicshape         display=            key=                relativenumber      textauto
noallowrevins         eadirection=both    keymap=             remap             notextmode
noaltkeymap         noedcompatible        keymodel=           report=2            textwidth=78
  ambiwidth=single    encoding=utf-8      keywordprg=man -s norevins              thesaurus=
noautochdir           endofline           langmap=          norightleft         notildeop
  autoindent          equalalways         langmenu=none       ruler               timeout
noautoread            equalprg=           laststatus=2        rulerformat=        timeoutlen=1000
noautowrite         noerrorbells        nolazyredraw          scroll=22         notitle
noautowriteall        esckeys           nolinebreak         noscrollbind          titlelen=85
  background=light    eventignore=        lines=47            scrolljump=1        titlestring=
nobackup              expandtab           linespace=0         scrolloff=0         transparency=0
  backupcopy=auto   noexrc              nolisp              nosecure            nottimeout
  backupext=~         fileformat=unix     list                selectmode=         ttimeoutlen=-1
  balloondelay=600    fileignorecase      loadplugins         shell=/bin/bash     ttybuiltin
noballooneval         filetype=vim      nomacmeta             shellcmdflag=-c     ttyfast
  balloonexpr=      nofkmap               magic               shellquote=         ttymouse=xterm
nobinary              foldclose=          makeef=             shelltemp           ttyscroll=999
nobomb                foldcolumn=0        makeprg=make        shellxquote=        undodir=.
  browsedir=last      foldenable          matchtime=5         shellxescape=     noundofile
  bufhidden=          foldexpr=0          maxcombine=2      noshiftround          undolevels=1000
  buflisted           foldignore=#        maxfuncdepth=100    shiftwidth=2        undoreload=10000
  buftype=            foldlevel=0         maxmapdepth=1000  noshortname           updatecount=200
  cdpath=,,           foldlevelstart=-1   maxmem=205360       showbreak=          updatetime=4000
  cedit=^F            foldmethod=manual   maxmemtot=205360  noshowcmd             verbose=0
  charconvert=        foldminlines=1      menuitems=25      noshowfulltag         verbosefile=
nocindent             foldnestmax=20      modeline          noshowmatch           virtualedit=
  cinoptions=         formatexpr=         modelines=5         showmode          novisualbell
  clipboard=unnamed   formatprg=          modifiable          showtabline=2       warn
  cmdheight=1         fsync             nomodified            sidescroll=0      noweirdinvert
  cmdwinheight=7    nofullscreen        nomore                sidescrolloff=0     whichwrap=b,s
  columns=101       nogdefault            mouse=            nosmartcase           wildchar=<Tab>
  commentstring="%s   guifont=          nomousefocus          smartindent         wildcharm=0
nocompatible          guifontwide=        mousehide         nosmarttab            wildignore=
  concealcursor=      guioptions=egmrL    mousetime=500       softtabstop=2     nowildignorecase
  conceallevel=0      guipty            nonumber            nospell             nowildmenu
  completefunc=       guitablabel=        numberwidth=4       spellfile=          wildmode=full
noconfirm             guitabtooltip=      omnifunc=           spelllang=en        wildoptions=
nocopyindent          helpheight=20       operatorfunc=       spellsuggest=best   window=46
  cpoptions=aABceFs   helplang=en       nopaste             nosplitbelow          winheight=1
  cryptmethod=zip   nohidden              pastetoggle=      nosplitright        nowinfixheight
  cscopepathcomp=0    history=20          patchexpr=          startofline       nowinfixwidth
  cscopeprg=cscope  nohkmap               patchmode=          suffixesadd=        winminheight=1
  cscopequickfix=   nohkmapp            nopreserveindent      swapfile            winminwidth=1
nocscoperelative      hlsearch            previewheight=12    swapsync=fsync      winwidth=20
nocscopetag         noicon              nopreviewwindow       switchbuf=        nowrap
  cscopetagorder=0    iconstring=         printdevice=        synmaxcol=3000      wrapmargin=0
nocscopeverbose       ignorecase          printencoding=      syntax=vim          wrapscan
nocursorbind        noimcmdline           printfont=courier   tabpagemax=10       write
nocursorcolumn        imdisable           printmbcharset=     tabstop=2         nowriteany
  cursorline          iminsert=2          printmbfont=        tagbsearch          writebackup
  debug=              imsearch=2          printoptions=       taglength=0         writedelay=0
nodelcombine          includeexpr=        prompt              tagrelative
  dictionary=         incsearch           pumheight=0         tags=./tags,tags
nodiff              noinfercase           quoteescape=\       tagstack
  backspace=indent,eol,start
  backupdir=~/.vim/bkup
  backupskip=/tmp/*,/var/folders/r2/m6018bc10j15zlmgzcn2j0g80000gn/T/*
  breakat= ^I!@*-+;:,./?
  casemap=internal,keepascii
  cinkeys=0{,0},0),:,0#,!^F,o,O,e
  cinwords=if,else,while,do,for,switch
  colorcolumn=81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,34
  comments=sO:" -,mO:"  ,eO:"",:"
  complete=.,w,b,u,t,i
  completeopt=menu,preview
  define=^\s*#\s*define
  directory=~/.vim/bkup
  errorfile=errors.err
  errorformat=%*[^"]"%f"%*\D%l: %m,"%f"%*\D%l: %m,%-G%f:%l: (Each undeclared identifier is reported only once,%-G%f:%l: for each function it appears in.),%-GIn file included from %f:%l:%c:,%-GIn file included from %f:%l:%c\,,%-GIn file included from %f:%l:%c,%-GIn file included from %f:%l,%-G%*[ ]from %f:%l:%c,%-G%*[ ]from %f:%l:,%-G%*[ ]from %f:%l\,,%-G%*[ ]from %f:%l,%f:%l:%c:%m,%f(%l):%m,%f:%l:%m,"%f"\, line %l%*\D%c%*[^ ] %m,%D%*\a[%*\d]: Entering directory `%f',%X%*\a[%*\d]: Leaving directory `%f',%D%*\a: Entering directory `%f',%X%*\a: Leaving directory `%f',%DMaking %*\a in %f,%f|%l| %m
  fileencoding=utf-8
  fileencodings=ucs-bom,utf-8,default,latin1
  fileformats=unix,dos
  fillchars=vert:|,fold:-
  foldmarker={{{,}}}
  foldopen=block,hor,mark,percent,quickfix,search,tag,undo
  foldtext=foldtext()
  formatoptions=croql
  formatlistpat=^\s*\d\+[\]:.)}\t ]\s*
  fuoptions=maxvert,maxhorz
  grepformat=%f:%l:%m,%f:%l%m,%f  %l%m
  grepprg=grep -n $* /dev/null
  guicursor=n-v-c:block-Cursor/lCursor,ve:ver35-Cursor,o:hor50-Cursor,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor,sm:block-Cursor-blinkwait175-blinkoff150-blinkon175,i:blinkwait0
  helpfile=/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt
  highlight=8:SpecialKey,@:NonText,d:Directory,e:ErrorMsg,i:IncSearch,l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,N:CursorLineNr,r:Question,s:StatusLine,S:StatusLineNC,c:VertSplit,t:Title,v:Visual,V:VisualNOS,w:WarningMsg,W:WildMenu,f:Folded,F:FoldColumn,A:DiffAdd,C:DiffChange,D:DiffDelete,T:DiffText,>:SignColumn,-:Conceal,B:SpellBad,P:SpellCap,R:SpellRare,L:SpellLocal,+:Pmenu,=:PmenuSel,x:PmenuSbar,X:PmenuThumb,*:TabLine,#:TabLineSel,_:TabLineFill,!:CursorColumn,.:CursorLine,o:ColorColumn
  include=^\s*#\s*include
  indentexpr=GetVimIndent()
  indentkeys=0{,0},:,0#,!^F,o,O,e,=end,=else,=cat,=fina,=END,0\
  isfname=@,48-57,/,.,-,_,+,,,#,$,%,~,=
  isident=@,48-57,_,192-255
  iskeyword=@,48-57,_,192-255,#
  lispwords=defun,define,defmacro,set!,lambda,if,case,let,flet,let*,letrec,do,do*,define-syntax,let-syntax,letrec-syntax,destructuring-bind,defpackage,defparameter,defstruct,deftype,defvar,do-all-symbols,do-external-symbols,do-symbols,dolist,dotimes,ecase,etypecase,eval-when,labels,macrolet,multiple-value-bind,multiple-value-call,multiple-value-prog1,multiple-value-setq,prog1,progv,typecase,unless,unwind-protect,when,with-input-from-string,with-open-file,with-open-stream,with-output-to-string,with-package-iterator,define-condition,handler-bind,handler-case,restart-bind,restart-case,with-simple-restart,store-value,use-value,muffle-warning,abort,continue,with-slots,with-slots*,with-accessors,with-accessors*,defclass,defmethod,print-unreadable-object
  listchars=tab:  ,trail:.
  matchpairs=(:),{:},[:]
  maxmempattern=1000
  mkspellmem=460000,2000,500
  mousemodel=popup_setpos
  mouseshape=i-r:beam,s:updown,sd:udsizing,vs:leftright,vd:lrsizing,m:no,ml:up-arrow,v:rightup-arrow
  nrformats=octal,hex
  paragraphs=IPLPPPQPP TPHPLIPpLpItpplpipbp
  path=.,/usr/include,,
  printexpr=system('lpr' . (&printdevice == '' ? '' : ' -P' . &printdevice) . ' ' . v:fname_in) . delete(v:fname_in) + v:shell_error
  printheader=%<%f%h%m%=Page %N
  rightleftcmd=search
  runtimepath=~/.vim/bundle/vundle,~/.vim/bundle/jellybeans.vim,~/.vim/bundle/vim-addon-mw-utils,~/.vim/bundle/tlib_vim,~/.vim/bundle/vim-snipmate,~/.vim/bundle/vim-snippets,~/.vim/bundle/vim-numbertoggle,~/.vim/bundle/vim_test_runner,~/.vim/bundle/vim-ls,~/.vim/bundle/vim-rails,~/.vim/bundle/vim-ruby,~/.vim/bundle/vim-javascript,~/.vim/bundle/vim-ruby-minitest,~/.vim/bundle/vim-markdown,~/.vim/bundle/scss-syntax.vim,~/.vim/bundle/vim-coffee-script,~/.vim/bundle/csv.vim,~/.vim/bundle/vim-git,~/.vim/bundle/vim-tmux-navigator,~/.vim/bundle/vim-gitgutter,~/.vim/bundle/ag.vim,~/.vim/bundle/vim-buffergator,~/.vim/bundle/vim-unimpaired,~/.vim/bundle/ctrlp.vim,~/.vim/bundle/vim-css-color,~/.vim/bundle/vim-dispatch,~/.vim/bundle/vim-endwise,~/.vim/bundle/vim-easymotion,~/.vim/bundle/vim-eunuch,~/.vim/bundle/vim-fugitive,~/.vim/bundle/gist-vim,~/.vim/bundle/gundo.vim,~/.vim/bundle/vim-matchit,~/.vim/bundle/vim-multiple-cursors,~/.vim/bundle/NrrwRgn,~/.vim/bundle/nerdcommenter,~/.vim/bundle/nerdtree,~/.vim/bundle/vim-repeat,~/.vim/
  scrollopt=ver,jump
  sections=SHNHH HUnhsh
  selection=inclusive
  sessionoptions=blank,buffers,curdir,folds,help,options,tabpages,winsize
  shellpipe=2>&1| tee
  shellredir=>%s 2>&1
  shortmess=filnxtToO
  spellcapcheck=[.?!]\_[\])'"^I ]\+
  statusline=%!airline#statusline(1)
  suffixes=.bak,~,.o,.h,.info,.swp,.obj
  tabline=%!airline#extensions#tabline#get()
  term=screen-256color
  titleold=Thanks for flying Vim
  toolbar=icons,tooltips
  toolbariconsize=small
  ttytype=screen-256color
  viewdir=~/.vim/view
  viewoptions=folds,options,cursor
  viminfo='100,<50,s10,h
--- Terminal codes ---
  t_AL=^[[%p1%dL      t_da=               t_mb=^[[5m          t_Sb=               t_vb=^[g
  t_al=^[[L           t_db=               t_md=^[[1m          t_Sf=               t_vi=^[[?25l
  t_bc=               t_DL=^[[%p1%dM      t_me=^[[0m          t_se=^[[23m         t_vs=^[[34l
  t_cd=^[[J           t_dl=^[[M           t_mr=^[[7m          t_so=^[[3m          t_WP=
  t_ce=^[[K           t_fs=               t_ms=y              t_sr=^[M            t_WS=
  t_cl=^[[H^[[J       t_IE=               t_nd=^[[C           t_ts=               t_xs=
  t_Co=256            t_IS=               t_op=^[[39;49m      t_te=^[[?1049l      t_ZH=^[[7m
  t_CS=               t_ke=^[[?1l^[>      t_RI=^[[%p1%dC      t_ti=^[[?1049h      t_ZR=^[[0m
  t_CV=               t_ks=^[[?1h^[=      t_RV=               t_ue=^[[24m
  t_ut=               t_le=^H             t_u7=               t_us=^[[4m
  t_AB=^[[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m
  t_AF=^[[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m
  t_cm=^[[%i%p1%d;%p2%dH
  t_cs=^[[%i%p1%d;%p2%dr
  t_ve=^[[34h^[[?25h
  t_SI=^[Ptmux;^[^[]50;CursorShape=1^G^[\
  t_EI=^[Ptmux;^[^[]50;CursorShape=0^G^[\
--- Terminal keys ---
t_@7 <End>       ^[[4~     t_k7 <F7>        ^[[18~    t_kb <BS>        ^?
t_F1 <F11>       ^[[23~    t_k8 <F8>        ^[[19~    t_kd <Down>      ^[OB
t_F2 <F12>       ^[[24~    t_k9 <F9>        ^[[20~    t_kh <Home>      ^[[1~
t_k1 <F1>        ^[OP      t_k; <F10>       ^[[21~    t_kl <Left>      ^[OD
t_k2 <F2>        ^[OQ      t_kB <S-Tab>     ^[[Z      t_kr <Right>     ^[OC
t_k3 <F3>        ^[OR      t_kD <Del>       ^[[3~     t_ku <Up>        ^[OA
t_k4 <F4>        ^[OS      t_kI <Insert>    ^[[2~          <Mouse>     ^[[M
t_k5 <F5>        ^[[15~    t_kN <PageDown>  ^[[6~
t_k6 <F6>        ^[[17~    t_kP <PageUp>    ^[[5~
--- Auto-Commands ---
CtrlPMRUF  BufAdd
    *         cal s:record(expand('<abuf>', 1))
fugitive_commit  BufDelete
    COMMIT_EDITMSG
              execute s:sub(s:FinishCommit(), '^echoerr (.*)', 'echohl ErrorMsg|echo \1|echohl NONE')
BufDelete
    *         let s:current_bufnr = -1
filetypedetect  BufEnter
    *.xpm     if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif
    *.xpm2    setf xpm2
    *.scss    :syntax sync fromstart
railsPluginDetect  BufEnter
    *         if exists("b:rails_root")|silent doau User BufEnterRails|endif
gitgutter  BufEnter
    *         if gettabvar(tabpagenr(), 'gitgutter_didtabenter')|   call settabvar(tabpagenr(), 'gitgutter_didtabenter', 0)| else|   call gitgutter#process_buffer(utility#current_file(), 0)| endif
BuffergatorMRU  BufEnter
    *         call BuffergatorUpdateMRU(expand('<abuf>'))
CtrlPMRUF  BufEnter
    *         cal s:record(expand('<abuf>', 1))
NERDCommenter  BufEnter
    *         :call s:SetUpForNewFiletype(&filetype, 0)
NERDTree  BufEnter
    NERD_tree_*
              stopinsert
NERDTreeHijackNetrw  BufEnter
    *         call nerdtree#checkForBrowse(expand("<amatch>"))
syntastic  BufEnter
    *         call s:BufEnterHook()
vimwiki  BufEnter
    *.wiki    call s:setup_buffer_reenter()
rooter  BufEnter
    *.rb      :Rooter
    *.py      :Rooter
    *.html    :Rooter
    *.haml    :Rooter
    *.erb     :Rooter
    *.css     :Rooter
    *.scss    :Rooter
    *.sass    :Rooter
    *.less    :Rooter
    *.js      :Rooter
    *.rjs     :Rooter
    *.coffee  :Rooter
    *.php     :Rooter
    *.xml     :Rooter
    *.yaml    :Rooter
    *.yml     :Rooter
    *.markdown
              :Rooter
    *.md      :Rooter
sig_autocmds  BufEnter
    *         call signature#SignRefresh()
BufEnter
    *.vba     setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.gz  setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.bz2 setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.zip setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vba.xz  setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vmb     setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vmb.gz  setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vmb.bz2 setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vmb.zip setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
    *.vmb.xz  setlocal bt=nofile fmr=[[[,]]] fdm=marker|if &ff != 'unix'|setlocal ma ff=unix noma|endif|call vimball#ShowMesg(0,"Source this file to extract it! (:so %)")
railsPluginDetect  BufLeave
    *         if exists("b:rails_root")|silent doau User BufLeaveRails|endif
CtrlPMRUF  BufLeave
    *         cal s:record(expand('<abuf>', 1))
vimwiki  BufLeave
    *.wiki    call s:setup_buffer_leave()
filetypedetect  BufNewFile
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-new
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-bak
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    *.inp     call s:Check_inp()
    *.aap     setf aap
    */etc/a2ps.cfg
              setf a2ps
    */etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    proftpd.conf*
              call s:StarSetf('apachestyle')
    .htaccess setf apache
    */etc/httpd/*.conf
              setf apache
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    .asoundrc setf alsaconf
    */usr/share/alsa/alsa.conf
              setf alsaconf
    */etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    apt.conf  setf aptconf
    */.aptitude/config
              setf aptconf
    */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf}
              setf aptconf
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asciidoc
              setf asciidoc
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    */boot/grub/menu.lst
              setf grub
    */boot/grub/grub.conf
              setf grub
    */etc/grub.conf
              setf grub
    *.asm     call s:FTasm()
    *.[sS]    call s:FTasm()
    *.[aA]    call s:FTasm()
    *.mac     call s:FTasm()
    *.lst     call s:FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call s:FTVB("basic")
    *.vb      setf vb
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call s:FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named.conf
              setf named
    rndc.conf setf named
    named.root
              setf bindzone
    *.db      call s:BindzoneCheck('')
    *.bl      setf blank
    */etc/blkid.tab
              setf xml
    */etc/blkid.tab.old
              setf xml
    *.c       call s:FTlpc()
    calendar  setf calendar
    *.cs      setf cs
    *.csdl    setf csdl
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    */etc/cdrdao.conf
              setf cdrdaoconf
    */etc/defaults/cdrdao
              setf cdrdaoconf
    */etc/default/cdrdao
              setf cdrdaoconf
    .cdrdao   setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.h       call s:FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call s:FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call s:FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    *.clj     setf clojure
    *.cljs    setf clojure
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    */.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    */etc/apt/sources.list
              setf debsources
    */etc/apt/sources.list.d/*.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    */etc/dnsmasq.conf
              setf dnsmasq
    *.desc    setf desc
    *.d       call s:DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   setf diff
    .dir_colors
              setf dircolors
    .dircolors
              setf dircolors
    */etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call s:BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.dts     setf dts
    *.dtsi    setf dts
    *.ed\(f\|if\|n\|o\)
              setf edif
    *.ecd     setf ecd
    *.e       call s:FTe()
    *.E       call s:FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fal     setf falcon
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.frt     setf reva
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    *.git/COMMIT_EDITMSG
              setf gitcommit
    *.git/MERGE_MSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    .gitmodules
              setf gitconfig
    *.git/modules/*/COMMIT_EDITMSG
              setf gitcommit
    *.git/modules/*/config
              setf gitconfig
    */.config/git/config
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/*   if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    */usr/*/gnupg/options.skel
              setf gpg
    gnashrc   setf gnash
    .gnashrc  setf gnash
    gnashpluginrc
              setf gnash
    .gnashpluginrc
              setf gnash
    gitolite.conf
              setf gitolite
    */gitolite-admin/conf/*
              call s:StarSetf('gitolite')
    {,.}gitolite.rc
              setf perl
    example.gitolite.rc
              setf perl
    *.gpi     setf gnuplot
    *.gs      setf grads
    *.gretl   setf gretl
    *.groovy  setf groovy
    *.gsp     setf gsp
    */etc/group
              setf group
    */etc/group-
              setf group
    */etc/group.edit
              setf group
    */etc/gshadow
              setf group
    */etc/gshadow-
              setf group
    */etc/gshadow.edit
              setf group
    */var/backups/group.bak
              setf group
    */var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.rs      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.t.html  setf tilde
    *.html    call s:FThtml()
    *.htm     call s:FThtml()
    *.shtml   call s:FThtml()
    *.stm     call s:FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf htmlcheetah
    */etc/host.conf
              setf hostconf
    */etc/hosts.allow
              setf hostsaccess
    */etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.htt     setf httest
    *.htb     setf httest
    *.icn     setf icon
    *.idl     call s:FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call s:ProtoCheck('indent')
    *.pro     call s:ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    */etc/initng/*/*.i
              setf initng
    *.ii      setf initng
    upstream.dat\c
              setf upstreamdat
    upstream.*.dat\c
              setf upstreamdat
    *.upstream.dat\c
              setf upstreamdat
    upstream.log\c
              setf upstreamlog
    upstream.*.log\c
              setf upstreamlog
    *.upstream.log\c
              setf upstreamlog
    upstreaminstall.log\c
              setf upstreaminstalllog
    upstreaminstall.*.log\c
              setf upstreaminstalllog
    *.upstreaminstall.log\c
              setf upstreaminstalllog
    usserver.log\c
              setf usserverlog
    usserver.*.log\c
              setf usserverlog
    *.usserver.log\c
              setf usserverlog
    usw2kagt.log\c
              setf usw2kagtlog
    usw2kagt.*.log\c
              setf usw2kagtlog
    *.usw2kagt.log\c
              setf usw2kagtlog
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.jsx     setf javascript
    *.json    setf javascript
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    *.clp     setf jess
    *.jgr     setf jgraph
    *.jov     setf jovial
    *.j73     setf jovial
    *.jovial  setf jovial
    *.kix     setf kix
    *.k       setf kwt
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    */etc/limits
              setf limits
    */etc/*limits.conf
              setf limits
    */etc/*limits.d/*.conf
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.lex     setf lex
    *.l       setf lex
    */etc/libao.conf
              setf libao
    */.libao  setf libao
    */etc/sensors.conf
              setf sensors
    */etc/sensors3.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf setf lilo
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.cl      setf lisp
    *.jl      setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    */etc/login.access
              setf loginaccess
    */etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\\\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    */etc/mail/aliases
              setf mailaliases
    */etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.page    setf mallard
    *.man     setf man
    */etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    *.mdwn    setf markdown
    README.md setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.m       call s:FTm()
    *.nb      setf mma
    *.mel     setf mel
    hg-editor-*.txt
              setf hgcommit
    *.hgrc    setf cfg
    *hgrc     setf cfg
    */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*}
              setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mms     call s:FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.md      setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    */etc/modules.conf
              setf modconf
    */etc/modules
              setf modconf
    */etc/conf.modules
              setf modconf
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    */etc/Muttrc.d/*
              call s:StarSetf('muttrc')
    *.rc      setf rc
    *.rch     setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    */etc/nanorc
              setf nanorc
    .nanorc   setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    .netrc    setf netrc
    *.ninja   setf ninja
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call s:FTnroff()
    *.mm      call s:FTmm()
    *.nqc     setf nqc
    *.nsi     setf nsis
    *.nsh     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    .ocamlinit
              setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    */etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    */etc/passwd
              setf passwd
    */etc/passwd-
              setf passwd
    */etc/passwd.edit
              setf passwd
    */etc/shadow
              setf passwd
    */etc/shadow-
              setf passwd
    */etc/shadow.edit
              setf passwd
    */var/backups/passwd.bak
              setf passwd
    */var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pl      call s:FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.lpc     setf pike
    *.ulpc    setf pike
    *.pmod    setf pike
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    *.pli     setf pli
    *.pl1     setf pli
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call s:FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call s:FTprogress_cweb()
    *.i       call s:FTprogress_asm()
    *.p       call s:FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    *.proto   setf proto
    */etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    *.ptl     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rex     setf rexx
    *.orx     setf rexx
    *.rxo     setf rexx
    *.rxj     setf rexx
    *.jrexx   setf rexx
    *.rexxj   setf rexx
    *.rexx    setf rexx
    *.testGroup
              setf rexx
    *.testUnit
              setf rexx
    *.s       setf r
    *.rd      setf rhelp
    *.rnw     setf rnoweb
    *.snw     setf rnoweb
    *.r       call s:FTr()
    *.R       call s:FTr()
    .reminders
              setf remind
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rng     setf rng
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gemspec setf ruby
    *.ru      setf ruby
    Gemfile   setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    sendmail.cf
              setf sm
    *.mc      call s:McSetf()
    */etc/services
              setf services
    */etc/slp.conf
              setf slpconf
    */etc/slp.reg
              setf slpreg
    */etc/slp.spi
              setf slpspi
    */etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call SetFileTypeSH("bash")
    bashrc    call SetFileTypeSH("bash")
    bash.bashrc
              call SetFileTypeSH("bash")
    .bash_profile*
              call SetFileTypeSH("bash")
    .bash_logout*
              call SetFileTypeSH("bash")
    *.bash    call SetFileTypeSH("bash")
    *.ebuild  call SetFileTypeSH("bash")
    .kshrc*   call SetFileTypeSH("ksh")
    *.ksh     call SetFileTypeSH("ksh")
    */etc/profile
              call SetFileTypeSH(getline(1))
    .profile* call SetFileTypeSH(getline(1))
    *.sh      call SetFileTypeSH(getline(1))
    *.env     call SetFileTypeSH(getline(1))
    .tcshrc*  call SetFileTypeShell("tcsh")
    *.tcsh    call SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call SetFileTypeShell("tcsh")
    tcsh.login
              call SetFileTypeShell("tcsh")
    .login*   call s:CSH()
    .cshrc*   call s:CSH()
    csh.cshrc call s:CSH()
    csh.login call s:CSH()
    csh.logout
              call s:CSH()
    *.csh     call s:CSH()
    .alias    call s:CSH()
    .zprofile setf zsh
    */etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    *.rkt     setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call s:FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call s:SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.class   setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    */etc/sysctl.conf
              setf sysctl
    */etc/sysctl.d/*.conf
              setf sysctl
    *.sdc     setf sdc
    */etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !s:FTnroff() && !s:FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call s:FTtex()
    tex/context/*/*.tex
              setf context
    *.mkii    setf context
    *.mkiv    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    *.tpp     setf tpp
    *.treetop setf treetop
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.twig    setf twig
    *.uit     setf uil
    *.uil     setf uil
    */etc/udev/udev.conf
              setf udevconf
    */etc/udev/permissions.d/*.permissions
              setf udevperm
    */etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    */etc/updatedb.conf
              setf updatedb
    */usr/share/upstart/*.conf
              setf upstart
    */usr/share/upstart/*.override
              setf upstart
    */etc/init/*.conf
              setf upstart
    */etc/init/*.override
              setf upstart
    */.init/*.conf
              setf upstart
    */.init/*.override
              setf upstart
    */.config/upstart/*.conf
              setf upstart
    */.config/upstart/*.override
              setf upstart
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call s:FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
    */xorg.conf.d/*.conf
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    */etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !s:FTnroff() | setf xmath | endif
    *.xml     call s:FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ts      setf xml
    *.ui      setf xml
    *.tpm     setf xml
    */etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *.xul     setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.y       call s:FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    */etc/yum.conf
              setf dosini
    *.zu      setf zimbu
    *.dtml    call s:FThtml()
    *.pt      call s:FThtml()
    *.cpt     call s:FThtml()
    *.zsql    call s:SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    */etc/apache2/*.conf*
              call s:StarSetf('apache')
    */etc/apache2/conf.*/*
              call s:StarSetf('apache')
    */etc/apache2/mods-*/*
              call s:StarSetf('apache')
    */etc/apache2/sites-*/*
              call s:StarSetf('apache')
    */etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    */etc/cron.d/*
              call s:StarSetf('crontab')
    */etc/dnsmasq.d/*
              call s:StarSetf('dnsmasq')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    */tmp/lltmp*
              call s:StarSetf('gedcom')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    Kconfig.* call s:StarSetf('kconfig')
    lilo.conf*
              call s:StarSetf('lilo')
    */etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    mutt[[:alnum:]._-]\\\{6\}
              setf mail
    */etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    */etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    tmac.*    call s:StarSetf('nroff')
    */etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *.rdf     call s:Redif()
    .reminders*
              call s:StarSetf('remind')
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    */etc/xinetd.d/*
              call s:StarSetf('xinetd')
    */etc/yum.repos.d/*
              call s:StarSetf('dosini')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *.txt     setf text
    *.text    setf text
    *.ls      set filetype=ls
    *Slakefile
              set filetype=ls
    *.rb      call s:setf('ruby')
    *.rbw     call s:setf('ruby')
    *.gemspec call s:setf('ruby')
    *.builder call s:setf('ruby')
    *.rxml    call s:setf('ruby')
    *.rjs     call s:setf('ruby')
    *.ruby    call s:setf('ruby')
    [rR]akefile
              call s:setf('ruby')
    *.rake    call s:setf('ruby')
    [rR]antfile
              call s:setf('ruby')
    *.rant    call s:setf('ruby')
    .irbrc    call s:setf('ruby')
    irbrc     call s:setf('ruby')
    .pryrc    call s:setf('ruby')
    *.ru      call s:setf('ruby')
    Capfile   call s:setf('ruby')
    Gemfile   call s:setf('ruby')
    Guardfile call s:setf('ruby')
    .Guardfile
              call s:setf('ruby')
    Cheffile  call s:setf('ruby')
    Berksfile call s:setf('ruby')
    [vV]agrantfile
              call s:setf('ruby')
    .autotest call s:setf('ruby')
    *.erb     call s:setf('eruby')
    *.rhtml   call s:setf('eruby')
    [tT]horfile
              call s:setf('ruby')
    *.thor    call s:setf('ruby')
    *.rabl    call s:setf('ruby')
    *.jbuilder
              call s:setf('ruby')
    Puppetfile
              call s:setf('ruby')
    [Bb]uildfile
              call s:setf('ruby')
    Appraisals
              call s:setf('ruby')
    Podfile   call s:setf('ruby')
    *.podspec call s:setf('ruby')
    *.js      setf javascript
    *.jsm     setf javascript
    Jakefile  setf javascript
    *         call s:SelectJavascript()
    *.markdown
              if &ft =~# '^\%(conf\|modula2\)$' |   set ft=markdown | else |   setf markdown | endif
    *.md      if &ft =~# '^\%(conf\|modula2\)$' |   set ft=markdown | else |   setf markdown | endif
    *.mdown   if &ft =~# '^\%(conf\|modula2\)$' |   set ft=markdown | else |   setf markdown | endif
    *.mkd     if &ft =~# '^\%(conf\|modula2\)$' |   set ft=markdown | else |   setf markdown | endif
    *.mkdn    if &ft =~# '^\%(conf\|modula2\)$' |   set ft=markdown | else |   setf markdown | endif
    *.scss    set filetype=scss.css
    *.coffee  set filetype=coffee
    *Cakefile set filetype=coffee
    *.coffeekup
              set filetype=coffee
    *.ck      set filetype=coffee
    *._coffee set filetype=coffee
    *         call s:DetectCoffee()
    *.csv     set filetype=csv
    *.dat     set filetype=csv
    *.tsv     set filetype=csv
    *.tab     set filetype=csv
    *.git/{,modules/**/}{COMMIT_EDIT,TAG_EDIT,MERGE_,}MSG
              set ft=gitcommit
    *.git/config
              set ft=gitconfig
    .gitconfig
              set ft=gitconfig
    .gitmodules
              set ft=gitconfig
    */.config/git/config
              set ft=gitconfig
    *.git/modules/**/config
              set ft=gitconfig
    git-rebase-todo
              set ft=gitrebase
    .gitsendemail.*
              set ft=gitsendemail
    *.git/**  if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   set ft=git | endif
    *         if getline(1) =~ '^\(commit\|tree\|object\) \x\{40\}\>\|^tag \S\+$' |   set ft=git | endif
              if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
BufNewFile
    *.ejs     set filetype=html
    *.snippet set ft=snippet
    *.snippets
              set ft=snippets
    *         :call UpdateMode()
railsPluginDetect  BufNewFile
    *         if RailsDetect(expand("<afile>:p")) && empty(&filetype) |   call rails#buffer_setup() | endif
    *.yml.example
              set filetype=yaml
    *.rjs     if &filetype !=# 'ruby' | set filetype=ruby | endif
    *.rxml    if &filetype !=# 'ruby' | set filetype=ruby | endif
    *.builder if &filetype !=# 'ruby' | set filetype=ruby | endif
    *.jbuilder
              if &filetype !=# 'ruby' | set filetype=ruby | endif
    *.ruby    if &filetype !=# 'ruby' | set filetype=ruby | endif
BuffergatorMRU  BufNewFile
    *         call BuffergatorUpdateMRU(expand('<abuf>'))
shebang_chmod  BufNewFile
    *         let b:brand_new_file = 1
fugitive  BufNewFile
    *         call fugitive#detect(expand('<amatch>:p'))
fugitive_temp  BufNewFile
    *         if has_key(s:temp_files,expand('<afile>:p')) |   let b:git_dir = s:temp_files[expand('<afile>:p')].dir |   let b:git_type = 'temp' |   let b:git_args = s:temp_files[expand('<afile>:p')].args |   call fugitive#detect(expand('<afile>:p')) |   setlocal bufhidden=delete |   nnoremap <buffer> <silent> q    :<C-U>bdelete<CR>| endif
vimwiki  BufNewFile
    *.wiki    call s:setup_filetype()
filetypedetect  BufRead
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-new
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-bak
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    *.inp     call s:Check_inp()
    *.aap     setf aap
    */etc/a2ps.cfg
              setf a2ps
    */etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    proftpd.conf*
              call s:StarSetf('apachestyle')
    .htaccess setf apache
    */etc/httpd/*.conf
              setf apache
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    .asoundrc setf alsaconf
    */usr/share/alsa/alsa.conf
              setf alsaconf
    */etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    apt.conf  setf aptconf
    */.aptitude/config
              setf aptconf
    */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf}
              setf aptconf
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asciidoc
              setf asciidoc
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    */boot/grub/menu.lst
              setf grub
    */boot/grub/grub.conf
              setf grub
    */etc/grub.conf
              setf grub
    *.asm     call s:FTasm()
    *.[sS]    call s:FTasm()
    *.[aA]    call s:FTasm()
    *.mac     call s:FTasm()
    *.lst     call s:FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call s:FTVB("basic")
    *.vb      setf vb
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call s:FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named.conf
              setf named
    rndc.conf setf named
    named.root
              setf bindzone
    *.db      call s:BindzoneCheck('')
    *.bl      setf blank
    */etc/blkid.tab
              setf xml
    */etc/blkid.tab.old
              setf xml
    *.c       call s:FTlpc()
    calendar  setf calendar
    *.cs      setf cs
    *.csdl    setf csdl
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    */etc/cdrdao.conf
              setf cdrdaoconf
    */etc/defaults/cdrdao
              setf cdrdaoconf
    */etc/default/cdrdao
              setf cdrdaoconf
    .cdrdao   setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.h       call s:FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call s:FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call s:FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    *.clj     setf clojure
    *.cljs    setf clojure
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    */.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    */etc/apt/sources.list
              setf debsources
    */etc/apt/sources.list.d/*.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    */etc/dnsmasq.conf
              setf dnsmasq
    *.desc    setf desc
    *.d       call s:DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   setf diff
    .dir_colors
              setf dircolors
    .dircolors
              setf dircolors
    */etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call s:BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.dts     setf dts
    *.dtsi    setf dts
    *.ed\(f\|if\|n\|o\)
              setf edif
    *.ecd     setf ecd
    *.e       call s:FTe()
    *.E       call s:FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fal     setf falcon
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.frt     setf reva
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    *.git/COMMIT_EDITMSG
              setf gitcommit
    *.git/MERGE_MSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    .gitmodules
              setf gitconfig
    *.git/modules/*/COMMIT_EDITMSG
              setf gitcommit
    *.git/modules/*/config
              setf gitconfig
    */.config/git/config
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/*   if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    */usr/*/gnupg/options.skel
              setf gpg
    gnashrc   setf gnash
    .gnashrc  setf gnash
    gnashpluginrc
              setf gnash
    .gnashpluginrc
              setf gnash
    gitolite.conf
              setf gitolite
    */gitolite-admin/conf/*
              call s:StarSetf('gitolite')
    {,.}gitolite.rc
              setf perl
    example.gitolite.rc
              setf perl
    *.gpi     setf gnuplot
    *.gs      setf grads
    *.gretl   setf gretl
    *.groovy  setf groovy
    *.gsp     setf gsp
    */etc/group
              setf group
    */etc/group-
              setf group
    */etc/group.edit
              setf group
    */etc/gshadow
              setf group
    */etc/gshadow-
              setf group
    */etc/gshadow.edit
              setf group
    */var/backups/group.bak
              setf group
    */var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.rs      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.t.html  setf tilde
    *.html    call s:FThtml()
    *.htm     call s:FThtml()
    *.shtml   call s:FThtml()
    *.stm     call s:FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf htmlcheetah
    */etc/host.conf
              setf hostconf
    */etc/hosts.allow
              setf hostsaccess
    */etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.htt     setf httest
    *.htb     setf httest
    *.icn     setf icon
    *.idl     call s:FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call s:ProtoCheck('indent')
    *.pro     call s:ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    */etc/initng/*/*.i
              setf initng
    *.ii      setf initng
    upstream.dat\c
              setf upstreamdat
    upstream.*.dat\c
              setf upstreamdat
    *.upstream.dat\c
              setf upstreamdat
    upstream.log\c
              setf upstreamlog
    upstream.*.log\c
              setf upstreamlog
    *.upstream.log\c
              setf upstreamlog
    upstreaminstall.log\c
              setf upstreaminstalllog
    upstreaminstall.*.log\c
              setf upstreaminstalllog
    *.upstreaminstall.log\c
              setf upstreaminstalllog
    usserver.log\c
              setf usserverlog
    usserver.*.log\c
              setf usserverlog
    *.usserver.log\c
              setf usserverlog
    usw2kagt.log\c
              setf usw2kagtlog
    usw2kagt.*.log\c
              setf usw2kagtlog
    *.usw2kagt.log\c
              setf usw2kagtlog
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.jsx     setf javascript
    *.json    setf javascript
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    *.clp     setf jess
    *.jgr     setf jgraph
    *.jov     setf jovial
    *.j73     setf jovial
    *.jovial  setf jovial
    *.kix     setf kix
    *.k       setf kwt
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    */etc/limits
              setf limits
    */etc/*limits.conf
              setf limits
    */etc/*limits.d/*.conf
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.lex     setf lex
    *.l       setf lex
    */etc/libao.conf
              setf libao
    */.libao  setf libao
    */etc/sensors.conf
              setf sensors
    */etc/sensors3.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf setf lilo
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.cl      setf lisp
    *.jl      setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    */etc/login.access
              setf loginaccess
    */etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\\\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    */etc/mail/aliases
              setf mailaliases
    */etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.page    setf mallard
    *.man     setf man
    */etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    *.mdwn    setf markdown
    README.md setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.m       call s:FTm()
    *.nb      setf mma
    *.mel     setf mel
    hg-editor-*.txt
              setf hgcommit
    *.hgrc    setf cfg
    *hgrc     setf cfg
    */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*}
              setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mms     call s:FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.md      setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    */etc/modules.conf
              setf modconf
    */etc/modules
              setf modconf
    */etc/conf.modules
              setf modconf
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    */etc/Muttrc.d/*
              call s:StarSetf('muttrc')
    *.rc      setf rc
    *.rch     setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    */etc/nanorc
              setf nanorc
    .nanorc   setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    .netrc    setf netrc
    *.ninja   setf ninja
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call s:FTnroff()
    *.mm      call s:FTmm()
    *.nqc     setf nqc
    *.nsi     setf nsis
    *.nsh     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    .ocamlinit
              setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    */etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    */etc/passwd
              setf passwd
    */etc/passwd-
              setf passwd
    */etc/passwd.edit
              setf passwd
    */etc/shadow
              setf passwd
    */etc/shadow-
              setf passwd
    */etc/shadow.edit
              setf passwd
    */var/backups/passwd.bak
              setf passwd
    */var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pl      call s:FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.lpc     setf pike
    *.ulpc    setf pike
    *.pmod    setf pike
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    *.pli     setf pli
    *.pl1     setf pli
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call s:FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call s:FTprogress_cweb()
    *.i       call s:FTprogress_asm()
    *.p       call s:FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    *.proto   setf proto
    */etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    *.ptl     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rex     setf rexx
    *.orx     setf rexx
    *.rxo     setf rexx
    *.rxj     setf rexx
    *.jrexx   setf rexx
    *.rexxj   setf rexx
    *.rexx    setf rexx
    *.testGroup
              setf rexx
    *.testUnit
              setf rexx
    *.s       setf r
    *.rd      setf rhelp
    *.rnw     setf rnoweb
    *.snw     setf rnoweb
    *.r       call s:FTr()
    *.R       call s:FTr()
    .reminders
              setf remind
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rng     setf rng
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gemspec setf ruby
    *.ru      setf ruby
    Gemfile   setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    sendmail.cf
              setf sm
    *.mc      call s:McSetf()
    */etc/services
              setf services
    */etc/slp.conf
              setf slpconf
    */etc/slp.reg
              setf slpreg
    */etc/slp.spi
              setf slpspi
    */etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call SetFileTypeSH("bash")
    bashrc    call SetFileTypeSH("bash")
    bash.bashrc
              call SetFileTypeSH("bash")
    .bash_profile*
              call SetFileTypeSH("bash")
    .bash_logout*
              call SetFileTypeSH("bash")
    *.bash    call SetFileTypeSH("bash")
    *.ebuild  call SetFileTypeSH("bash")
    .kshrc*   call SetFileTypeSH("ksh")
    *.ksh     call SetFileTypeSH("ksh")
    */etc/profile
              call SetFileTypeSH(getline(1))
    .profile* call SetFileTypeSH(getline(1))
    *.sh      call SetFileTypeSH(getline(1))
    *.env     call SetFileTypeSH(getline(1))
    .tcshrc*  call SetFileTypeShell("tcsh")
    *.tcsh    call SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call SetFileTypeShell("tcsh")
    tcsh.login
              call SetFileTypeShell("tcsh")
    .login*   call s:CSH()
    .cshrc*   call s:CSH()
    csh.cshrc call s:CSH()
    csh.login call s:CSH()
    csh.logout
              call s:CSH()
    *.csh     call s:CSH()
    .alias    call s:CSH()
    .zprofile setf zsh
    */etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    *.rkt     setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call s:FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call s:SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.class   setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    */etc/sysctl.conf
              setf sysctl
    */etc/sysctl.d/*.conf
              setf sysctl
    *.sdc     setf sdc
    */etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !s:FTnroff() && !s:FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call s:FTtex()
    tex/context/*/*.tex
              setf context
    *.mkii    setf context
    *.mkiv    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    *.tpp     setf tpp
    *.treetop setf treetop
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.twig    setf twig
    *.uit     setf uil
    *.uil     setf uil
    */etc/udev/udev.conf
              setf udevconf
    */etc/udev/permissions.d/*.permissions
              setf udevperm
    */etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    */etc/updatedb.conf
              setf updatedb
    */usr/share/upstart/*.conf
              setf upstart
    */usr/share/upstart/*.override
              setf upstart
    */etc/init/*.conf
              setf upstart
    */etc/init/*.override
              setf upstart
    */.init/*.conf
              setf upstart
    */.init/*.override
              setf upstart
    */.config/upstart/*.conf
              setf upstart
    */.config/upstart/*.override
              setf upstart
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call s:FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
    */xorg.conf.d/*.conf
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    */etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !s:FTnroff() | setf xmath | endif
    *.xml     call s:FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ts      setf xml
    *.ui      setf xml
    *.tpm     setf xml
    */etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *.xul     setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.y       call s:FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    */etc/yum.conf
              setf dosini
    *.zu      setf zimbu
    *.dtml    call s:FThtml()
    *.pt      call s:FThtml()
    *.cpt     call s:FThtml()
    *.zsql    call s:SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    */etc/apache2/*.conf*
              call s:StarSetf('apache')
    */etc/apache2/conf.*/*
              call s:StarSetf('apache')
    */etc/apache2/mods-*/*
              call s:StarSetf('apache')
    */etc/apache2/sites-*/*
              call s:StarSetf('apache')
    */etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    */etc/cron.d/*
              call s:StarSetf('crontab')
    */etc/dnsmasq.d/*
              call s:StarSetf('dnsmasq')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    */tmp/lltmp*
              call s:StarSetf('gedcom')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    Kconfig.* call s:StarSetf('kconfig')
    lilo.conf*
              call s:StarSetf('lilo')
    */etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    mutt[[:alnum:]._-]\\\{6\}
              setf mail
    */etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    */etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    tmac.*    call s:StarSetf('nroff')
    */etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *.rdf     call s:Redif()
    .reminders*
              call s:StarSetf('remind')
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    */etc/xinetd.d/*
              call s:StarSetf('xinetd')
    */etc/yum.repos.d/*
              call s:StarSetf('dosini')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *.txt     setf text
    *.text    setf text
    *.ls      set filetype=ls
    *Slakefile
              set filetype=ls
    *.rb      call s:setf('ruby')
    *.rbw     call s:setf('ruby')
    *.gemspec call s:setf('ruby')
    *.builder call s:setf('ruby')
    *.rxml    call s:setf('ruby')
    *.rjs     call s:setf('ruby')
    *.ruby    call s:setf('ruby')
    [rR]akefile
              call s:setf('ruby')
    *.rake    call s:setf('ruby')
    [rR]antfile
              call s:setf('ruby')
    *.rant    call s:setf('ruby')
    .irbrc    call s:setf('ruby')
    irbrc     call s:setf('ruby')
    .pryrc    call s:setf('ruby')
    *.ru      call s:setf('ruby')
    Capfile   call s:setf('ruby')
    Gemfile   call s:setf('ruby')
    Guardfile call s:setf('ruby')
    .Guardfile
              call s:setf('ruby')
    Cheffile  call s:setf('ruby')
    Berksfile call s:setf('ruby')
    [vV]agrantfile
              call s:setf('ruby')
    .autotest call s:setf('ruby')
    *.erb     call s:setf('eruby')
    *.rhtml   call s:setf('eruby')
    [tT]horfile
              call s:setf('ruby')
    *.thor    call s:setf('ruby')
    *.rabl    call s:setf('ruby')
    *.jbuilder
              call s:setf('ruby')
    Puppetfile
              call s:setf('ruby')
    [Bb]uildfile
              call s:setf('ruby')
    Appraisals
              call s:setf('ruby')
    Podfile   call s:setf('ruby')
    *.podspec call s:setf('ruby')
    *.js      setf javascript
    *.jsm     setf javascript
    Jakefile  setf javascript
    *         call s:SelectJavascript()
    *.markdown
              if &ft =~# '^\%(conf\|modula2\)$' |   set ft=markdown | else |   setf markdown | endif
    *.md      if &ft =~# '^\%(conf\|modula2\)$' |   set ft=markdown | else |   setf markdown | endif
    *.mdown   if &ft =~# '^\%(conf\|modula2\)$' |   set ft=markdown | else |   setf markdown | endif
    *.mkd     if &ft =~# '^\%(conf\|modula2\)$' |   set ft=markdown | else |   setf markdown | endif
    *.mkdn    if &ft =~# '^\%(conf\|modula2\)$' |   set ft=markdown | else |   setf markdown | endif
    *.scss    set filetype=scss.css
    *.coffee  set filetype=coffee
    *Cakefile set filetype=coffee
    *.coffeekup
              set filetype=coffee
    *.ck      set filetype=coffee
    *._coffee set filetype=coffee
    *         call s:DetectCoffee()
    *.csv     set filetype=csv
    *.dat     set filetype=csv
    *.tsv     set filetype=csv
    *.tab     set filetype=csv
    *.git/{,modules/**/}{COMMIT_EDIT,TAG_EDIT,MERGE_,}MSG
              set ft=gitcommit
    *.git/config
              set ft=gitconfig
    .gitconfig
              set ft=gitconfig
    .gitmodules
              set ft=gitconfig
    */.config/git/config
              set ft=gitconfig
    *.git/modules/**/config
              set ft=gitconfig
    git-rebase-todo
              set ft=gitrebase
    .gitsendemail.*
              set ft=gitsendemail
    *.git/**  if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   set ft=git | endif
    *         if getline(1) =~ '^\(commit\|tree\|object\) \x\{40\}\>\|^tag \S\+$' |   set ft=git | endif
              if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
BufRead
    *.ejs     set filetype=html
    *.snippet set ft=snippet
    *.snippets
              set ft=snippets
    *         :call UpdateMode()
railsPluginDetect  BufRead
    *         if RailsDetect(expand("<afile>:p")) && empty(&filetype) |   call rails#buffer_setup() | endif
    *.yml.example
              set filetype=yaml
    *.rjs     if &filetype !=# 'ruby' | set filetype=ruby | endif
    *.rxml    if &filetype !=# 'ruby' | set filetype=ruby | endif
    *.builder if &filetype !=# 'ruby' | set filetype=ruby | endif
    *.jbuilder
              if &filetype !=# 'ruby' | set filetype=ruby | endif
    *.ruby    if &filetype !=# 'ruby' | set filetype=ruby | endif
    *.log     if RailsDetect() | set filetype=railslog | endif
BuffergatorMRU  BufRead
    *         call BuffergatorUpdateMRU(expand('<abuf>'))
fugitive  BufRead
    *         call fugitive#detect(expand('<amatch>:p'))
fugitive_blame  BufRead
    *.fugitiveblame
              setfiletype fugitiveblame
fugitive_temp  BufRead
    *         if has_key(s:temp_files,expand('<afile>:p')) |   let b:git_dir = s:temp_files[expand('<afile>:p')].dir |   let b:git_type = 'temp' |   let b:git_args = s:temp_files[expand('<afile>:p')].args |   call fugitive#detect(expand('<afile>:p')) |   setlocal bufhidden=delete |   nnoremap <buffer> <silent> q    :<C-U>bdelete<CR>| endif
NERDCommenter  BufRead
    *         :call s:SetUpForNewFiletype(&filetype, 0)
syntastic  BufRead
    *         call s:BufReadPostHook()
vimwiki  BufRead
    *.wiki    call s:setup_filetype()
gzip  BufRead
    *.gz      call gzip#read("gzip -dn")
    *.bz2     call gzip#read("bzip2 -d")
    *.Z       call gzip#read("uncompress")
    *.lzma    call gzip#read("lzma -d")
    *.xz      call gzip#read("xz -d")
BufRead
    *         unlet! b:airline_file_in_root
gzip  BufReadPre
    *.gz      setlocal bin
    *.bz2     setlocal bin
    *.Z       setlocal bin
    *.lzma    setlocal bin
    *.xz      setlocal bin
fugitive_files  BufReadCmd
    index{,.lock}
              if fugitive#is_git_dir(expand('<amatch>:p:h')) |   exe s:BufReadIndex() | elseif filereadable(expand('<amatch>')) |   read <amatch> |   1delete | endif
    fugitive://**//[0-3]/**
              exe s:BufReadIndexFile()
    fugitive://**//[0-9a-f][0-9a-f]*
              exe s:BufReadObject()
Network  BufReadCmd
    file://*  call netrw#FileUrlRead(expand("<amatch>"))
    ftp://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    http://*  exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    https://* exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau BufReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(2,expand("<amatch>"))|exe "sil doau BufReadPost ".fnameescape(expand("<amatch>"))
tar  BufReadCmd
    tarfile::*
              call tar#Read(expand("<amatch>"), 1)
    tarfile::*/*
              call tar#Read(expand("<amatch>"), 1)
    *.tar.gz  call tar#Browse(expand("<amatch>"))
    *.tar     call tar#Browse(expand("<amatch>"))
    *.lrp     call tar#Browse(expand("<amatch>"))
    *.tar.bz2 call tar#Browse(expand("<amatch>"))
    *.tar.Z   call tar#Browse(expand("<amatch>"))
    *.tgz     call tar#Browse(expand("<amatch>"))
    *.tar.lzma
              call tar#Browse(expand("<amatch>"))
    *.tar.xz  call tar#Browse(expand("<amatch>"))
    *.txz     call tar#Browse(expand("<amatch>"))
zip  BufReadCmd
    zipfile:* call zip#Read(expand("<amatch>"), 1)
    zipfile:*/*
              call zip#Read(expand("<amatch>"), 1)
    *.zip     call zip#Browse(expand("<amatch>"))
    *.jar     call zip#Browse(expand("<amatch>"))
    *.xpi     call zip#Browse(expand("<amatch>"))
    *.ja      call zip#Browse(expand("<amatch>"))
    *.war     call zip#Browse(expand("<amatch>"))
    *.ear     call zip#Browse(expand("<amatch>"))
    *.celzip  call zip#Browse(expand("<amatch>"))
    *.oxt     call zip#Browse(expand("<amatch>"))
    *.kmz     call zip#Browse(expand("<amatch>"))
    *.wsz     call zip#Browse(expand("<amatch>"))
    *.xap     call zip#Browse(expand("<amatch>"))
    *.docx    call zip#Browse(expand("<amatch>"))
    *.docm    call zip#Browse(expand("<amatch>"))
    *.dotx    call zip#Browse(expand("<amatch>"))
    *.dotm    call zip#Browse(expand("<amatch>"))
    *.potx    call zip#Browse(expand("<amatch>"))
    *.potm    call zip#Browse(expand("<amatch>"))
    *.ppsx    call zip#Browse(expand("<amatch>"))
    *.ppsm    call zip#Browse(expand("<amatch>"))
    *.pptx    call zip#Browse(expand("<amatch>"))
    *.pptm    call zip#Browse(expand("<amatch>"))
    *.ppam    call zip#Browse(expand("<amatch>"))
    *.sldx    call zip#Browse(expand("<amatch>"))
    *.thmx    call zip#Browse(expand("<amatch>"))
    *.xlam    call zip#Browse(expand("<amatch>"))
    *.xlsx    call zip#Browse(expand("<amatch>"))
    *.xlsm    call zip#Browse(expand("<amatch>"))
    *.xlsb    call zip#Browse(expand("<amatch>"))
    *.xltx    call zip#Browse(expand("<amatch>"))
    *.xltm    call zip#Browse(expand("<amatch>"))
    *.xlam    call zip#Browse(expand("<amatch>"))
    *.crtx    call zip#Browse(expand("<amatch>"))
    *.vdw     call zip#Browse(expand("<amatch>"))
    *.glox    call zip#Browse(expand("<amatch>"))
    *.gcsx    call zip#Browse(expand("<amatch>"))
    *.gqsx    call zip#Browse(expand("<amatch>"))
airline  BufUnload
    *         call <sid>on_window_changed()
vimwiki  BufHidden
    *.wiki    call s:setup_buffer_leave()
fugitive_diff  BufWinEnter
    *         if &diff && s:diff_window_count() == 1 && getbufvar(+expand('<abuf>'), 'git_dir') !=# '' | call s:diffoff() | endif
syntastic  BufWinEnter
    *         call s:BufWinEnterHook()
BufWinEnter
    *         match ExtraWhitespace /\s\+$/
vimwiki  BufWinEnter
    *.wiki    call s:setup_buffer_enter()
airline  BufWinEnter
    *         call <sid>on_window_changed()
fugitive  BufWinLeave
    *         execute getwinvar(+bufwinnr(+expand('<abuf>')), 'fugitive_leave')
fugitive_diff  BufWinLeave
    *         if &diff && s:diff_window_count() == 2 && getbufvar(+expand('<abuf>'), 'git_dir') !=# '' | call s:diffoff_all(getbufvar(+expand('<abuf>'), 'git_dir')) | endif
NERDTree  BufWinLeave
    NERD_tree_*
              call nerdtree#saveScreenState()
gitgutter  BufWritePost
    *         if gettabvar(tabpagenr(), 'gitgutter_didtabenter')|   call settabvar(tabpagenr(), 'gitgutter_didtabenter', 0)| else|   call gitgutter#process_buffer(utility#current_file(), 0)| endif
BuffergatorMRU  BufWritePost
    *         call BuffergatorUpdateMRU(expand('<abuf>'))
CtrlPMRUF  BufWritePost
    *         cal s:record(expand('<abuf>', 1))
shebang_chmod  BufWritePost
    *         unlet! b:brand_new_file
              if exists('b:chmod_post') && executable('chmod') |   silent! execute '!chmod '.b:chmod_post.' "<afile>"' |   edit |   unlet b:chmod_post | endif
syntastic  BufWritePost
    *         call s:BufWritePostHook()
airline  BufWritePost
    */autoload/airline/themes/*.vim
              exec 'source '.split(globpath(&rtp, 'autoload/airline/themes/'.g:airline_theme.'.vim', 1), "\n")[0] | call airline#load_theme()
gzip  BufWritePost
    *.gz      call gzip#write("gzip")
    *.bz2     call gzip#write("bzip2")
    *.Z       call gzip#write("compress -f")
    *.lzma    call gzip#write("lzma -z")
    *.xz      call gzip#write("xz -z")
airline_whitespace  BufWritePost
    *         unlet! b:airline_whitespace_check
railsPluginAuto  BufWritePost
    */config/database.yml
              call rails#cache_clear("dbext_settings")
    */config/projections.json
              call rails#cache_clear("projections")
    */test/test_helper.rb
              call rails#cache_clear("user_assertions")
    */config/routes.rb
              call rails#cache_clear("named_routes")
    */config/application.rb
              call rails#cache_clear("default_locale")
              call rails#cache_clear("stylesheet_suffix")
    */config/environments/*.rb
              call rails#cache_clear("environments")
    */tasks/**.rake
              call rails#cache_clear("rake_tasks")
    */generators/**
              call rails#cache_clear("generators")
shebang_chmod  BufWrite
    *         if exists('b:brand_new_file') |   if getline(1) =~ '^#!' |     let b:chmod_post = '+x' |   endif | endif
fugitive_files  BufWriteCmd
    fugitive://**//[0-3]/**
              exe s:BufWriteIndexFile()
Network  BufWriteCmd
    ftp://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau BufWritePre ".fnameescape(expand("<amatch>"))|exe 'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau BufWritePost ".fnameescape(expand("<amatch>"))
tar  BufWriteCmd
    tarfile::*
              call tar#Write(expand("<amatch>"))
    tarfile::*/*
              call tar#Write(expand("<amatch>"))
zip  BufWriteCmd
    zipfile:* call zip#Write(expand("<amatch>"))
    zipfile:*/*
              call zip#Write(expand("<amatch>"))
fugitive  CmdwinEnter
    *         call fugitive#detect(expand('#:p'))
airline  CmdwinEnter
    *         call airline#add_statusline_func('airline#cmdwinenter') | call <sid>on_window_changed()
airline  CmdwinLeave
    *         call airline#remove_statusline_func('airline#cmdwinenter')
CmdwinLeave
    *         unlet! b:airline_head
gitgutter  ColorScheme
    *         call highlight#define_sign_column_highlight() | call highlight#define_highlights()
ColorScheme
    *         highlight ExtraWhitespace ctermbg=red guibg=red
vimwiki  ColorScheme
    *.wiki    call s:setup_cleared_syntax()
airline  ColorScheme
    *         call <sid>on_colorscheme_changed()
gzip  FileAppendPost
    *.gz      call gzip#write("gzip")
    *.bz2     call gzip#write("bzip2")
    *.Z       call gzip#write("compress -f")
    *.lzma    call gzip#write("lzma -z")
    *.xz      call gzip#write("xz -z")
gzip  FileAppendPre
    *.gz      call gzip#appre("gzip -dn")
    *.bz2     call gzip#appre("bzip2 -d")
    *.Z       call gzip#appre("uncompress")
    *.lzma    call gzip#appre("lzma -d")
    *.xz      call gzip#appre("xz -d")
gitgutter  FileChangedShellPost
    *         if gettabvar(tabpagenr(), 'gitgutter_didtabenter')|   call settabvar(tabpagenr(), 'gitgutter_didtabenter', 0)| else|   call gitgutter#process_buffer(utility#current_file(), 0)| endif
FileReadPost
    *         :call UpdateMode()
gzip  FileReadPost
    *.gz      call gzip#read("gzip -dn")
    *.bz2     call gzip#read("bzip2 -d")
    *.Z       call gzip#read("uncompress")
    *.lzma    call gzip#read("lzma -d")
    *.xz      call gzip#read("xz -d")
gzip  FileReadPre
    *.gz      setlocal bin
    *.bz2     setlocal bin
    *.Z       setlocal bin
    *.lzma    setlocal bin
    *.xz      setlocal bin
fugitive_files  FileReadCmd
    fugitive://**//[0-3]/**
              exe s:FileRead()
    fugitive://**//[0-9a-f][0-9a-f]*
              exe s:FileRead()
Network  FileReadCmd
    ftp://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    http://*  exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    https://* exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau FileReadPre ".fnameescape(expand("<amatch>"))|call netrw#Nread(1,expand("<amatch>"))|exe "sil doau FileReadPost ".fnameescape(expand("<amatch>"))
tar  FileReadCmd
    tarfile::*
              call tar#Read(expand("<amatch>"), 0)
    tarfile::*/*
              call tar#Read(expand("<amatch>"), 0)
zip  FileReadCmd
    zipfile:* call zip#Read(expand("<amatch>"), 0)
    zipfile:*/*
              call zip#Read(expand("<amatch>"), 0)
syntaxset  FileType
    *         exe "set syntax=" . expand("<amatch>")
filetypeplugin  FileType
    *         call s:LoadFTPlugin()
filetypeindent  FileType
    *         call s:LoadIndent()
FileType
    snippet   setl noet nospell
    snippets  setl noet nospell fdm=expr fde=getline(v:lnum)!~'^\\t\\\\|^$'?'>1':1
railsPluginDetect  FileType
    netrw     if RailsDetect() |   silent doau User BufEnterRails | endif
    *         if RailsDetect() | call rails#buffer_setup() | endif
    railslog  call rails#log_setup()
endwise  FileType
    lua       let b:endwise_addition = 'end' | let b:endwise_words = 'function,do,then' | let b:endwise_pattern = '^\s*\zs\%(\%(local\s\+\)\=function\)\>\%(.*\<end\>\)\@!\|\<\%(then\|do\)\ze\s*$' | let b:endwise_syngroups = 'luaFunction,luaStatement,luaCond'
    elixir    let b:endwise_addition = 'end' | let b:endwise_words = 'case,cond,bc,lc,inlist,inbits,if,unless,try,receive,function,fn' | let b:endwise_pattern = '^\s*\zs\%(case\|cond\|bc\|lc\|inlist\|inbits\|if\|unless\|try\|receive\|function\|fn\)\>\%(.*[^:]\<end\>\)\@!' | let b:endwise_syngroups = 'elixirKeyword'
    ruby      let b:endwise_addition = 'end' | let b:endwise_words = 'module,class,def,if,unless,case,while,until,begin,do' | let b:endwise_pattern = '^\(.*=\)\?\s*\%(private\s\+\|protected\s\+\|public\s\+\|module_function\s\+\)*\zs\%(module\|class\|def\|if\|unless\|case\|while\|until\|for\|\|begin\)\>\%(.*[^.:@$]\<end\>\)\@!\|\<do\ze\%(\s*|.*|\)\=\s*$' | let b:endwise_syngroups = 'rubyModule,rubyClass,rubyDefine,rubyControl,rubyConditional,rubyRepeat'
    sh        let b:endwise_addition = '\=submatch(0)=="then" ? "fi" : submatch(0)=="case" ? "esac" : "done"' | let b:endwise_words = 'then,case,do' | let b:endwise_pattern = '\%(^\s*\zscase\>\ze\|\zs\<\%(do\|then\)\ze\s*$\)' | let b:endwise_syngroups = 'shConditional,shLoop,shIf,shFor,shRepeat,shCaseEsac,zshConditional,zshRepeat,zshDelimiter'
    zsh       let b:endwise_addition = '\=submatch(0)=="then" ? "fi" : submatch(0)=="case" ? "esac" : "done"' | let b:endwise_words = 'then,case,do' | let b:endwise_pattern = '\%(^\s*\zscase\>\ze\|\zs\<\%(do\|then\)\ze\s*$\)' | let b:endwise_syngroups = 'shConditional,shLoop,shIf,shFor,shRepeat,shCaseEsac,zshConditional,zshRepeat,zshDelimiter'
    vb        let b:endwise_addition = 'End &' | let b:endwise_words = 'Function,Sub,Class,Module,Enum,Namespace' | let b:endwise_pattern = '\%(\<End\>.*\)\@<!\<&\>' | let b:endwise_syngroups = 'vbStatement,vbnetStorage,vbnetProcedure,vbnet.*Words,AspVBSStatement'
    vbnet     let b:endwise_addition = 'End &' | let b:endwise_words = 'Function,Sub,Class,Module,Enum,Namespace' | let b:endwise_pattern = '\%(\<End\>.*\)\@<!\<&\>' | let b:endwise_syngroups = 'vbStatement,vbnetStorage,vbnetProcedure,vbnet.*Words,AspVBSStatement'
    aspvbs    let b:endwise_addition = 'End &' | let b:endwise_words = 'Function,Sub,Class,Module,Enum,Namespace' | let b:endwise_pattern = '\%(\<End\>.*\)\@<!\<&\>' | let b:endwise_syngroups = 'vbStatement,vbnetStorage,vbnetProcedure,vbnet.*Words,AspVBSStatement'
    vim       let b:endwise_addition = 'end&' | let b:endwise_words = 'fu,fun,func,function,wh,while,if,for,try' | let b:endwise_syngroups = 'vimFuncKey,vimNotFunc,vimCommand'
    c         let b:endwise_addition = '#endif' | let b:endwise_words = 'if,ifdef,ifndef' | let b:endwise_pattern = '^\s*#\%(if\|ifdef\|ifndef\)\>' | let b:endwise_syngroups = 'cPreCondit,cPreConditMatch,cCppInWrapper,xdefaultsPreProc'
    cpp       let b:endwise_addition = '#endif' | let b:endwise_words = 'if,ifdef,ifndef' | let b:endwise_pattern = '^\s*#\%(if\|ifdef\|ifndef\)\>' | let b:endwise_syngroups = 'cPreCondit,cPreConditMatch,cCppInWrapper,xdefaultsPreProc'
    xdefaults let b:endwise_addition = '#endif' | let b:endwise_words = 'if,ifdef,ifndef' | let b:endwise_pattern = '^\s*#\%(if\|ifdef\|ifndef\)\>' | let b:endwise_syngroups = 'cPreCondit,cPreConditMatch,cCppInWrapper,xdefaultsPreProc'
    objc      let b:endwise_addition = '@end' | let b:endwise_words = 'interface,implementation' | let b:endwise_pattern = '^\s*@\%(interface\|implementation\)\>' | let b:endwise_syngroups = 'objcObjDef'
    matlab    let b:endwise_addition = 'end' | let b:endwise_words = 'function,if,for' | let b:endwise_syngroups = 'matlabStatement,matlabFunction,matlabConditional,matlabRepeat'
    *         call s:abbrev()
fugitive  FileType
    netrw     call fugitive#detect(expand('%:p'))
fugitive_blame  FileType
    fugitiveblame
              setlocal nomodeline | if exists('b:git_dir') | let &l:keywordprg = s:repo().keywordprg() | endif
fugitive_files  FileType
    git       if exists('b:git_dir') |  call s:JumpInit() | endif
NERDCommenter  FileType
    *         :call s:SetUpForNewFiletype(&filetype, 1)
airline  FileType
    *         call <sid>on_window_changed()
shebang_chmod  FileWritePost
    *         if exists('b:chmod_post') && executable('chmod') |   silent! execute '!chmod '.b:chmod_post.' "<afile>"' |   edit |   unlet b:chmod_post | endif
gzip  FileWritePost
    *.gz      call gzip#write("gzip")
    *.bz2     call gzip#write("bzip2")
    *.Z       call gzip#write("compress -f")
    *.lzma    call gzip#write("lzma -z")
    *.xz      call gzip#write("xz -z")
Network  FileWriteCmd
    ftp://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    rcp://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    scp://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    dav://*   exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    davs://*  exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    rsync://* exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
    sftp://*  exe "sil doau FileWritePre ".fnameescape(expand("<amatch>"))|exe "'[,']".'Nwrite '.fnameescape(expand("<amatch>"))|exe "sil doau FileWritePost ".fnameescape(expand("<amatch>"))
tar  FileWriteCmd
    tarfile::*
              call tar#Write(expand("<amatch>"))
    tarfile::*/*
              call tar#Write(expand("<amatch>"))
zip  FileWriteCmd
    zipfile:* call zip#Write(expand("<amatch>"))
    zipfile:*/*
              call zip#Write(expand("<amatch>"))
FilterReadPost
    *         :call UpdateMode()
FocusGained
    *         :call FocusGained()
gitgutter  FocusGained
    *         call gitgutter#all()
fugitive_status  FocusGained
    *         call fugitive#reload_status()
FocusLost
    *         :call FocusLost()
InsertEnter
    *         :call InsertEnter()
              match ExtraWhitespace /\s\+\%#\@<!$/
vimwiki  InsertEnter
    *.wiki    call vimwiki#tbl#reset_tw(line("."))
InsertLeave
    *         :call InsertLeave()
unimpaired_paste  InsertLeave
    *         if exists('s:paste') |   let &paste = s:paste |   let &mouse = s:mouse |   unlet s:paste |   unlet s:mouse | endif
supertab_retain  InsertLeave
    *         call s:SetDefaultCompletionType()
InsertLeave
    *         match ExtraWhitespace /\s\+$/
vimwiki  InsertLeave
    *.wiki    call vimwiki#tbl#format(line("."))
gitgutter  QuickFixCmdPost
    *vimgrep* let g:gitgutter_enabled = 1
CtrlPMRUF  QuickFixCmdPost
    *vimgrep* let s:locked = 0
gitgutter  QuickFixCmdPre
    *vimgrep* let g:gitgutter_enabled = 0
CtrlPMRUF  QuickFixCmdPre
    *vimgrep* let s:locked = 1
syntastic  QuitPre
    *         call s:QuitPreHook()
TagbarSession  SessionLoadPost
    *         call tagbar#RestoreSession()
filetypedetect  StdinReadPost
    *         if !did_filetype() | runtime! scripts.vim | endif
              if getline(1) =~ '^\(commit\|tree\|object\) \x\{40\}\>\|^tag \S\+$' |   set ft=git | endif
              if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf conf | endif
Syntax
    *         call s:SynSet()
    c         if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cpp       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cs        if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    idl       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    php       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
railsPluginDetect  Syntax
    railslog  call rails#log_syntax()
    ruby      if RailsDetect() | call rails#buffer_syntax() | endif
    eruby     if RailsDetect() | call rails#buffer_syntax() | endif
    yaml      if RailsDetect() | call rails#buffer_syntax() | endif
    haml      if RailsDetect() | call rails#buffer_syntax() | endif
    javascript
              if RailsDetect() | call rails#buffer_syntax() | endif
    coffee    if RailsDetect() | call rails#buffer_syntax() | endif
    sass      if RailsDetect() | call rails#buffer_syntax() | endif
    scss      if RailsDetect() | call rails#buffer_syntax() | endif
fugitive_blame  Syntax
    fugitiveblame
              call s:BlameSyntax()
railsPluginDetect  User
    ProjectileDetect
              if RailsDetect() | call projectile#append(b:rails_root, {}) | endif
fugitive_utility  User
    Fugitive  call s:define_commands()
fugitive  User
    NERDTreeInit
              call fugitive#detect(b:NERDTreeRoot.path.str())
    NERDTreeNewRoot
              call fugitive#detect(b:NERDTreeRoot.path.str())
fugitive_remove  User
    Fugitive  if s:buffer().commit() =~# '^0\=$' | exe "command! -buffer -bar -bang -nargs=1 -complete=customlist,s:MoveComplete Gmove :execute s:Move(<bang>0,<q-args>)" | exe "command! -buffer -bar -bang Gremove :execute s:Remove(<bang>0)" | endif
fugitive_blame  User
    Fugitive  if s:buffer().type('file', 'blob') | exe "command! -buffer -bar -bang -range=0 -nargs=* Gblame :execute s:Blame(<bang>0,<line1>,<line2>,<count>,[<f-args>])" | endif
fugitive_foldtext  User
    Fugitive  if &filetype =~# '^git\%(commit\)\=$' && &foldtext ==# 'foldtext()' |    set foldtext=fugitive#foldtext() | endif
User
    AirlineToggledOn
              call s:toggle_on()
    AirlineToggledOff
              call s:toggle_off()
railsPluginAuto  User
    BufEnterRails
              call s:RefreshBuffer()
              call s:resetomnicomplete()
              call s:BufDatabase(-1)
    dbextPreConnection
              call s:BufDatabase(1)
railsPluginDetect  VimEnter
    *         if empty(expand("<amatch>")) && RailsDetect(getcwd()) |   call rails#buffer_setup() |   silent doau User BufEnterRails | endif
railsPluginAbolish  VimEnter
    *         call s:abolish_setup()
fugitive  VimEnter
    *         if expand('<amatch>')==''|call fugitive#detect(getcwd())|endif
NERDTreeHijackNetrw  VimEnter
    *         silent! autocmd! FileExplorer
              call nerdtree#checkForBrowse(expand("<amatch>"))
airline  VimEnter
    *         call <sid>on_window_changed()
VimLeave
    *         call ZoomWin#CleanupSessionFile()
CtrlPMRUF  VimLeavePre
    *         cal s:savetofile(s:mergelists())
fugitive_commit  VimLeavePre
    COMMIT_EDITMSG
              execute s:sub(s:FinishCommit(), '^echoerr (.*)', 'echohl ErrorMsg|echo \1|echohl NONE')
airline  VimResized
    *         call <sid>on_window_changed()
BgHighlight  WinEnter
    *         set cul
WinEnter
    *         :call FocusGained()
              :call FocusGained()
              let s:tmux_is_last_pane = 0
airline  WinEnter
    *         call <sid>on_window_changed()
matchparen  WinEnter
    *         call s:Highlight_Matching_Pair()
BgHighlight  WinLeave
    *         set nocul
WinLeave
    *         :call FocusLost()
              :call FocusLost()
gitgutter  CursorHold
    *         call gitgutter#process_buffer(utility#current_file(), 1)
sig_autocmds  CursorHold
    *         if g:SignaturePeriodicRefresh | call signature#SignRefresh() | endif
CursorHold
    *         unlet! b:airline_head
airline_whitespace  CursorHold
    *         unlet! b:airline_whitespace_check
gitgutter  CursorHoldI
    *         call gitgutter#process_buffer(utility#current_file(), 1)
Network  SourceCmd
    ftp://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    rcp://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    scp://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    http://*  exe 'Nsource '.fnameescape(expand("<amatch>"))
    https://* exe 'Nsource '.fnameescape(expand("<amatch>"))
    dav://*   exe 'Nsource '.fnameescape(expand("<amatch>"))
    davs://*  exe 'Nsource '.fnameescape(expand("<amatch>"))
    rsync://* exe 'Nsource '.fnameescape(expand("<amatch>"))
    sftp://*  exe 'Nsource '.fnameescape(expand("<amatch>"))
SourceCmd
    *.vba.gz  if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vba.bz2 if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vba.zip if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vba.xz  if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vba     if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|call vimball#Vimball(1)|close|else|call vimball#Vimball(1)|endif
    *.vmb.gz  if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vmb.bz2 if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vmb.zip if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vmb.xz  if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|endif|call vimball#Decompress(expand("<amatch>"))|so %|if expand("%")!=expand("<afile>")|close|endif
    *.vmb     if expand("%")!=expand("<afile>") | exe "1sp" fnameescape(expand("<afile>"))|call vimball#Vimball(1)|close|else|call vimball#Vimball(1)|endif
SpellFileMissing
    *         call spellfile#LoadFile(expand('<amatch>'))
matchparen  CursorMoved
    *         call s:Highlight_Matching_Pair()
CursorMoved
    *         call <sid>sync_active_winnr()
CSSColor  CursorMoved
    <buffer=1>
              call s:parse_any_screen()
matchparen  CursorMovedI
    *         call s:Highlight_Matching_Pair()
CSSColor  CursorMovedI
    <buffer=1>
              call s:parse_any_screen()
gitgutter  TabEnter
    *         call settabvar(tabpagenr(), 'gitgutter_didtabenter', 1)| call gitgutter#all()
fugitive_status  ShellCmdPost
    *         call fugitive#reload_status()
ShellCmdPost
    *         unlet! b:airline_head
matchparen  TextChanged
    *         call s:Highlight_Matching_Pair()
matchparen  TextChangedI
    *         call s:Highlight_Matching_Pair()
--- Normal/Visual mode mappings ---
v  ["          *@:<C-U>exe "normal! gv"|call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
n  ["          *@:call search('\%(^\s*".*\n\)\%(^\s*"\)\@!', "bW")<CR>
v  []          *@m':<C-U>exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "bW")<CR>
n  []          *@m':call search('^\s*endf*\%[unction]\>', "bW")<CR>
v  [[          *@m':<C-U>exe "normal! gv"|call search('^\s*fu\%[nction]\>', "bW")<CR>
n  [[          *@m':call search('^\s*fu\%[nction]\>', "bW")<CR>
v  ]"          *@:<C-U>exe "normal! gv"|call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
n  ]"          *@:call search('^\(\s*".*\n\)\@<!\(\s*"\)', "W")<CR>
v  ][          *@m':<C-U>exe "normal! gv"|call search('^\s*endf*\%[unction]\>', "W")<CR>
n  ][          *@m':call search('^\s*endf*\%[unction]\>', "W")<CR>
v  ]]          *@m':<C-U>exe "normal! gv"|call search('^\s*fu\%[nction]\>', "W")<CR>
n  ]]          *@m':call search('^\s*fu\%[nction]\>', "W")<CR>
n  <C-H>       * :TmuxNavigateLeft<CR>
x  <Tab>         <Plug>snipMateVisual
s  <Tab>         <Plug>snipMateNextOrTrigger
v  <NL>          ]egv
n  <NL>        * :TmuxNavigateDown<CR>
v  <C-K>         [egv
n  <C-K>       * :TmuxNavigateUp<CR>
n  <C-L>       * :TmuxNavigateRight<CR>
x  <C-N>       * :<C-U>call multiple_cursors#new("v")<CR>
n  <C-N>       * :call multiple_cursors#new("n")<CR>
n  <C-W>o        <Plug>ZoomWin
n  <C-\>       * :TmuxNavigatePrevious<CR>
n  <Space>     * :set hlsearch!<CR>
x  #             <Plug>(visualstar-#)
o  %           * v:<C-U>call <SNR>44_Match_wrapper('',1,'o') <CR>
v  %           * :<C-U>call <SNR>44_Match_wrapper('',1,'v') <CR>m'gv``
n  %           * :<C-U>call <SNR>44_Match_wrapper('',1,'n') <CR>
n  '?          * :call signature#ListLocalMarks()<CR>
n  '[          * :call signature#GotoMark( "prev", "line", "alpha" )<CR>
n  ']          * :call signature#GotoMark( "next", "line", "alpha" )<CR>
x  *             <Plug>(visualstar-*)
n  <p          * :call <SNR>34_putline(']p')<CR><']
n  <P          * :call <SNR>34_putline('[p')<CR><']
n  =p          * :call <SNR>34_putline(']p')<CR>=']
n  =P          * :call <SNR>34_putline('[p')<CR>=']
n  >p          * :call <SNR>34_putline(']p')<CR>>']
n  >P          * :call <SNR>34_putline('[p')<CR>>']
n  F           * :<C-U>CtrlP<CR>
   Q             <Nop>
x  S             <Plug>VSurround
n  [=          * :call signature#GotoMarker( "prev", "any" )<CR>
n  [-          * :call signature#GotoMarker( "prev", "same" )<CR>
n  [`          * :call signature#GotoMark( "prev", "spot", "pos" )<CR>
n  ['          * :call signature#GotoMark( "prev", "line", "pos" )<CR>
o  [%          * v:<C-U>call <SNR>44_MultiMatch("bW", "o") <CR>
v  [%            <Esc>[%m'gv``
n  [%          * :<C-U>call <SNR>44_MultiMatch("bW", "n") <CR>
n  [xx           <Plug>unimpaired_line_xml_encode
x  [x            <Plug>unimpaired_xml_encode
n  [x            <Plug>unimpaired_xml_encode
n  [uu           <Plug>unimpaired_line_url_encode
x  [u            <Plug>unimpaired_url_encode
n  [u            <Plug>unimpaired_url_encode
n  [yy           <Plug>unimpaired_line_string_encode
x  [y            <Plug>unimpaired_string_encode
n  [y            <Plug>unimpaired_string_encode
n  [p            <Plug>unimpairedPutAbove
n  [ov         * :set virtualedit+=all<CR>
n  [ox         * :set cursorline cursorcolumn<CR>
n  [ow         * :set wrap<CR>
n  [os         * :set spell<CR>
n  [or         * :set relativenumber<CR>
n  [on         * :set number<CR>
n  [ol         * :set list<CR>
n  [oi         * :set ignorecase<CR>
n  [oh         * :set hlsearch<CR>
n  [od         * :diffthis<CR>
n  [ou         * :set cursorcolumn<CR>
n  [oc         * :set cursorline<CR>
n  [ob         * :set background=light<CR>
x  [e            <Plug>unimpairedMoveSelectionUp
n  [e            <Plug>unimpairedMoveUp
n  [<Space>      <Plug>unimpairedBlankUp
o  [n            <Plug>unimpairedContextPrevious
n  [n            <Plug>unimpairedContextPrevious
n  [o            <Plug>unimpairedOPrevious
n  [f            <Plug>unimpairedDirectoryPrevious
n  [T            <Plug>unimpairedTFirst
n  [t            <Plug>unimpairedTPrevious
n  [<C-Q>        <Plug>unimpairedQPFile
n  [Q            <Plug>unimpairedQFirst
n  [q            <Plug>unimpairedQPrevious
n  [<C-L>        <Plug>unimpairedLPFile
n  [L            <Plug>unimpairedLFirst
n  [l            <Plug>unimpairedLPrevious
n  [B            <Plug>unimpairedBFirst
n  [A            <Plug>unimpairedAFirst
n  [a            <Plug>unimpairedAPrevious
n  [b            <Plug>unimpairedBPrevious
n  [c            <Plug>GitGutterPrevHunk
   \cd           <Plug>RooterChangeToRootDirectory
   \R            :VroomRunNearestTest<CR>
n  \w\t          <Plug>VimwikiTabMakeDiaryNote
n  \w\w          <Plug>VimwikiMakeDiaryNote
n  \w\i          <Plug>VimwikiDiaryGenerateLinks
n  \wi           <Plug>VimwikiDiaryIndex
n  \ws           <Plug>VimwikiUISelect
n  \wt           <Plug>VimwikiTabIndex
n  \ww           <Plug>VimwikiIndex
n  \ca           <Plug>NERDCommenterAltDelims
x  \cu           <Plug>NERDCommenterUncomment
n  \cu           <Plug>NERDCommenterUncomment
x  \cb           <Plug>NERDCommenterAlignBoth
n  \cb           <Plug>NERDCommenterAlignBoth
x  \cl           <Plug>NERDCommenterAlignLeft
n  \cl           <Plug>NERDCommenterAlignLeft
n  \cA           <Plug>NERDCommenterAppend
x  \cy           <Plug>NERDCommenterYank
n  \cy           <Plug>NERDCommenterYank
x  \cs           <Plug>NERDCommenterSexy
n  \cs           <Plug>NERDCommenterSexy
x  \ci           <Plug>NERDCommenterInvert
n  \ci           <Plug>NERDCommenterInvert
n  \c$           <Plug>NERDCommenterToEOL
x  \cn           <Plug>NERDCommenterNested
n  \cn           <Plug>NERDCommenterNested
x  \cm           <Plug>NERDCommenterMinimal
n  \cm           <Plug>NERDCommenterMinimal
x  \c<Space>     <Plug>NERDCommenterToggle
n  \c<Space>     <Plug>NERDCommenterToggle
x  \cc           <Plug>NERDCommenterComment
n  \cc           <Plug>NERDCommenterComment
x  \Nr           <Plug>NrrwrgnBangDo
x  \nr           <Plug>NrrwrgnDo
   \\            <Plug>(easymotion-prefix)
n  \<S-Down>   * :BuffergatorMruCycleNext rightbelow sbuffer<CR>
n  \<S-Right>  * :BuffergatorMruCycleNext rightbelow vert sbuffer<CR>
n  \<S-Up>     * :BuffergatorMruCycleNext leftabove sbuffer<CR>
n  \<S-Left>   * :BuffergatorMruCycleNext leftabove vert sbuffer<CR>
n  \<Down>     * :BuffergatorMruCyclePrev rightbelow sbuffer<CR>
n  \<Right>    * :BuffergatorMruCyclePrev rightbelow vert sbuffer<CR>
n  \<Up>       * :BuffergatorMruCyclePrev leftabove sbuffer<CR>
n  \<Left>     * :BuffergatorMruCyclePrev leftabove vert sbuffer<CR>
n  \T          * :BuffergatorTabsClose<CR>
n  \tc         * :BuffergatorTabsClose<CR>
n  \to         * :BuffergatorTabsOpen<CR>
n  \t          * :BuffergatorTabsOpen<CR>
n  \B          * :BuffergatorClose<CR>
n  \b          * :BuffergatorOpen<CR>
n  \hp           <Plug>GitGutterPreviewHunk
n  \hr           <Plug>GitGutterRevertHunk
n  \hs           <Plug>GitGutterStageHunk
n  \s          * <C-W>s<C-W>l
n  \w          * <C-W>v<C-W>l
n  \a          * :Ag
   \r            :call tt:TriggerPreviousTest()<CR>
ov \t            :call tt:TriggerTest()<CR>
n  ]=          * :call signature#GotoMarker( "next", "any" )<CR>
n  ]-          * :call signature#GotoMarker( "next", "same" )<CR>
n  ]`          * :call signature#GotoMark( "next", "spot", "pos" )<CR>
n  ]'          * :call signature#GotoMark( "next", "line", "pos" )<CR>
o  ]%          * v:<C-U>call <SNR>44_MultiMatch("W",  "o") <CR>
v  ]%            <Esc>]%m'gv``
n  ]%          * :<C-U>call <SNR>44_MultiMatch("W",  "n") <CR>
n  ]xx           <Plug>unimpaired_line_xml_decode
x  ]x            <Plug>unimpaired_xml_decode
n  ]x            <Plug>unimpaired_xml_decode
n  ]uu           <Plug>unimpaired_line_url_decode
x  ]u            <Plug>unimpaired_url_decode
n  ]u            <Plug>unimpaired_url_decode
n  ]yy           <Plug>unimpaired_line_string_decode
x  ]y            <Plug>unimpaired_string_decode
n  ]y            <Plug>unimpaired_string_decode
n  ]p            <Plug>unimpairedPutBelow
n  ]ov         * :set virtualedit-=all<CR>
n  ]ox         * :set nocursorline nocursorcolumn<CR>
n  ]ow         * :set nowrap<CR>
n  ]os         * :set nospell<CR>
n  ]or         * :set norelativenumber<CR>
n  ]on         * :set nonumber<CR>
n  ]ol         * :set nolist<CR>
n  ]oi         * :set noignorecase<CR>
n  ]oh         * :set nohlsearch<CR>
n  ]od         * :diffoff<CR>
n  ]ou         * :set nocursorcolumn<CR>
n  ]oc         * :set nocursorline<CR>
n  ]ob         * :set background=dark<CR>
x  ]e            <Plug>unimpairedMoveSelectionDown
n  ]e            <Plug>unimpairedMoveDown
n  ]<Space>      <Plug>unimpairedBlankDown
o  ]n            <Plug>unimpairedContextNext
n  ]n            <Plug>unimpairedContextNext
n  ]o            <Plug>unimpairedONext
n  ]f            <Plug>unimpairedDirectoryNext
n  ]T            <Plug>unimpairedTLast
n  ]t            <Plug>unimpairedTNext
n  ]<C-Q>        <Plug>unimpairedQNFile
n  ]Q            <Plug>unimpairedQLast
n  ]q            <Plug>unimpairedQNext
n  ]<C-L>        <Plug>unimpairedLNFile
n  ]L            <Plug>unimpairedLLast
n  ]l            <Plug>unimpairedLNext
n  ]B            <Plug>unimpairedBLast
n  ]A            <Plug>unimpairedALast
n  ]a            <Plug>unimpairedANext
n  ]b            <Plug>unimpairedBNext
n  ]c            <Plug>GitGutterNextHunk
n  `[          * :call signature#GotoMark( "prev", "spot", "alpha" )<CR>
n  `]          * :call signature#GotoMark( "next", "spot", "alpha" )<CR>
v  a%            <Esc>[%v]%
n  cs            <Plug>Csurround
n  cov         * :set <C-R>=(&virtualedit =~# "all") ? 'virtualedit-=all' : 'virtualedit+=all'<CR><CR>
n  cox         * :set <C-R>=&cursorline && &cursorcolumn ? 'nocursorline nocursorcolumn' : 'cursorline cursorcolumn'<CR><CR>
n  cow         * :set <C-R>=<SNR>34_toggle("wrap")<CR><CR>
n  cos         * :set <C-R>=<SNR>34_toggle("spell")<CR><CR>
n  cor         * :set <C-R>=<SNR>34_toggle("relativenumber")<CR><CR>
n  con         * :set <C-R>=<SNR>34_toggle("number")<CR><CR>
n  col         * :set <C-R>=<SNR>34_toggle("list")<CR><CR>
n  coi         * :set <C-R>=<SNR>34_toggle("ignorecase")<CR><CR>
n  coh         * :set <C-R>=<SNR>34_toggle("hlsearch")<CR><CR>
n  cod         * :<C-R>=&diff ? 'diffoff' : 'diffthis'<CR><CR>
n  cou         * :set <C-R>=<SNR>34_toggle("cursorcolumn")<CR><CR>
n  coc         * :set <C-R>=<SNR>34_toggle("cursorline")<CR><CR>
n  cob         * :set background=<C-R>=&background == 'dark' ? 'light' : 'dark'<CR><CR>
n  ds            <Plug>Dsurround
n  f           * :Unite -start-insert file
n  gx            <Plug>NetrwBrowseX
x  g#            <Plug>(visualstar-g#)
v  g<S-LeftMouse>   <Plug>(visualstar-g*)
x  g<kMultiply>   <Plug>(visualstar-g*)
x  g*            <Plug>(visualstar-g*)
x  gS            <Plug>VgSurround
o  g%          * v:<C-U>call <SNR>44_Match_wrapper('',0,'o') <CR>
v  g%          * :<C-U>call <SNR>44_Match_wrapper('',0,'v') <CR>m'gv``
n  g%          * :<C-U>call <SNR>44_Match_wrapper('',0,'n') <CR>
n  m           * :call signature#Input()<CR>
n  ySS           <Plug>YSsurround
n  ySs           <Plug>YSsurround
n  yss           <Plug>Yssurround
n  yS            <Plug>YSurround
n  ys            <Plug>Ysurround
n  ygI         * :call <SNR>34_setup_paste()<CR>gI
n  ygi         * :call <SNR>34_setup_paste()<CR>gi
n  yI          * :call <SNR>34_setup_paste()<CR>I
n  yA          * :call <SNR>34_setup_paste()<CR>A
n  yO          * :call <SNR>34_setup_paste()<CR>O
n  yo          * :call <SNR>34_setup_paste()<CR>o
n  yP          * :call <SNR>34_setup_paste()<CR>i
n  yp          * :call <SNR>34_setup_paste()<CR>a
s  <S-Tab>       <Plug>snipMateBack
n  <Plug>NetrwBrowseX * :call netrw#NetrwBrowseX(expand("<cWORD>"),0)<CR>
   <SNR>83_ChangeToRootDirectory * :call <SNR>83_ChangeToRootDirectory()<CR>
   <Plug>RooterChangeToRootDirectory & <SNR>83_ChangeToRootDirectory
n  <Plug>ZoomWin & :set lz<CR>:silent call ZoomWin#ZoomWin()<CR>:set nolz<CR>
v  <S-LeftMouse>   <Plug>(visualstar-*)
x  <kMultiply>   <Plug>(visualstar-*)
n  <SNR>80_(count) * <SNR>80_count()
v  <Plug>(visualstar-g#) & :<C-U>call <SNR>80_search('?', 1)<CR><SNR>80_(count)
v  <Plug>(visualstar-g*) & :<C-U>call <SNR>80_search('/', 1)<CR><SNR>80_(count)
v  <Plug>(visualstar-#) & :<C-U>call <SNR>80_search('?', 0)<CR><SNR>80_(count)
v  <Plug>(visualstar-*) & :<C-U>call <SNR>80_search('/', 0)<CR><SNR>80_(count)
no <Plug>(visualstar-g#) * g#
no <Plug>(visualstar-g*) * g*
no <Plug>(visualstar-#) * #
no <Plug>(visualstar-*) * *
n  <Plug>VimwikiTabMakeDiaryNote & :VimwikiTabMakeDiaryNote<CR>
n  <Plug>VimwikiMakeDiaryNote & :VimwikiMakeDiaryNote<CR>
n  <Plug>VimwikiDiaryGenerateLinks & :VimwikiDiaryGenerateLinks<CR>
n  <Plug>VimwikiDiaryIndex & :VimwikiDiaryIndex<CR>
n  <Plug>VimwikiUISelect & :VimwikiUISelect<CR>
n  <Plug>VimwikiTabIndex & :VimwikiTabIndex<CR>
n  <Plug>VimwikiIndex & :VimwikiIndex<CR>
v  <Plug>VgSurround * :<C-U>call <SNR>62_opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>
v  <Plug>VSurround * :<C-U>call <SNR>62_opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>
n  <Plug>YSurround * :<C-U>set opfunc=<SNR>62_opfunc2<CR>g@
n  <Plug>Ysurround * :<C-U>set opfunc=<SNR>62_opfunc<CR>g@
n  <Plug>YSsurround * :<C-U>call <SNR>62_opfunc2(v:count1)<CR>
n  <Plug>Yssurround * :<C-U>call <SNR>62_opfunc(v:count1)<CR>
n  <Plug>Csurround * :<C-U>call <SNR>62_changesurround()<CR>
n  <Plug>Dsurround * :<C-U>call <SNR>62_dosurround(<SNR>62_inputtarget())<CR>
n  <Plug>SurroundRepeat * .
n  <Plug>NERDCommenterAltDelims * :call <SNR>47_SwitchToAlternativeDelimiters(1)<CR>
x  <Plug>NERDCommenterUncomment * :call NERDComment("x", "Uncomment")<CR>
n  <Plug>NERDCommenterUncomment * :call NERDComment("n", "Uncomment")<CR>
x  <Plug>NERDCommenterAlignBoth * :call NERDComment("x", "AlignBoth")<CR>
n  <Plug>NERDCommenterAlignBoth * :call NERDComment("n", "AlignBoth")<CR>
x  <Plug>NERDCommenterAlignLeft * :call NERDComment("x", "AlignLeft")<CR>
n  <Plug>NERDCommenterAlignLeft * :call NERDComment("n", "AlignLeft")<CR>
n  <Plug>NERDCommenterAppend * :call NERDComment("n", "Append")<CR>
x  <Plug>NERDCommenterYank * :call NERDComment("x", "Yank")<CR>
n  <Plug>NERDCommenterYank * :call NERDComment("n", "Yank")<CR>
x  <Plug>NERDCommenterSexy * :call NERDComment("x", "Sexy")<CR>
n  <Plug>NERDCommenterSexy * :call NERDComment("n", "Sexy")<CR>
x  <Plug>NERDCommenterInvert * :call NERDComment("x", "Invert")<CR>
n  <Plug>NERDCommenterInvert * :call NERDComment("n", "Invert")<CR>
n  <Plug>NERDCommenterToEOL * :call NERDComment("n", "ToEOL")<CR>
x  <Plug>NERDCommenterNested * :call NERDComment("x", "Nested")<CR>
n  <Plug>NERDCommenterNested * :call NERDComment("n", "Nested")<CR>
x  <Plug>NERDCommenterMinimal * :call NERDComment("x", "Minimal")<CR>
n  <Plug>NERDCommenterMinimal * :call NERDComment("n", "Minimal")<CR>
x  <Plug>NERDCommenterToggle * :call NERDComment("x", "Toggle")<CR>
n  <Plug>NERDCommenterToggle * :call NERDComment("n", "Toggle")<CR>
x  <Plug>NERDCommenterComment * :call NERDComment("x", "Comment")<CR>
n  <Plug>NERDCommenterComment * :call NERDComment("n", "Comment")<CR>
x  <SNR>46_VisualNrrwBang * :<C-U>call nrrwrgn#NrrwRgn(visualmode(),'!')<CR>
x  <SNR>46_VisualNrrwRgn * :<C-U>call nrrwrgn#NrrwRgn(visualmode(),'')<CR>
x  <Plug>NrrwrgnBangDo & <SNR>46_VisualNrrwBang
x  <Plug>NrrwrgnDo & <SNR>46_VisualNrrwRgn
   <Plug>(easymotion-prefix)N   <Plug>(easymotion-N)
   <Plug>(easymotion-prefix)n   <Plug>(easymotion-n)
   <Plug>(easymotion-prefix)k   <Plug>(easymotion-k)
   <Plug>(easymotion-prefix)j   <Plug>(easymotion-j)
   <Plug>(easymotion-prefix)gE   <Plug>(easymotion-gE)
   <Plug>(easymotion-prefix)ge   <Plug>(easymotion-ge)
   <Plug>(easymotion-prefix)E   <Plug>(easymotion-E)
   <Plug>(easymotion-prefix)e   <Plug>(easymotion-e)
   <Plug>(easymotion-prefix)B   <Plug>(easymotion-B)
   <Plug>(easymotion-prefix)b   <Plug>(easymotion-b)
   <Plug>(easymotion-prefix)W   <Plug>(easymotion-W)
   <Plug>(easymotion-prefix)w   <Plug>(easymotion-w)
   <Plug>(easymotion-prefix)T   <Plug>(easymotion-T)
   <Plug>(easymotion-prefix)t   <Plug>(easymotion-t)
   <Plug>(easymotion-prefix)s   <Plug>(easymotion-s)
   <Plug>(easymotion-prefix)F   <Plug>(easymotion-F)
   <Plug>(easymotion-prefix)f   <Plug>(easymotion-f)
x  <Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(1)<CR>
nos<Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(0)<CR>
x  <Plug>(easymotion-lineanywhere) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,2)<CR>
nos<Plug>(easymotion-lineanywhere) * :<C-U>call EasyMotion#LineAnywhere(0,2)<CR>
x  <Plug>(easymotion-linebackward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,1)<CR>
nos<Plug>(easymotion-linebackward) * :<C-U>call EasyMotion#LineAnywhere(0,1)<CR>
x  <Plug>(easymotion-lineforward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,0)<CR>
nos<Plug>(easymotion-lineforward) * :<C-U>call EasyMotion#LineAnywhere(0,0)<CR>
x  <Plug>(easymotion-bd-el) * <Esc>:<C-U>call EasyMotion#EL(1,2)<CR>
nos<Plug>(easymotion-bd-el) * :<C-U>call EasyMotion#EL(0,2)<CR>
x  <Plug>(easymotion-gel) * <Esc>:<C-U>call EasyMotion#EL(1,1)<CR>
nos<Plug>(easymotion-gel) * :<C-U>call EasyMotion#EL(0,1)<CR>
x  <Plug>(easymotion-el) * <Esc>:<C-U>call EasyMotion#EL(1,0)<CR>
nos<Plug>(easymotion-el) * :<C-U>call EasyMotion#EL(0,0)<CR>
x  <Plug>(easymotion-bd-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,2)<CR>
nos<Plug>(easymotion-bd-wl) * :<C-U>call EasyMotion#WBL(0,2)<CR>
x  <Plug>(easymotion-bl) * <Esc>:<C-U>call EasyMotion#WBL(1,1)<CR>
nos<Plug>(easymotion-bl) * :<C-U>call EasyMotion#WBL(0,1)<CR>
x  <Plug>(easymotion-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,0)<CR>
nos<Plug>(easymotion-wl) * :<C-U>call EasyMotion#WBL(0,0)<CR>
x  <Plug>(easymotion-prev) * <Esc>:<C-U>call EasyMotion#NextPrevious(1,1)<CR>
nos<Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(0,1)<CR>
x  <Plug>(easymotion-next) * <Esc>:<C-U>call EasyMotion#NextPrevious(1,0)<CR>
nos<Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(0,0)<CR>
x  <Plug>(easymotion-dotrepeat) * <Esc>:<C-U>call EasyMotion#DotRepeat(1)<CR>
nos<Plug>(easymotion-dotrepeat) * :<C-U>call EasyMotion#DotRepeat(0)<CR>
x  <Plug>(easymotion-repeat) * <Esc>:<C-U>call EasyMotion#Repeat(1)<CR>
nos<Plug>(easymotion-repeat) * :<C-U>call EasyMotion#Repeat(0)<CR>
x  <Plug>(easymotion-jumptoanywhere) * <Esc>:<C-U>call EasyMotion#JumpToAnywhere(1,2)<CR>
nos<Plug>(easymotion-jumptoanywhere) * :<C-U>call EasyMotion#JumpToAnywhere(0,2)<CR>
x  <Plug>(easymotion-bd-n) * <Esc>:<C-U>call EasyMotion#Search(1,2)<CR>
nos<Plug>(easymotion-bd-n) * :<C-U>call EasyMotion#Search(0,2)<CR>
x  <Plug>(easymotion-N) * <Esc>:<C-U>call EasyMotion#Search(1,1)<CR>
nos<Plug>(easymotion-N) * :<C-U>call EasyMotion#Search(0,1)<CR>
x  <Plug>(easymotion-n) * <Esc>:<C-U>call EasyMotion#Search(1,0)<CR>
nos<Plug>(easymotion-n) * :<C-U>call EasyMotion#Search(0,0)<CR>
x  <Plug>(easymotion-eol-bd-jk) * <Esc>:<C-U>call EasyMotion#Eol(1,2)<CR>
nos<Plug>(easymotion-eol-bd-jk) * :<C-U>call EasyMotion#Eol(0,2)<CR>
x  <Plug>(easymotion-eol-k) * <Esc>:<C-U>call EasyMotion#Eol(1,1)<CR>
nos<Plug>(easymotion-eol-k) * :<C-U>call EasyMotion#Eol(0,1)<CR>
x  <Plug>(easymotion-eol-j) * <Esc>:<C-U>call EasyMotion#Eol(1,0)<CR>
nos<Plug>(easymotion-eol-j) * :<C-U>call EasyMotion#Eol(0,0)<CR>
x  <Plug>(easymotion-sol-bd-jk) * <Esc>:<C-U>call EasyMotion#Sol(1,2)<CR>
nos<Plug>(easymotion-sol-bd-jk) * :<C-U>call EasyMotion#Sol(0,2)<CR>
x  <Plug>(easymotion-sol-k) * <Esc>:<C-U>call EasyMotion#Sol(1,1)<CR>
nos<Plug>(easymotion-sol-k) * :<C-U>call EasyMotion#Sol(0,1)<CR>
x  <Plug>(easymotion-sol-j) * <Esc>:<C-U>call EasyMotion#Sol(1,0)<CR>
nos<Plug>(easymotion-sol-j) * :<C-U>call EasyMotion#Sol(0,0)<CR>
x  <Plug>(easymotion-bd-jk) * <Esc>:<C-U>call EasyMotion#JK(1,2)<CR>
nos<Plug>(easymotion-bd-jk) * :<C-U>call EasyMotion#JK(0,2)<CR>
x  <Plug>(easymotion-k) * <Esc>:<C-U>call EasyMotion#JK(1,1)<CR>
nos<Plug>(easymotion-k) * :<C-U>call EasyMotion#JK(0,1)<CR>
x  <Plug>(easymotion-j) * <Esc>:<C-U>call EasyMotion#JK(1,0)<CR>
nos<Plug>(easymotion-j) * :<C-U>call EasyMotion#JK(0,0)<CR>
x  <Plug>(easymotion-iskeyword-bd-e) * <Esc>:<C-U>call EasyMotion#EK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-e) * :<C-U>call EasyMotion#EK(0,2)<CR>
x  <Plug>(easymotion-iskeyword-ge) * <Esc>:<C-U>call EasyMotion#EK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-ge) * :<C-U>call EasyMotion#EK(0,1)<CR>
x  <Plug>(easymotion-iskeyword-e) * <Esc>:<C-U>call EasyMotion#EK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-e) * :<C-U>call EasyMotion#EK(0,0)<CR>
x  <Plug>(easymotion-bd-E) * <Esc>:<C-U>call EasyMotion#EW(1,2)<CR>
nos<Plug>(easymotion-bd-E) * :<C-U>call EasyMotion#EW(0,2)<CR>
x  <Plug>(easymotion-gE) * <Esc>:<C-U>call EasyMotion#EW(1,1)<CR>
nos<Plug>(easymotion-gE) * :<C-U>call EasyMotion#EW(0,1)<CR>
x  <Plug>(easymotion-E) * <Esc>:<C-U>call EasyMotion#EW(1,0)<CR>
nos<Plug>(easymotion-E) * :<C-U>call EasyMotion#EW(0,0)<CR>
x  <Plug>(easymotion-bd-e) * <Esc>:<C-U>call EasyMotion#E(1,2)<CR>
nos<Plug>(easymotion-bd-e) * :<C-U>call EasyMotion#E(0,2)<CR>
x  <Plug>(easymotion-ge) * <Esc>:<C-U>call EasyMotion#E(1,1)<CR>
nos<Plug>(easymotion-ge) * :<C-U>call EasyMotion#E(0,1)<CR>
x  <Plug>(easymotion-e) * <Esc>:<C-U>call EasyMotion#E(1,0)<CR>
nos<Plug>(easymotion-e) * :<C-U>call EasyMotion#E(0,0)<CR>
x  <Plug>(easymotion-iskeyword-bd-w) * <Esc>:<C-U>call EasyMotion#WBK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-w) * :<C-U>call EasyMotion#WBK(0,2)<CR>
x  <Plug>(easymotion-iskeyword-b) * <Esc>:<C-U>call EasyMotion#WBK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-b) * :<C-U>call EasyMotion#WBK(0,1)<CR>
x  <Plug>(easymotion-iskeyword-w) * <Esc>:<C-U>call EasyMotion#WBK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-w) * :<C-U>call EasyMotion#WBK(0,0)<CR>
x  <Plug>(easymotion-bd-W) * <Esc>:<C-U>call EasyMotion#WBW(1,2)<CR>
nos<Plug>(easymotion-bd-W) * :<C-U>call EasyMotion#WBW(0,2)<CR>
x  <Plug>(easymotion-B) * <Esc>:<C-U>call EasyMotion#WBW(1,1)<CR>
nos<Plug>(easymotion-B) * :<C-U>call EasyMotion#WBW(0,1)<CR>
x  <Plug>(easymotion-W) * <Esc>:<C-U>call EasyMotion#WBW(1,0)<CR>
nos<Plug>(easymotion-W) * :<C-U>call EasyMotion#WBW(0,0)<CR>
x  <Plug>(easymotion-bd-w) * <Esc>:<C-U>call EasyMotion#WB(1,2)<CR>
nos<Plug>(easymotion-bd-w) * :<C-U>call EasyMotion#WB(0,2)<CR>
x  <Plug>(easymotion-b) * <Esc>:<C-U>call EasyMotion#WB(1,1)<CR>
nos<Plug>(easymotion-b) * :<C-U>call EasyMotion#WB(0,1)<CR>
x  <Plug>(easymotion-w) * <Esc>:<C-U>call EasyMotion#WB(1,0)<CR>
nos<Plug>(easymotion-w) * :<C-U>call EasyMotion#WB(0,0)<CR>
x  <Plug>(easymotion-Tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,1)<CR>
nos<Plug>(easymotion-Tln) * :<C-U>call EasyMotion#TL(-1,0,1)<CR>
x  <Plug>(easymotion-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,0)<CR>
nos<Plug>(easymotion-t2) * :<C-U>call EasyMotion#T(2,0,0)<CR>
x  <Plug>(easymotion-t) * <Esc>:<C-U>call EasyMotion#T(1,1,0)<CR>
nos<Plug>(easymotion-t) * :<C-U>call EasyMotion#T(1,0,0)<CR>
x  <Plug>(easymotion-s) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-s) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,0)<CR>
nos<Plug>(easymotion-tn) * :<C-U>call EasyMotion#T(-1,0,0)<CR>
x  <Plug>(easymotion-bd-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,2)<CR>
nos<Plug>(easymotion-bd-t2) * :<C-U>call EasyMotion#T(2,0,2)<CR>
x  <Plug>(easymotion-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,0)<CR>
nos<Plug>(easymotion-tl) * :<C-U>call EasyMotion#TL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tn) * :<C-U>call EasyMotion#T(-1,0,2)<CR>
x  <Plug>(easymotion-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,0)<CR>
nos<Plug>(easymotion-fn) * :<C-U>call EasyMotion#S(-1,0,0)<CR>
x  <Plug>(easymotion-bd-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,2)<CR>
nos<Plug>(easymotion-bd-tl) * :<C-U>call EasyMotion#TL(1,0,2)<CR>
x  <Plug>(easymotion-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,0)<CR>
nos<Plug>(easymotion-fl) * :<C-U>call EasyMotion#SL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,2)<CR>
nos<Plug>(easymotion-bd-tl2) * :<C-U>call EasyMotion#TL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-f) * <Esc>:<C-U>call EasyMotion#S(1,1,0)<CR>
nos<Plug>(easymotion-f) * :<C-U>call EasyMotion#S(1,0,0)<CR>
x  <Plug>(easymotion-bd-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-bd-fl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,1)<CR>
nos<Plug>(easymotion-Fl2) * :<C-U>call EasyMotion#SL(2,0,1)<CR>
x  <Plug>(easymotion-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,0)<CR>
nos<Plug>(easymotion-tl2) * :<C-U>call EasyMotion#TL(2,0,0)<CR>
x  <Plug>(easymotion-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,0)<CR>
nos<Plug>(easymotion-f2) * :<C-U>call EasyMotion#S(2,0,0)<CR>
x  <Plug>(easymotion-Fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,1)<CR>
nos<Plug>(easymotion-Fln) * :<C-U>call EasyMotion#SL(-1,0,1)<CR>
x  <Plug>(easymotion-sln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-sln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,0)<CR>
nos<Plug>(easymotion-tln) * :<C-U>call EasyMotion#TL(-1,0,0)<CR>
x  <Plug>(easymotion-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,0)<CR>
nos<Plug>(easymotion-fl2) * :<C-U>call EasyMotion#SL(2,0,0)<CR>
x  <Plug>(easymotion-bd-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-bd-fl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-T2) * <Esc>:<C-U>call EasyMotion#T(2,1,1)<CR>
nos<Plug>(easymotion-T2) * :<C-U>call EasyMotion#T(2,0,1)<CR>
x  <Plug>(easymotion-bd-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tln) * :<C-U>call EasyMotion#TL(-1,0,2)<CR>
x  <Plug>(easymotion-T) * <Esc>:<C-U>call EasyMotion#T(1,1,1)<CR>
nos<Plug>(easymotion-T) * :<C-U>call EasyMotion#T(1,0,1)<CR>
x  <Plug>(easymotion-bd-t) * <Esc>:<C-U>call EasyMotion#T(1,1,2)<CR>
nos<Plug>(easymotion-bd-t) * :<C-U>call EasyMotion#T(1,0,2)<CR>
x  <Plug>(easymotion-Tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,1)<CR>
nos<Plug>(easymotion-Tn) * :<C-U>call EasyMotion#T(-1,0,1)<CR>
x  <Plug>(easymotion-s2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-s2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,1)<CR>
nos<Plug>(easymotion-Tl) * :<C-U>call EasyMotion#TL(1,0,1)<CR>
x  <Plug>(easymotion-sn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-sn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-Fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,1)<CR>
nos<Plug>(easymotion-Fn) * :<C-U>call EasyMotion#S(-1,0,1)<CR>
x  <Plug>(easymotion-sl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-sl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,1)<CR>
nos<Plug>(easymotion-Fl) * :<C-U>call EasyMotion#SL(1,0,1)<CR>
x  <Plug>(easymotion-sl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-sl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-F) * <Esc>:<C-U>call EasyMotion#S(1,1,1)<CR>
nos<Plug>(easymotion-F) * :<C-U>call EasyMotion#S(1,0,1)<CR>
x  <Plug>(easymotion-bd-f) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-bd-f) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-F2) * <Esc>:<C-U>call EasyMotion#S(2,1,1)<CR>
nos<Plug>(easymotion-F2) * :<C-U>call EasyMotion#S(2,0,1)<CR>
x  <Plug>(easymotion-bd-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-bd-f2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,1)<CR>
nos<Plug>(easymotion-Tl2) * :<C-U>call EasyMotion#TL(2,0,1)<CR>
x  <Plug>(easymotion-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,0)<CR>
nos<Plug>(easymotion-fln) * :<C-U>call EasyMotion#SL(-1,0,0)<CR>
n  <Plug>unimpaired_line_xml_decode * :<C-U>call <SNR>34_Transform("xml_decode",v:count1)<CR>
x  <Plug>unimpaired_xml_decode * :<C-U>call <SNR>34_Transform("xml_decode",visualmode())<CR>
n  <Plug>unimpaired_xml_decode * :<C-U>call <SNR>34_TransformSetup("xml_decode")<CR>g@
n  <Plug>unimpaired_line_xml_encode * :<C-U>call <SNR>34_Transform("xml_encode",v:count1)<CR>
x  <Plug>unimpaired_xml_encode * :<C-U>call <SNR>34_Transform("xml_encode",visualmode())<CR>
n  <Plug>unimpaired_xml_encode * :<C-U>call <SNR>34_TransformSetup("xml_encode")<CR>g@
n  <Plug>unimpaired_line_url_decode * :<C-U>call <SNR>34_Transform("url_decode",v:count1)<CR>
x  <Plug>unimpaired_url_decode * :<C-U>call <SNR>34_Transform("url_decode",visualmode())<CR>
n  <Plug>unimpaired_url_decode * :<C-U>call <SNR>34_TransformSetup("url_decode")<CR>g@
n  <Plug>unimpaired_line_url_encode * :<C-U>call <SNR>34_Transform("url_encode",v:count1)<CR>
x  <Plug>unimpaired_url_encode * :<C-U>call <SNR>34_Transform("url_encode",visualmode())<CR>
n  <Plug>unimpaired_url_encode * :<C-U>call <SNR>34_TransformSetup("url_encode")<CR>g@
n  <Plug>unimpaired_line_string_decode * :<C-U>call <SNR>34_Transform("string_decode",v:count1)<CR>
x  <Plug>unimpaired_string_decode * :<C-U>call <SNR>34_Transform("string_decode",visualmode())<CR>
n  <Plug>unimpaired_string_decode * :<C-U>call <SNR>34_TransformSetup("string_decode")<CR>g@
n  <Plug>unimpaired_line_string_encode * :<C-U>call <SNR>34_Transform("string_encode",v:count1)<CR>
x  <Plug>unimpaired_string_encode * :<C-U>call <SNR>34_Transform("string_encode",visualmode())<CR>
n  <Plug>unimpaired_string_encode * :<C-U>call <SNR>34_TransformSetup("string_encode")<CR>g@
n  <Plug>unimpairedPutBelow * :call <SNR>34_putline(']p')<CR>
n  <Plug>unimpairedPutAbove * :call <SNR>34_putline('[p')<CR>
n  <Plug>unimpairedPaste * :call <SNR>34_setup_paste()<CR>
   <Plug>unimpairedMoveSelectionDown * :<C-U>call <SNR>34_MoveSelectionDown(v:count1)<CR>
   <Plug>unimpairedMoveSelectionUp * :<C-U>call <SNR>34_MoveSelectionUp(v:count1)<CR>
n  <Plug>unimpairedMoveDown * :<C-U>call <SNR>34_Move('+',v:count1,'Down')<CR>
n  <Plug>unimpairedMoveUp * :<C-U>call <SNR>34_Move('--',v:count1,'Up')<CR>
n  <Plug>unimpairedBlankDown * :<C-U>call <SNR>34_BlankDown(v:count1)<CR>
n  <Plug>unimpairedBlankUp * :<C-U>call <SNR>34_BlankUp(v:count1)<CR>
o  <Plug>unimpairedContextNext * :call <SNR>34_ContextMotion(0)<CR>
o  <Plug>unimpairedContextPrevious * :call <SNR>34_ContextMotion(1)<CR>
n  <Plug>unimpairedContextNext * :call <SNR>34_Context(0)<CR>
n  <Plug>unimpairedContextPrevious * :call <SNR>34_Context(1)<CR>
n  <Plug>unimpairedOPrevious   <Plug>unimpairedDirectoryPrevious:echohl WarningMSG|echo "[o is deprecated. Use [f"|echohl NONE<CR>
n  <Plug>unimpairedONext   <Plug>unimpairedDirectoryNext:echohl WarningMSG|echo "]o is deprecated. Use ]f"|echohl NONE<CR>
n  <Plug>unimpairedDirectoryPrevious * :<C-U>edit <C-R>=<SNR>34_fnameescape(<SNR>34_FileByOffset(-v:count1))<CR><CR>
n  <Plug>unimpairedDirectoryNext * :<C-U>edit <C-R>=<SNR>34_fnameescape(<SNR>34_FileByOffset(v:count1))<CR><CR>
n  <Plug>unimpairedTLast * :<C-U>exe "".(v:count ? v:count : "")."tlast"<CR>
n  <Plug>unimpairedTFirst * :<C-U>exe "".(v:count ? v:count : "")."tfirst"<CR>
n  <Plug>unimpairedTNext * :<C-U>exe "".(v:count ? v:count : "")."tnext"<CR>
n  <Plug>unimpairedTPrevious * :<C-U>exe "".(v:count ? v:count : "")."tprevious"<CR>
n  <Plug>unimpairedQNFile * :<C-U>exe "".(v:count ? v:count : "")."cnfile"<CR>zv
n  <Plug>unimpairedQPFile * :<C-U>exe "".(v:count ? v:count : "")."cpfile"<CR>zv
n  <Plug>unimpairedQLast * :<C-U>exe "".(v:count ? v:count : "")."clast"<CR>zv
n  <Plug>unimpairedQFirst * :<C-U>exe "".(v:count ? v:count : "")."cfirst"<CR>zv
n  <Plug>unimpairedQNext * :<C-U>exe "".(v:count ? v:count : "")."cnext"<CR>zv
n  <Plug>unimpairedQPrevious * :<C-U>exe "".(v:count ? v:count : "")."cprevious"<CR>zv
n  <Plug>unimpairedLNFile * :<C-U>exe "".(v:count ? v:count : "")."lnfile"<CR>zv
n  <Plug>unimpairedLPFile * :<C-U>exe "".(v:count ? v:count : "")."lpfile"<CR>zv
n  <Plug>unimpairedLLast * :<C-U>exe "".(v:count ? v:count : "")."llast"<CR>zv
n  <Plug>unimpairedLFirst * :<C-U>exe "".(v:count ? v:count : "")."lfirst"<CR>zv
n  <Plug>unimpairedLNext * :<C-U>exe "".(v:count ? v:count : "")."lnext"<CR>zv
n  <Plug>unimpairedLPrevious * :<C-U>exe "".(v:count ? v:count : "")."lprevious"<CR>zv
n  <Plug>unimpairedBLast * :<C-U>exe "".(v:count ? v:count : "")."blast"<CR>
n  <Plug>unimpairedBFirst * :<C-U>exe "".(v:count ? v:count : "")."bfirst"<CR>
n  <Plug>unimpairedBNext * :<C-U>exe "".(v:count ? v:count : "")."bnext"<CR>
n  <Plug>unimpairedBPrevious * :<C-U>exe "".(v:count ? v:count : "")."bprevious"<CR>
n  <Plug>unimpairedALast * :<C-U>exe "".(v:count ? v:count : "")."last"<CR>
n  <Plug>unimpairedAFirst * :<C-U>exe "".(v:count ? v:count : "")."first"<CR>
n  <Plug>unimpairedANext * :<C-U>exe "".(v:count ? v:count : "")."next"<CR>
n  <Plug>unimpairedAPrevious * :<C-U>exe "".(v:count ? v:count : "")."previous"<CR>
n  <Plug>GitGutterPreviewHunk * :GitGutterPreviewHunk<CR>
n  <Plug>GitGutterRevertHunk * :GitGutterRevertHunk<CR>
n  <Plug>GitGutterStageHunk * :GitGutterStageHunk<CR>
n  <Plug>GitGutterPrevHunk * &diff ? '[c' : ":\<C-U>execute v:count1 . 'GitGutterPrevHunk'\<CR>"
n  <Plug>GitGutterNextHunk * &diff ? ']c' : ":\<C-U>execute v:count1 . 'GitGutterNextHunk'\<CR>"
x  <Plug>snipMateVisual * :<C-U>call <SNR>22_grab_visual()<CR>gv"_c
s  <Plug>snipMateBack * <Esc>a<C-R>=snipMate#BackwardsSnippet()<CR>
s  <Plug>snipMateNextOrTrigger * <Esc>a<C-R>=snipMate#TriggerSnippet()<CR>
n  <C-Down>    * <C-W>j
n  <C-Up>      * <C-W>k
n  <C-Left>    * <C-W>h
n  <C-Right>   * <C-W>l
v  <BS>          "-d
n  Â           * :BuffergatorMruCycleNext<CR>
n  â           * :BuffergatorMruCyclePrev<CR>
--- Insert/Command-line mode mappings ---
i  <Plug>ISurround * <C-R>=<SNR>62_insert(1)<CR>
i  <Plug>Isurround * <C-R>=<SNR>62_insert()<CR>
i  <S-Tab>       <Plug>snipMateBack
i  <Plug>SuperTabBackward & <C-R>=SuperTab('p')<CR>
i  <Plug>SuperTabForward & <C-R>=SuperTab('n')<CR>
i  <C-Tab>     * <Tab>
i  <Plug>NERDCommenterInsert * <Space><BS><Esc>:call NERDComment('i', "insert")<CR>
i  <Plug>AlwaysEnd & <SNR>38_AlwaysEnd
i  <Plug>DiscretionaryEnd & <SNR>38_DiscretionaryEnd
i  <SNR>38_AlwaysEnd * <C-R>=<SNR>38_crend(1)<CR>
i  <SNR>38_DiscretionaryEnd * <C-R>=<SNR>38_crend(0)<CR>
i  <Plug>snipMateShow * <C-R>=snipMate#ShowAvailableSnips()<CR>
i  <Plug>snipMateBack * <C-R>=snipMate#BackwardsSnippet()<CR>
i  <Plug>snipMateTrigger * <C-R>=snipMate#TriggerSnippet(1)<CR>
i  <Plug>snipMateNextOrTrigger * <C-R>=snipMate#TriggerSnippet()<CR>
i  <C-G>S        <Plug>ISurround
i  <C-G>s        <Plug>Isurround
i  <Tab>         <Plug>snipMateNextOrTrigger
i  <CR>        & <C-R>=<SNR>61_SelectCompletion(1)<CR><SNR>38_DiscretionaryEnd
i  <C-R><Tab>    <Plug>snipMateShow
i  <C-S>         <Plug>Isurround
i  <C-X>         <C-R>=<SNR>61_ManualCompletionEnter()<CR>
i  <C-X><CR>   & <CR><SNR>38_AlwaysEnd
i  <Esc>       * <Esc>hl
i  ^[OD          <Esc>hi
i  ^[OC          <Esc>li
i  ^[OB          <Esc>ji
i  ^[OA          <Esc>ki
i  jj          * <Esc>
--- Abbreviations ---

No abbreviation found
--- Highlighting ---
SpecialKey     xxx term=bold ctermfg=237 ctermbg=234 guifg=#444444 guibg=#1c1c1c
NonText        xxx term=bold ctermfg=240 ctermbg=233 guifg=#606060 guibg=#151515
Directory      xxx term=bold ctermfg=186 guifg=#dad085
ErrorMsg       xxx term=standout ctermbg=88 guibg=#902020
IncSearch      xxx term=reverse cterm=reverse gui=reverse
Search         xxx term=reverse cterm=underline ctermfg=217 ctermbg=16 gui=underline guifg=#f0a0c0
                   guibg=#302028
MoreMsg        xxx term=bold ctermfg=121 gui=bold guifg=SeaGreen
                   links to Special
ModeMsg        xxx term=bold cterm=bold gui=bold
LineNr         xxx term=underline ctermfg=59 ctermbg=232 guifg=#605958 guibg=#151515
CursorLineNr   xxx term=bold ctermfg=188 ctermbg=233 guifg=#ccc5c4
Question       xxx term=standout ctermfg=71 guifg=#65C254
StatusLine     xxx term=bold,reverse ctermfg=16 ctermbg=252 gui=italic guifg=#000000 guibg=#dddddd
StatusLineNC   xxx term=reverse ctermfg=231 ctermbg=235 gui=italic guifg=#ffffff guibg=#403c41
VertSplit      xxx term=reverse ctermfg=242 ctermbg=16 guifg=#777777 guibg=#403c41
Title          xxx term=bold cterm=bold ctermfg=71 gui=bold guifg=#70b950
Visual         xxx term=reverse ctermbg=237 guibg=#404040
VisualNOS      xxx term=bold,underline cterm=bold,underline gui=bold,underline
WarningMsg     xxx term=standout ctermfg=224 guifg=Red
WildMenu       xxx term=standout ctermfg=217 ctermbg=16 guifg=#f0a0c0 guibg=#302028
Folded         xxx term=standout ctermfg=145 ctermbg=236 gui=italic guifg=#a0a8b0 guibg=#384048
FoldColumn     xxx term=standout ctermfg=59 ctermbg=234 guifg=#535D66 guibg=#1f1f1f
DiffAdd        xxx term=bold ctermfg=193 ctermbg=22 guifg=#D2EBBE guibg=#437019
DiffChange     xxx term=bold ctermbg=24 guibg=#2B5B77
DiffDelete     xxx term=bold ctermfg=16 ctermbg=52 guifg=#40000A guibg=#700009
DiffText       xxx term=reverse cterm=reverse ctermfg=81 ctermbg=16 gui=reverse guifg=#8fbfdc
                   guibg=#000000
SignColumn     xxx term=standout ctermfg=242 guifg=#777777 guibg=#333333
Conceal        xxx ctermfg=7 ctermbg=242 guifg=LightGrey guibg=DarkGrey
SpellBad       xxx term=reverse cterm=underline ctermbg=88 gui=underline guibg=#902020 guisp=Red
SpellCap       xxx term=reverse cterm=underline ctermbg=20 gui=underline guibg=#0000df guisp=Blue
SpellRare      xxx term=reverse cterm=underline ctermbg=53 gui=underline guibg=#540063 guisp=Magenta
SpellLocal     xxx term=underline cterm=underline ctermbg=23 gui=underline guibg=#2D7067 guisp=Cyan
Pmenu          xxx ctermfg=231 ctermbg=240 guifg=#ffffff guibg=#606060
PmenuSel       xxx ctermfg=232 ctermbg=254 guifg=#101010 guibg=#eeeeee
PmenuSbar      xxx ctermbg=248 guibg=Grey
PmenuThumb     xxx ctermbg=15 guibg=White
TabLine        xxx term=underline ctermfg=16 ctermbg=145 gui=italic guifg=#000000 guibg=#b0b8c0
TabLineSel     xxx term=bold cterm=bold ctermfg=16 ctermbg=254 gui=bold,italic guifg=#000000
                   guibg=#f0f0f0
TabLineFill    xxx term=reverse ctermfg=103 guifg=#9098a0
CursorColumn   xxx term=reverse ctermbg=234 guibg=#1c1c1c
CursorLine     xxx term=underline cterm=underline guibg=#1c1c1c
ColorColumn    xxx term=reverse ctermbg=232 guibg=#202020
Cursor         xxx ctermfg=232 ctermbg=153 guifg=#151515 guibg=#b0d0f0
lCursor        xxx guifg=bg guibg=fg
MatchParen     xxx term=reverse cterm=bold ctermfg=231 ctermbg=60 gui=bold guifg=#ffffff
                   guibg=#556779
Normal         xxx ctermfg=188 guifg=#e8e8d3 guibg=#151515
Error          xxx term=reverse ctermfg=15 ctermbg=9 guifg=White guibg=Red
                   links to ErrorMsg
Comment        xxx term=bold ctermfg=244 gui=italic guifg=#888888
Constant       xxx term=underline ctermfg=167 guifg=#cf6a4c
Special        xxx term=bold ctermfg=107 guifg=#799d6a
Identifier     xxx term=underline ctermfg=183 guifg=#c6b6ee
Statement      xxx term=bold ctermfg=103 guifg=#8197bf
PreProc        xxx term=underline ctermfg=110 guifg=#8fbfdc
Type           xxx term=underline ctermfg=215 guifg=#ffb964
Underlined     xxx term=underline cterm=underline ctermfg=81 gui=underline guifg=#80a0ff
Ignore         xxx ctermfg=0 guifg=bg
Todo           xxx term=standout cterm=bold ctermfg=250 gui=bold guifg=#c7c7c7
String         xxx ctermfg=107 guifg=#99ad6a
Character      xxx links to Constant
Number         xxx links to Constant
Boolean        xxx links to Constant
Float          xxx links to Number
Function       xxx ctermfg=222 guifg=#fad07a
Conditional    xxx links to Statement
Repeat         xxx links to Statement
Label          xxx links to Statement
Operator       xxx links to Structure
Keyword        xxx links to Statement
Exception      xxx links to Statement
Include        xxx links to PreProc
Define         xxx links to PreProc
Macro          xxx links to PreProc
PreCondit      xxx links to PreProc
StorageClass   xxx ctermfg=179 guifg=#c59f6f
Structure      xxx ctermfg=110 guifg=#8fbfdc
Typedef        xxx links to Type
Tag            xxx links to Special
SpecialChar    xxx links to Special
Delimiter      xxx ctermfg=66 guifg=#668799
SpecialComment xxx links to Special
Debug          xxx links to Special
StringDelimiter xxx ctermfg=58 guifg=#556633
diffRemoved    xxx links to Constant
diffAdded      xxx links to String
phpFunctions   xxx links to Function
phpSuperglobal xxx links to Identifier
phpQuoteSingle xxx links to StringDelimiter
phpQuoteDouble xxx links to StringDelimiter
phpBoolean     xxx links to Constant
phpNull        xxx links to Constant
phpArrayPair   xxx links to Operator
phpOperator    xxx links to Normal
phpRelation    xxx links to Normal
phpVarSelector xxx links to Identifier
pythonOperator xxx links to Statement
rubySharpBang  xxx links to Comment
rubyClass      xxx ctermfg=30 guifg=#447799
rubyIdentifier xxx ctermfg=183 guifg=#c6b6fe
rubyConstant   xxx links to Type
rubyFunction   xxx links to Function
rubyInstanceVariable xxx ctermfg=183 guifg=#c6b6fe
rubySymbol     xxx ctermfg=104 guifg=#7697d6
rubyGlobalVariable xxx links to rubyInstanceVariable
rubyModule     xxx links to rubyClass
rubyControl    xxx ctermfg=104 guifg=#7597c6
rubyString     xxx links to String
rubyStringDelimiter xxx links to StringDelimiter
rubyInterpolationDelimiter xxx links to Identifier
rubyRegexpDelimiter xxx ctermfg=53 guifg=#540063
rubyRegexp     xxx ctermfg=162 guifg=#dd0093
rubyRegexpSpecial xxx ctermfg=126 guifg=#a40073
rubyPredefinedIdentifier xxx ctermfg=168 guifg=#de5577
erlangAtom     xxx links to rubySymbol
erlangBIF      xxx links to rubyPredefinedIdentifier
erlangFunction xxx links to rubyPredefinedIdentifier
erlangDirective xxx links to Statement
erlangNode     xxx links to Identifier
javaScriptValue xxx links to Constant
javaScriptRegexpString xxx links to rubyRegexp
coffeeRegExp   xxx links to javaScriptRegexpString
luaOperator    xxx links to Conditional
cFormat        xxx links to Identifier
cOperator      xxx links to Constant
objcClass      xxx links to Type
cocoaClass     xxx links to objcClass
objcSubclass   xxx links to objcClass
objcSuperclass xxx links to objcClass
objcDirective  xxx links to rubyClass
objcStatement  xxx links to Constant
cocoaFunction  xxx links to Function
objcMethodName xxx links to Identifier
objcMethodArg  xxx links to Normal
objcMessageName xxx links to Identifier
vimOper        xxx links to Normal
DbgCurrent     xxx ctermfg=195 ctermbg=25 guifg=#DEEBFE guibg=#345FA8
DbgBreakPt     xxx ctermbg=53 guibg=#4F0037
IndentGuidesOdd xxx ctermbg=235 guibg=#232323
IndentGuidesEven xxx ctermbg=234 guibg=#1b1b1b
TagListFileName xxx links to Directory
PreciseJumpTarget xxx ctermfg=155 ctermbg=22 guifg=#B9ED67 guibg=#405026
GitGutterAddDefault xxx ctermfg=2 guifg=#009900 guibg=#333333
GitGutterChangeDefault xxx ctermfg=3 guifg=#bbbb00 guibg=#333333
GitGutterDeleteDefault xxx ctermfg=1 guifg=#ff2222 guibg=#333333
GitGutterChangeDeleteDefault xxx links to GitGutterChangeDefault
GitGutterAdd   xxx links to GitGutterAddDefault
GitGutterChange xxx links to GitGutterChangeDefault
GitGutterDelete xxx links to GitGutterDeleteDefault
GitGutterChangeDelete xxx links to GitGutterChangeDeleteDefault
GitGutterAddLine xxx links to DiffAdd
GitGutterChangeLine xxx links to DiffChange
GitGutterDeleteLine xxx links to DiffDelete
GitGutterChangeDeleteLine xxx links to GitGutterChangeLineDefault
GitGutterChangeLineDefault xxx cleared
               xxx cleared
SyntasticErrorSign xxx links to Error
SyntasticWarningSign xxx links to Todo
SyntasticStyleErrorSign xxx links to SyntasticErrorSign
SyntasticStyleWarningSign xxx links to SyntasticWarningSign
SyntasticStyleErrorLine xxx links to SyntasticErrorLine
SyntasticErrorLine xxx cleared
SyntasticStyleWarningLine xxx links to SyntasticWarningLine
SyntasticWarningLine xxx cleared
SyntasticError xxx links to SpellBad
SyntasticWarning xxx links to SpellCap
ExtraWhitespace xxx ctermbg=1 guibg=#382424
airline_a_to_airline_b xxx ctermfg=25 ctermbg=236
airline_b_to_airline_c xxx ctermfg=236 ctermbg=233
airline_c_to_airline_x xxx ctermfg=233 ctermbg=233
airline_x_to_airline_y xxx ctermfg=236 ctermbg=233
airline_y_to_airline_z xxx ctermfg=25 ctermbg=236
airline_z_to_airline_warning xxx ctermfg=166 ctermbg=25
airline_x_inactive xxx ctermfg=237 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_x_inactive_bold xxx term=bold cterm=bold ctermfg=237 ctermbg=234 gui=bold guifg=#444444
                   guibg=#1c1c1c
airline_x_inactive_red xxx ctermfg=167 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_y_inactive xxx ctermfg=237 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_y_inactive_bold xxx term=bold cterm=bold ctermfg=237 ctermbg=234 gui=bold guifg=#444444
                   guibg=#1c1c1c
airline_y_inactive_red xxx ctermfg=167 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_z_inactive xxx ctermfg=237 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_z_inactive_bold xxx term=bold cterm=bold ctermfg=237 ctermbg=234 gui=bold guifg=#444444
                   guibg=#1c1c1c
airline_z_inactive_red xxx ctermfg=167 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_a_inactive xxx ctermfg=237 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_a_inactive_bold xxx term=bold cterm=bold ctermfg=237 ctermbg=234 gui=bold guifg=#444444
                   guibg=#1c1c1c
airline_a_inactive_red xxx ctermfg=167 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_b_inactive xxx ctermfg=237 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_b_inactive_bold xxx term=bold cterm=bold ctermfg=237 ctermbg=234 gui=bold guifg=#444444
                   guibg=#1c1c1c
airline_b_inactive_red xxx ctermfg=167 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_c_inactive xxx ctermfg=237 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_c_inactive_bold xxx term=bold cterm=bold ctermfg=237 ctermbg=234 gui=bold guifg=#444444
                   guibg=#1c1c1c
airline_c_inactive_red xxx ctermfg=167 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_warning_inactive xxx ctermfg=232 ctermbg=166 guifg=#000000 guibg=#df5f00
airline_warning_inactive_bold xxx term=bold cterm=bold ctermfg=232 ctermbg=166 gui=bold
                   guifg=#000000 guibg=#df5f00
airline_warning_inactive_red xxx ctermfg=167 ctermbg=166 guifg=#000000 guibg=#df5f00
airline_x_to_airline_y_inactive xxx ctermfg=234 ctermbg=234
airline_z_to_airline_warning_inactive xxx ctermfg=166 ctermbg=234
airline_c_to_airline_x_inactive xxx ctermfg=234 ctermbg=234
airline_a_to_airline_b_inactive xxx ctermfg=234 ctermbg=234
airline_y_to_airline_z_inactive xxx ctermfg=234 ctermbg=234
airline_b_to_airline_c_inactive xxx ctermfg=234 ctermbg=234
airline_x      xxx ctermfg=240 ctermbg=233
airline_x_bold xxx term=bold cterm=bold ctermfg=240 ctermbg=233 gui=bold
airline_x_red  xxx ctermfg=167 ctermbg=233
airline_y      xxx ctermfg=145 ctermbg=236
airline_y_bold xxx term=bold cterm=bold ctermfg=145 ctermbg=236 gui=bold
airline_y_red  xxx ctermfg=167 ctermbg=236
airline_z      xxx ctermfg=195 ctermbg=25
airline_z_bold xxx term=bold cterm=bold ctermfg=195 ctermbg=25 gui=bold
airline_z_red  xxx ctermfg=167 ctermbg=25
airline_a      xxx term=bold cterm=bold ctermfg=195 ctermbg=25 gui=bold
airline_a_bold xxx term=bold cterm=bold ctermfg=195 ctermbg=25 gui=bold
airline_a_red  xxx ctermfg=167 ctermbg=25
airline_b      xxx ctermfg=145 ctermbg=236
airline_b_bold xxx term=bold cterm=bold ctermfg=145 ctermbg=236 gui=bold
airline_b_red  xxx ctermfg=167 ctermbg=236
airline_c      xxx ctermfg=240 ctermbg=233
airline_c_bold xxx term=bold cterm=bold ctermfg=240 ctermbg=233 gui=bold
airline_c_red  xxx ctermfg=167 ctermbg=233
airline_warning xxx ctermfg=232 ctermbg=166 guifg=#000000 guibg=#df5f00
airline_warning_bold xxx term=bold cterm=bold ctermfg=232 ctermbg=166 gui=bold guifg=#000000
                   guibg=#df5f00
airline_warning_red xxx ctermfg=167 ctermbg=166 guifg=#000000 guibg=#df5f00
CtrlPwhite     xxx term=bold cterm=bold ctermfg=193 ctermbg=22 gui=bold
CtrlPlight     xxx ctermfg=145 ctermbg=236
CtrlPdark      xxx ctermfg=240 ctermbg=233
CtrlParrow1    xxx ctermfg=236 ctermbg=22
CtrlParrow2    xxx ctermfg=22 ctermbg=236
CtrlParrow3    xxx ctermfg=236 ctermbg=233
airline_tab    xxx ctermfg=145 ctermbg=236
airline_tabsel xxx term=bold cterm=bold ctermfg=195 ctermbg=25 gui=bold
airline_tabtype xxx term=bold cterm=bold ctermfg=254 ctermbg=52 gui=bold
airline_tabfill xxx ctermfg=240 ctermbg=233
airline_tabmod xxx term=bold cterm=bold ctermfg=193 ctermbg=22 gui=bold
airline_tabhid xxx ctermfg=240 ctermbg=233
airline_c1_inactive xxx ctermfg=237 ctermbg=234 guifg=#444444 guibg=#1c1c1c
airline_y_to_airline_z_bold xxx term=bold cterm=bold ctermfg=25 ctermbg=236 gui=bold
airline_y_to_airline_z_red xxx ctermfg=167 ctermbg=236
airline_c_to_airline_x_bold xxx term=bold cterm=bold ctermfg=233 ctermbg=233 gui=bold
airline_c_to_airline_x_red xxx ctermfg=167 ctermbg=233
airline_a_to_airline_b_bold xxx term=bold cterm=bold ctermfg=25 ctermbg=236 gui=bold
airline_a_to_airline_b_red xxx ctermfg=167 ctermbg=236
airline_x_to_airline_y_bold xxx term=bold cterm=bold ctermfg=236 ctermbg=233 gui=bold
airline_x_to_airline_y_red xxx ctermfg=167 ctermbg=233
airline_b_to_airline_c_bold xxx term=bold cterm=bold ctermfg=236 ctermbg=233 gui=bold
airline_b_to_airline_c_red xxx ctermfg=167 ctermbg=233
airline_z_to_airline_warning_bold xxx term=bold cterm=bold ctermfg=166 ctermbg=25 gui=bold
airline_z_to_airline_warning_red xxx ctermfg=167 ctermbg=25
airline_tabsel_to_airline_tabfill xxx ctermfg=25 ctermbg=233
airline_tabfill_to_airline_tabtype xxx ctermfg=52 ctermbg=233
vimTodo        xxx links to Todo
vimCommand     xxx links to Statement
vimOption      xxx links to PreProc
vimErrSetting  xxx links to vimError
vimAutoEvent   xxx links to Type
vimGroup       xxx links to Type
vimHLGroup     xxx links to vimGroup
vimFuncName    xxx links to Function
vimGlobal      xxx cleared
vimSubst       xxx links to vimCommand
vimNumber      xxx links to Number
vimAddress     xxx links to vimMark
vimAutoCmd     xxx links to vimCommand
vimExtCmd      xxx cleared
vimFilter      xxx cleared
vimLet         xxx links to vimCommand
vimMap         xxx links to vimCommand
vimMark        xxx links to Number
vimSet         xxx cleared
vimSyntax      xxx links to vimCommand
vimUserCmd     xxx cleared
vimCmdSep      xxx cleared
vimIsCommand   xxx cleared
vimVar         xxx links to Identifier
vimFBVar       xxx links to vimVar
vimInsert      xxx links to vimString
vimBehaveModel xxx links to vimBehave
vimBehaveError xxx links to vimError
vimBehave      xxx links to vimCommand
vimFTCmd       xxx links to vimCommand
vimFTOption    xxx links to vimSynType
vimFTError     xxx links to vimError
vimFiletype    xxx cleared
vimExecute     xxx cleared
vimNotFunc     xxx links to vimCommand
vimFunction    xxx cleared
vimFunctionError xxx links to vimError
vimLineComment xxx links to vimComment
vimSpecFile    xxx links to Identifier
vimOperParen   xxx cleared
vimComment     xxx links to Comment
vimString      xxx links to String
vimRegister    xxx links to SpecialChar
vimCmplxRepeat xxx links to SpecialChar
vimRegion      xxx cleared
vimSynLine     xxx cleared
vimNotation    xxx links to Special
vimCtrlChar    xxx links to SpecialChar
vimFuncVar     xxx links to Identifier
vimContinue    xxx links to Special
vimAugroupKey  xxx links to vimCommand
vimAugroup     xxx cleared
vimAugroupError xxx cleared
vimEnvvar      xxx links to PreProc
vimFunc        xxx links to vimError
vimParenSep    xxx links to Delimiter
vimSep         xxx links to Delimiter
vimOperError   xxx links to Error
vimFuncKey     xxx links to vimCommand
vimFuncSID     xxx links to Special
vimAbb         xxx links to vimCommand
vimEcho        xxx cleared
vimEchoHL      xxx links to vimCommand
vimIf          xxx cleared
vimHighlight   xxx links to vimCommand
vimNorm        xxx links to vimCommand
vimUnmap       xxx links to vimMap
vimUserCommand xxx links to vimCommand
vimFuncBody    xxx cleared
vimFuncBlank   xxx cleared
vimPattern     xxx links to Type
vimSpecFileMod xxx links to vimSpecFile
vimEscapeBrace xxx cleared
vimSetEqual    xxx cleared
vimSetString   xxx links to vimString
vimSubstRep    xxx cleared
vimSubstRange  xxx cleared
vimUserAttrb   xxx links to vimSpecial
vimUserAttrbKey xxx links to vimOption
vimUserAttrbCmplt xxx links to vimSpecial
vimUserCmdError xxx links to Error
vimUserAttrbCmpltFunc xxx links to Special
vimCommentString xxx links to vimString
vimPatSepErr   xxx links to vimPatSep
vimPatSep      xxx links to SpecialChar
vimPatSepZ     xxx links to vimPatSep
vimPatSepZone  xxx links to vimString
vimPatSepR     xxx links to vimPatSep
vimPatRegion   xxx cleared
vimNotPatSep   xxx links to vimString
vimStringCont  xxx links to vimString
vimSubstTwoBS  xxx links to vimString
vimSubstSubstr xxx links to SpecialChar
vimCollection  xxx cleared
vimSubstPat    xxx cleared
vimSubst1      xxx links to vimSubst
vimSubstDelim  xxx links to Delimiter
vimSubstRep4   xxx cleared
vimSubstFlagErr xxx links to vimError
vimCollClass   xxx cleared
vimCollClassErr xxx links to vimError
vimSubstFlags  xxx links to Special
vimMarkNumber  xxx links to vimNumber
vimPlainMark   xxx links to vimMark
vimPlainRegister xxx links to vimRegister
vimSetMod      xxx links to vimOption
vimSetSep      xxx links to Statement
vimMapMod      xxx links to vimBracket
vimMapLhs      xxx cleared
vimAutoCmdSpace xxx cleared
vimAutoEventList xxx cleared
vimAutoCmdSfxList xxx cleared
vimEchoHLNone  xxx links to vimGroup
vimMapBang     xxx links to vimCommand
vimMapRhs      xxx cleared
vimMapModKey   xxx links to vimFuncSID
vimMapModErr   xxx links to vimError
vimMapRhsExtend xxx cleared
vimMenuBang    xxx cleared
vimMenuPriority xxx cleared
vimMenuName    xxx links to PreProc
vimMenuMod     xxx links to vimMapMod
vimMenuNameMore xxx links to vimMenuName
vimMenuMap     xxx cleared
vimMenuRhs     xxx cleared
vimBracket     xxx links to Delimiter
vimUserFunc    xxx links to Normal
vimElseIfErr   xxx links to Error
vimBufnrWarn   xxx links to vimWarn
vimNormCmds    xxx cleared
vimGroupSpecial xxx links to Special
vimGroupList   xxx cleared
vimSynError    xxx links to Error
vimSynContains xxx links to vimSynOption
vimSynKeyContainedin xxx links to vimSynContains
vimSynNextgroup xxx links to vimSynOption
vimSynType     xxx links to vimSpecial
vimAuSyntax    xxx cleared
vimSynCase     xxx links to Type
vimSynCaseError xxx links to vimError
vimClusterName xxx cleared
vimGroupName   xxx links to vimGroup
vimGroupAdd    xxx links to vimSynOption
vimGroupRem    xxx links to vimSynOption
vimSynKeyOpt   xxx links to vimSynOption
vimSynKeyRegion xxx cleared
vimMtchComment xxx links to vimComment
vimSynMtchOpt  xxx links to vimSynOption
vimSynRegPat   xxx links to vimString
vimSynMatchRegion xxx cleared
vimSynMtchCchar xxx cleared
vimSynMtchGroup xxx cleared
vimSynPatRange xxx links to vimString
vimSynNotPatRange xxx links to vimSynRegPat
vimSynRegOpt   xxx links to vimSynOption
vimSynReg      xxx links to Type
vimSynMtchGrp  xxx links to vimSynOption
vimSynRegion   xxx cleared
vimSynPatMod   xxx cleared
vimSyncC       xxx links to Type
vimSyncLines   xxx cleared
vimSyncMatch   xxx cleared
vimSyncError   xxx links to Error
vimSyncLinebreak xxx cleared
vimSyncLinecont xxx cleared
vimSyncRegion  xxx cleared
vimSyncGroupName xxx links to vimGroupName
vimSyncKey     xxx links to Type
vimSyncGroup   xxx links to vimGroupName
vimSyncNone    xxx links to Type
vimHiLink      xxx cleared
vimHiClear     xxx links to vimHighlight
vimHiKeyList   xxx cleared
vimHiCtermError xxx links to vimError
vimHiBang      xxx cleared
vimHiGroup     xxx links to vimGroupName
vimHiAttrib    xxx links to PreProc
vimFgBgAttrib  xxx links to vimHiAttrib
vimHiAttribList xxx links to vimError
vimHiCtermColor xxx cleared
vimHiFontname  xxx cleared
vimHiGuiFontname xxx cleared
vimHiGuiRgb    xxx links to vimNumber
vimHiTerm      xxx links to Type
vimHiCTerm     xxx links to vimHiTerm
vimHiStartStop xxx links to vimHiTerm
vimHiCtermFgBg xxx links to vimHiTerm
vimHiGui       xxx links to vimHiTerm
vimHiGuiFont   xxx links to vimHiTerm
vimHiGuiFgBg   xxx links to vimHiTerm
vimHiKeyError  xxx links to vimError
vimHiTermcap   xxx cleared
vimHiNmbr      xxx links to Number
vimCommentTitle xxx links to PreProc
vimCommentTitleLeader xxx cleared
vimSearchDelim xxx links to Statement
vimSearch      xxx links to vimString
vimEmbedError  xxx links to vimError
podCmdText     xxx links to String
podCommand     xxx links to Statement
podOverIndent  xxx links to Number
podForKeywd    xxx links to Identifier
podFormat      xxx links to Identifier
podVerbatimLine xxx links to PreProc
podSpecial     xxx links to Identifier
podEscape      xxx links to String
podEscape2     xxx links to Number
podBoldItalic  xxx cleared
podBoldOpen    xxx cleared
podBoldAlternativeDelimOpen xxx cleared
podItalicBold  xxx cleared
podItalicOpen  xxx cleared
podItalicAlternativeDelimOpen xxx cleared
podNoSpaceOpen xxx cleared
podNoSpaceAlternativeDelimOpen xxx cleared
podIndexOpen   xxx cleared
podIndexAlternativeDelimOpen xxx cleared
podBold        xxx cleared
podBoldAlternativeDelim xxx cleared
podItalic      xxx cleared
podItalicAlternativeDelim xxx cleared
perlTodo       xxx links to Todo
perlPOD        xxx links to perlComment
perlBraces     xxx cleared
perlConditional xxx links to Conditional
perlElseIfError xxx links to Error
perlRepeat     xxx links to Repeat
perlOperator   xxx links to Operator
perlFakeGroup  xxx cleared
perlControl    xxx links to PreProc
perlStatementStorage xxx links to perlStatement
perlStatementControl xxx links to perlStatement
perlStatementScalar xxx links to perlStatement
perlStatementRegexp xxx links to perlStatement
perlStatementNumeric xxx links to perlStatement
perlStatementList xxx links to perlStatement
perlStatementHash xxx links to perlStatement
perlStatementIOfunc xxx links to perlStatement
perlFiledescStatementNocomma xxx cleared
perlStatementFiledesc xxx links to perlStatement
perlFiledescStatementComma xxx cleared
perlStatementVector xxx links to perlStatement
perlStatementFiles xxx links to perlStatement
perlStatementFlow xxx links to perlStatement
perlStatementInclude xxx links to perlStatement
perlStatementProc xxx links to perlStatement
perlStatementSocket xxx links to perlStatement
perlStatementIPC xxx links to perlStatement
perlStatementNetwork xxx links to perlStatement
perlStatementPword xxx links to perlStatement
perlStatementTime xxx links to perlStatement
perlStatementMisc xxx links to perlStatement
perlStatementIndirObj xxx links to perlStatement
perlStatementIndirObjWrap xxx cleared
perlLabel      xxx links to Label
perlVarPlain   xxx links to perlIdentifier
perlVarNotInMatches xxx links to perlIdentifier
perlVarSlash   xxx links to perlIdentifier
perlPackageRef xxx links to perlType
perlVarMember  xxx cleared
perlVarSimpleMember xxx links to perlIdentifier
perlMethod     xxx links to perlIdentifier
perlVarPlain2  xxx links to perlIdentifier
perlFunctionName xxx links to perlIdentifier
perlVarBlock   xxx cleared
perlVarBlock2  xxx cleared
perlShellCommand xxx links to perlString
perlFloat      xxx links to Float
perlNumber     xxx links to Number
perlStringUnexpanded xxx links to perlString
perlString     xxx links to String
perlQQ         xxx links to perlString
perlArrow      xxx links to perlIdentifier
perlVarSimpleMemberName xxx links to perlString
perlPackageConst xxx cleared
perlFiledescRead xxx links to perlIdentifier
perlFiledescStatement xxx links to perlIdentifier
perlSpecialString xxx links to perlSpecial
NONE           xxx cleared
perlSpecialStringU2 xxx links to perlString
perlSpecialStringU xxx links to perlSpecial
perlSpecialMatch xxx links to perlSpecial
perlNotEmptyLine xxx links to Error
perlMatchStartEnd xxx links to perlStatement
perlVStringV   xxx links to perlStringStartEnd
perlParensSQ   xxx links to perlString
perlBracketsSQ xxx links to perlString
perlBracesSQ   xxx links to perlString
perlAnglesSQ   xxx links to perlString
perlParensDQ   xxx links to perlString
perlBracketsDQ xxx links to perlString
perlBracesDQ   xxx links to perlString
perlAnglesDQ   xxx links to perlString
perlMatch      xxx links to perlString
perlComment    xxx links to Comment
perlSubstitutionGQQ xxx links to perlString
perlSubstitutionSQ xxx links to perlString
perlTranslationGQ xxx links to perlString
perlStringStartEnd xxx links to perlString
perlHereDoc    xxx links to perlString
perlAutoload   xxx cleared
perlStatementPackage xxx links to perlStatement
perlPackageDecl xxx links to perlType
perlSubError   xxx links to Error
perlSubAttributesCont xxx links to perlSubAttributes
perlSubAttributes xxx links to PreProc
perlSubPrototypeError xxx links to Error
perlSubPrototype xxx links to Type
perlSubName    xxx links to Function
perlFunction   xxx links to Keyword
perlFunctionPRef xxx links to perlType
perlSharpBang  xxx links to PreProc
perlFormatName xxx links to perlIdentifier
perlFormatField xxx links to perlString
perlFormat     xxx cleared
perlDATA       xxx links to perlComment
perlInclude    xxx links to Include
perlSpecial    xxx links to Special
perlCharacter  xxx links to Character
perlType       xxx links to Type
perlIdentifier xxx links to Identifier
perlStatement  xxx links to Statement
perlList       xxx links to perlStatement
perlMisc       xxx links to perlStatement
perlStorageClass xxx links to perlType
perlSpecialAscii xxx links to perlSpecial
perlSpecialDollar xxx links to perlSpecial
perlSync       xxx cleared
perlSyncPOD    xxx cleared
vimScriptDelim xxx links to Comment
vimPerlRegion  xxx cleared
rubyConditional xxx links to Conditional
rubyExceptional xxx links to rubyConditional
rubyMethodExceptional xxx links to rubyDefine
rubyTodo       xxx links to Todo
rubyStringEscape xxx links to Special
rubyQuoteEscape xxx links to rubyStringEscape
rubyInterpolation xxx cleared
rubyClassVariable xxx links to rubyIdentifier
rubyPredefinedVariable xxx links to rubyPredefinedIdentifier
rubyInvalidVariable xxx links to Error
rubyNoInterpolation xxx links to rubyString
rubyDelimEscape xxx cleared
rubyNestedParentheses xxx cleared
rubyNestedCurlyBraces xxx cleared
rubyNestedAngleBrackets xxx cleared
rubyNestedSquareBrackets xxx cleared
rubyRegexpComment xxx links to Comment
rubyRegexpParens xxx cleared
rubyRegexpCharClass xxx links to rubyRegexpSpecial
rubyRegexpEscape xxx links to rubyRegexpSpecial
rubyRegexpBrackets xxx cleared
rubyRegexpQuantifier xxx links to rubyRegexpSpecial
rubyRegexpAnchor xxx links to rubyRegexpSpecial
rubyRegexpDot  xxx links to rubyRegexpCharClass
rubyASCIICode  xxx links to Character
rubyInteger    xxx links to Number
rubyFloat      xxx links to Float
rubyLocalVariableOrMethod xxx cleared
rubyBlockArgument xxx cleared
rubyBlockParameter xxx links to rubyIdentifier
rubyBlockParameterList xxx cleared
rubyPredefinedConstant xxx links to rubyPredefinedIdentifier
rubySymbolDelimiter xxx links to rubyStringDelimiter
rubyHeredocStart xxx cleared
rubyHeredoc    xxx links to rubyString
rubyAliasDeclaration2 xxx cleared
rubyAliasDeclaration xxx cleared
rubyBoolean    xxx links to Boolean
rubyPseudoVariable xxx links to Constant
rubyMethodDeclaration xxx cleared
rubyOperator   xxx links to Operator
rubyClassDeclaration xxx cleared
rubyModuleDeclaration xxx cleared
rubyKeyword    xxx links to Keyword
rubyBeginEnd   xxx links to Statement
rubyDefine     xxx links to Define
rubyMethodBlock xxx cleared
rubyBlock      xxx cleared
rubyConditionalModifier xxx links to rubyConditional
rubyRepeatModifier xxx links to rubyRepeat
rubyDoBlock    xxx cleared
rubyCurlyBlockDelimiter xxx cleared
rubyCurlyBlock xxx cleared
rubyArrayDelimiter xxx cleared
rubyArrayLiteral xxx cleared
rubyBlockExpression xxx cleared
rubyCaseExpression xxx cleared
rubyConditionalExpression xxx cleared
rubyRepeat     xxx links to Repeat
rubyOptionalDo xxx links to rubyRepeat
rubyOptionalDoLine xxx cleared
rubyRepeatExpression xxx cleared
rubyAccess     xxx links to Statement
rubyAttribute  xxx links to Statement
rubyEval       xxx links to Statement
rubyException  xxx links to Exception
rubyInclude    xxx links to Include
rubySpaceError xxx links to rubyError
rubyComment    xxx links to Comment
rubyMultilineComment xxx cleared
rubyDocumentation xxx links to Comment
rubyKeywordAsMethod xxx cleared
rubyDataDirective xxx links to Delimiter
rubyData       xxx links to Comment
rubyError      xxx links to Error
vimRubyRegion  xxx cleared
pythonStatement xxx links to Statement
pythonFunction xxx links to Function
pythonConditional xxx links to Conditional
pythonRepeat   xxx links to Repeat
pythonException xxx links to Exception
pythonInclude  xxx links to Include
pythonDecorator xxx links to Define
pythonTodo     xxx links to Todo
pythonComment  xxx links to Comment
pythonEscape   xxx links to Special
pythonString   xxx links to String
pythonSpaceError xxx cleared
pythonDoctest  xxx links to Special
pythonRawString xxx links to String
pythonNumber   xxx links to Number
pythonBuiltin  xxx links to Function
pythonExceptions xxx links to Structure
pythonDoctestValue xxx links to Define
pythonSync     xxx cleared
vimPythonRegion xxx cleared
vimAugroupSyncA xxx cleared
vimError       xxx links to Error
vimKeyCodeError xxx links to vimError
vimWarn        xxx links to WarningMsg
vimAuHighlight xxx links to vimHighlight
vimAutoCmdOpt  xxx links to vimOption
vimAutoSet     xxx links to vimCommand
vimCondHL      xxx links to vimCommand
vimElseif      xxx links to vimCondHL
vimFold        xxx links to Folded
vimSynOption   xxx links to Special
vimHLMod       xxx links to PreProc
vimKeyCode     xxx links to vimSpecFile
vimKeyword     xxx links to Statement
vimSpecial     xxx links to Type
vimStatement   xxx links to Statement
--- Variables ---
NERDTreeMapPreviewSplit  gi
syntastic_auto_loc_list #2
vimwiki_rxSchemeUrl    \%(wiki\d\+\|diary\|local\|http\|https\|file\|ftp\|gopher\|telnet\|nntp\|ldap\|rsync\|imap\|pop\|irc\|ircs\|cvs\|svn\|svn+ssh\|git\|ssh\|fish\|sftp\|mailto\|news\|xmpp\|sip\|sips\|doi\|urn\|tel\):.*
NERDTreeMapCloseChildren  X
vimwiki_use_calendar  #1
tagbar_map_nexttag     <C-N>
tagbar_singleclick    #0
tagbar_indent         #2
NERDTreeOpener        {'_previousWindow': function('163'), '_openDirectory': function('162'), '_restoreCursorPos': function('164'), '_saveCursorPos': function('166'), '_newSplit': function('158'), '_checkToCloseTree': function('155'), '_newVSplit': function('159'), '_openFile': function('161'), 'open': function('160'), '_gotoTargetWin': function('156'), 'New': function('157'), '_reuseWindow': function('165')}
NERDTreeShowHidden     0
loaded_nerdtree_fs_menu #1
gitgutter_eager       #1
SuperTabDefaultCompletionType  <c-p>
snipMate              {'get_snippets': {'faked_function_reference': 'snipMate#GetSnippets'}, 'snippet_dirs': {'faked_function_reference': 'return split(&runtimepath,",")'}, 'no_match_completion_feedkeys_chars': '^I', 'get_scopes': {'faked_function_reference': 'return split(&ft,"\\.")+[&syntax, "_"]'}, 'scope_aliases': {'xhtml': 'html', 'ur': 'html,javascript', 'cu': 'c', 'php': 'php,html,javascript', 'html': 'javascript', 'objc': 'c', 'cpp': 'c', 'mxml': 'actionscript', 'eruby': 'eruby-rails,html'}}
loaded_syntastic_checker #1
tagbar_map_help       ['<F1>', '?']
airline_right_sep      
ctrlp_mruf_max        #250
tagbar_map_togglefold ['o', 'za']
SyntasticRegistry     {'getCheckers': function('248'), 'echoInfoFor': function('250'), 'isCheckable': function('246'), '_checkDeprecation': function('255'), 'Instance': function('244'), '_filterCheckersByName': function('252'), '_validateUniqueName': function('254'), 'getCheckersMap': function('247'), '_loadCheckers': function('253'), 'CreateAndRegisterChecker': function('245'), 'getKnownFiletypes': function('249'), '_registerChecker': function('251')}
vimwiki_web_schemes2   mailto,news,xmpp,sip,sips,doi,urn,tel
SuperTabLongestHighlight #0
tagbar_map_jump        <CR>
NERDTreeMapCloseDir    x
SignatureWrapJumps    #1
tagbar_map_openfold   ['+', '<kPlus>', 'zo']
EasyMotion_move_highlight #1
syntastic_defaults    {'aggregate_errors': 0, 'reuse_loc_lists': 1, 'check_on_open': 0, 'bash_hack': 1, 'check_on_wq': 1, 'ignore_files': [], 'quiet_messages': {}, 'auto_loc_list': 2, 'warning_symbol': '>>', 'error_symbol': '>>', 'enable_balloons': 1, 'echo_current_error': 1, 'enable_highlighting': 1, 'id_checkers': 1, 'always_populate_loc_list': 0, 'stl_format': '[Syntax: line:%F (%t)]', 'full_redraws': 0, 'auto_jump': 0, 'loc_list_height': 10, 'style_error_symbol': 'S>', 'debug': 0, 'enable_signs': 1, 'filetype_map': {}, 'style_warning_symbol': 'S>'}
bundles               [{'uri': 'https://github.com/gmarik/vundle.git', 'rtpath': '/Users/chris/.vim/bundle/vundle', 'name': 'vundle', 'name_spec': 'gmarik/vundle', 'path': function('1')}, {'uri': 'https://github.com/nanotech/jellybeans.vim.git', 'rtpath': '/Users/chris/.vim/bundle/jellybeans.vim', 'name': 'jellybeans.vim', 'name_spec': 'nanotech/jellybeans.vim', 'path': function('1')}, {'uri': 'https://github.com/MarcWeber/vim-addon-mw-utils.git', 'rtpath': '/Users/chris/.vim/bundle/vim-addon-mw-utils', 'name': 'vim-addon-mw-utils', 'name_spec': 'MarcWeber/vim-addon-mw-utils', 'path': function('1')}, {'uri': 'https://github.com/tomtom/tlib_vim.git', 'rtpath': '/Users/chris/.vim/bundle/tlib_vim', 'name': 'tlib_vim', 'name_spec': 'tomtom/tlib_vim', 'path': function('1')}, {'uri': 'https://github.com/garbas/vim-snipmate.git', 'rtpath': '/Users/chris/.vim/bundle/vim-snipmate', 'name': 'vim-snipmate', 'name_spec': 'garbas/vim-snipmate', 'path': function('1')}, {'uri': 'https://github.com/honza/vim-snippets.git', 'rtpath': '/Users/chris/.vim/bundle/vim-snippets', 'name': 'vim-snippets', 'name_spec': 'honza/vim-snippets', 'path': function('1')}, {'uri': 'https://github.com/jeffkreeftmeijer/vim-numbertoggle.git', 'rtpath': '/Users/chris/.vim/bundle/vim-numbertoggle', 'name': 'vim-numbertoggle', 'name_spec': 'jeffkreeftmeijer/vim-numbertoggle', 'path': function('1')}, {'uri': 'https://github.com/ToadJamb/vim_test_runner.git', 'rtpath': '/Users/chris/.vim/bundle/vim_test_runner', 'name': 'vim_test_runner', 'name_spec': 'ToadJamb/vim_test_runner', 'path': function('1')}, {'uri': 'https://github.com/gkz/vim-ls.git', 'rtpath': '/Users/chris/.vim/bundle/vim-ls', 'name': 'vim-ls', 'name_spec': 'gkz/vim-ls', 'path': function('1')}, {'uri': 'https://github.com/tpope/vim-rails.git', 'rtpath': '/Users/chris/.vim/bundle/vim-rails', 'name': 'vim-rails', 'name_spec': 'tpope/vim-rails', 'path': function('1')}, {'uri': 'https://github.com/vim-ruby/vim-ruby.git', 'rtpath': '/Users/chris/.vim/bundle/vim-ruby', 'name': 'vim-ruby', 'name_spec': 'vim-ruby/vim-ruby', 'path': function('1')}, {'uri': 'https://github.com/pangloss/vim-javascript.git', 'rtpath': '/Users/chris/.vim/bundle/vim-javascript', 'name': 'vim-javascript', 'name_spec': 'pangloss/vim-javascript', 'path': function('1')}, {'uri': 'https://github.com/sunaku/vim-ruby-minitest.git', 'rtpath': '/Users/chris/.vim/bundle/vim-ruby-minitest', 'name': 'vim-ruby-minitest', 'name_spec': 'sunaku/vim-ruby-minitest', 'path': function('1')}, {'uri': 'https://github.com/tpope/vim-markdown.git', 'rtpath': '/Users/chris/.vim/bundle/vim-markdown', 'name': 'vim-markdown', 'name_spec': 'tpope/vim-markdown', 'path': function('1')}, {'uri': 'https://github.com/cakebaker/scss-syntax.vim.git', 'rtpath': '/Users/chris/.vim/bundle/scss-syntax.vim', 'name': 'scss-syntax.vim', 'name_spec': 'cakebaker/scss-syntax.vim', 'path': function('1')}, {'uri': 'https://github.com/kchmck/vim-coffee-script.git', 'rtpath': '/Users/chris/.vim/bundle/vim-coffee-script', 'name': 'vim-coffee-script', 'name_spec': 'kchmck/vim-coffee-script', 'path': function('1')}, {'uri': 'https://github.com/chrisbra/csv.vim.git', 'rtpath': '/Users/chris/.vim/bundle/csv.vim', 'name': 'csv.vim', 'name_spec': 'chrisbra/csv.vim', 'path': function('1')}, {'uri': 'https://github.com/tpope/vim-git.git', 'rtpath': '/Users/chris/.vim/bundle/vim-git', 'name': 'vim-git', 'name_spec': 'tpope/vim-git', 'path': function('1')}, {'uri': 'https://github.com/christoomey/vim-tmux-navigator.git', 'rtpath': '/Users/chris/.vim/bundle/vim-tmux-navigator', 'name': 'vim-tmux-navigator', 'name_spec': 'christoomey/vim-tmux-navigator', 'path': function('1')}, {'uri': 'https://github.com/airblade/vim-gitgutter.git', 'rtpath': '/Users/chris/.vim/bundle/vim-gitgutter', 'name': 'vim-gitgutter', 'name_spec': 'airblade/vim-gitgutter', 'path': function('1')}, {'uri': 'https://github.com/rking/ag.vim.git', 'rtpath': '/Users/chris/.vim/bundle/ag.vim', 'name': 'ag.vim', 'name_spec': 'rking/ag.vim', 'path': function('1')}, {'uri': 'https://github.com/jeetsukumaran/vim-buffergator.git', 'rtpath': '/Users/chris/.vim/bundle/vim-buffergator', 'name': 'vim-buffergator', 'name_spec': 'jeetsukumaran/vim-buffergator', 'path': function('1')}, {'uri': 'https://github.com/tpope/vim-unimpaired.git', 'rtpath': '/Users/chris/.vim/bundle/vim-unimpaired', 'name': 'vim-unimpaired', 'name_spec': 'tpope/vim-unimpaired', 'path': function('1')}, {'uri': 'https://github.com/kien/ctrlp.vim.git', 'rtpath': '/Users/chris/.vim/bundle/ctrlp.vim', 'name': 'ctrlp.vim', 'name_spec': 'kien/ctrlp.vim', 'path': function('1')}, {'uri': 'https://github.com/ap/vim-css-color.git', 'rtpath': '/Users/chris/.vim/bundle/vim-css-color', 'name': 'vim-css-color', 'name_spec': 'ap/vim-css-color', 'path': function('1')}, {'uri': 'https://github.com/tpope/vim-dispatch.git', 'rtpath': '/Users/chris/.vim/bundle/vim-dispatch', 'name': 'vim-dispatch', 'name_spec': 'tpope/vim-dispatch', 'path': function('1')}, {'uri': 'https://github.com/tpope/vim-endwise.git', 'rtpath': '/Users/chris/.vim/bundle/vim-endwise', 'name': 'vim-endwise', 'name_spec': 'tpope/vim-endwise', 'path': function('1')}, {'uri': 'https://github.com/Lokaltog/vim-easymotion.git', 'rtpath': '/Users/chris/.vim/bundle/vim-easymotion', 'name': 'vim-easymotion', 'name_spec': 'Lokaltog/vim-easymotion', 'path': function('1')}, {'uri': 'https://github.com/tpope/vim-eunuch.git', 'rtpath': '/Users/chris/.vim/bundle/vim-eunuch', 'name': 'vim-eunuch', 'name_spec': 'tpope/vim-eunuch', 'path': function('1')}, {'uri': 'https://github.com/tpope/vim-fugitive.git', 'rtpath': '/Users/chris/.vim/bundle/vim-fugitive', 'name': 'vim-fugitive', 'name_spec': 'tpope/vim-fugitive', 'path': function('1')}, {'uri': 'https://github.com/mattn/gist-vim.git', 'rtpath': '/Users/chris/.vim/bundle/gist-vim', 'name': 'gist-vim', 'name_spec': 'mattn/gist-vim', 'path': function('1')}, {'uri': 'https://github.com/sjl/gundo.vim.git', 'rtpath': '/Users/chris/.vim/bundle/gundo.vim', 'name': 'gundo.vim', 'name_spec': 'sjl/gundo.vim', 'path': function('1')}, {'uri': 'https://github.com/edsono/vim-matchit.git', 'rtpath': '/Users/chris/.vim/bundle/vim-matchit', 'name': 'vim-matchit', 'name_spec': 'edsono/vim-matchit', 'path': function('1')}, {'uri': 'https://github.com/terryma/vim-multiple-cursors.git', 'rtpath': '/Users/chris/.vim/bundle/vim-multiple-cursors', 'name': 'vim-multiple-cursors', 'name_spec': 'terryma/vim-multiple-cursors', 'path': function('1')}, {'uri': 'https://github.com/chrisbra/NrrwRgn.git', 'rtpath': '/Users/chris/.vim/bundle/NrrwRgn', 'name': 'NrrwRgn', 'name_spec': 'chrisbra/NrrwRgn', 'path': function('1')}, {'uri': 'https://github.com/scrooloose/nerdcommenter.git', 'rtpath': '/Users/chris/.vim/bundle/nerdcommenter', 'name': 'nerdcommenter', 'name_spec': 'scrooloose/nerdcommenter', 'path': function('1')}, {'uri': 'https://github.com/scrooloose/nerdtree.git', 'rtpath': '/Users/chris/.vim/bundle/nerdtree', 'name': 'nerdtree', 'name_spec': 'scrooloose/nerdtree', 'path': function('1')}, {'uri': 'https://github.com/tpope/vim-repeat.git', 'rtpath': '/Users/chris/.vim/bundle/vim-repeat', 'name': 'vim-repeat', 'name_spec': 'tpope/vim-repeat', 'path': function('1')}, {'uri': 'https://github.com/ervandew/supertab.git', 'rtpath': '/Users/chris/.vim/bundle/supertab', 'name': 'supertab', 'name_spec': 'ervandew/supertab', 'path': function('1')}, {'uri': 'https://github.com/tpope/vim-surround.git', 'rtpath': '/Users/chris/.vim/bundle/vim-surround', 'name': 'vim-surround', 'name_spec': 'tpope/vim-surround', 'path': function('1')}, {'uri': 'https://github.com/scrooloose/syntastic.git', 'rtpath': '/Users/chris/.vim/bundle/syntastic', 'name': 'syntastic', 'name_spec': 'scrooloose/syntastic', 'path': function('1')}, {'uri': 'https://github.com/majutsushi/tagbar.git', 'rtpath': '/Users/chris/.vim/bundle/tagbar', 'name': 'tagbar', 'name_spec': 'majutsushi/tagbar', 'path': function('1')}, {'uri': 'https://github.com/bronson/vim-trailing-whitespace.git', 'rtpath': '/Users/chris/.vim/bundle/vim-trailing-whitespace', 'name': 'vim-trailing-whitespace', 'name_spec': 'bronson/vim-trailing-whitespace', 'path': function('1')}, {'uri': 'https://github.com/vim-scripts/vimwiki.git', 'rtpath': '/Users/chris/.vim/bundle/vimwiki', 'name': 'vimwiki', 'name_spec': 'vim-scripts/vimwiki', 'path': function('1')}, {'uri': 'https://github.com/thinca/vim-visualstar.git', 'rtpath': '/Users/chris/.vim/bundle/vim-visualstar', 'name': 'vim-visualstar', 'name_spec': 'thinca/vim-visualstar', 'path': function('1')}, {'uri': 'https://github.com/skalnik/vim-vroom.git', 'rtpath': '/Users/chris/.vim/bundle/vim-vroom', 'name': 'vim-vroom', 'name_spec': 'skalnik/vim-vroom', 'path': function('1')}, {'uri': 'https://github.com/mattn/webapi-vim.git', 'rtpath': '/Users/chris/.vim/bundle/webapi-vim', 'name': 'webapi-vim', 'name_spec': 'mattn/webapi-vim', 'path': function('1')}, {'uri': 'https://github.com/itspriddle/ZoomWin.git', 'rtpath': '/Users/chris/.vim/bundle/ZoomWin', 'name': 'ZoomWin', 'name_spec': 'itspriddle/ZoomWin', 'path': function('1')}, {'uri': 'https://github.com/airblade/vim-rooter.git', 'rtpath': '/Users/chris/.vim/bundle/vim-rooter', 'name': 'vim-rooter', 'name_spec': 'airblade/vim-rooter', 'path': function('1')}, {'uri': 'https://github.com/bling/vim-airline.git', 'rtpath': '/Users/chris/.vim/bundle/vim-airline', 'name': 'vim-airline', 'name_spec': 'bling/vim-airline', 'path': function('1')}, {'uri': 'https://github.com/edkolev/tmuxline.vim.git', 'rtpath': '/Users/chris/.vim/bundle/tmuxline.vim', 'name': 'tmuxline.vim', 'name_spec': 'edkolev/tmuxline.vim', 'path': function('1')}, {'uri': 'https://github.com/kshenoy/vim-signature.git', 'rtpath': '/Users/chris/.vim/bundle/vim-signature', 'name': 'vim-signature', 'name_spec': 'kshenoy/vim-signature', 'path': function('1')}]
loaded_vimwiki        #1
syntastic_full_redraws #0
NERDTreeSortOrder     ['\/$', '*', '\.swp$', '\.bak$', '\~$']
NERDTreeMinimalUI      0
NERDUsePlaceHolders    1
syntastic_ignore_files []
loaded_zipPlugin       v27
NERDTreeMapRefresh     r
jellybeans_background_color_256 #233
loaded_rrhelper       #1
EasyMotion_use_migemo #0
loaded_spellfile_plugin #1
syntastic_check_on_wq #1
vimwiki_current_idx   #0
loaded_syntastic_notifier_highlighting #1
ctrlp_ext_vars        []
ext                    .wiki
SignatureMap          {'GotoPrevMarker': '[-', 'GotoNextLineByPos': ']''', 'GotoNextSpotByPos': ']`', 'GotoNextMarkerAny': ']=', 'GotoPrevLineByPos': '[''', 'ListLocalMarks': '''?', 'GotoPrevSpotByPos': '[`', 'ToggleMarkAtLine': '.', 'PurgeMarks': '<Space>', 'GotoNextLineAlpha': ''']', 'PurgeMarkers': '<BS>', 'GotoNextSpotAlpha': '`]', 'GotoPrevLineAlpha': '''[', 'GotoNextMarker': ']-', 'Leader': 'm', 'GotoPrevSpotAlpha': '`[', 'PurgeMarksAtLine': '-', 'GotoPrevMarkerAny': '[=', 'PlaceNextMark': ','}
NERDTreeAutoDeleteBuffer #0
airline_section_a      %#__accent_bold#%{airline#util#wrap(airline#parts#mode(),0)}%#__restore__#%{airline#util#append(airline#parts#paste(),0)}%{airline#util#append(airline#parts#iminsert(),0)}
airline_section_b      %{airline#util#wrap(airline#extensions#hunks#get_hunks(),0)}%{airline#util#wrap(airline#extensions#branch#get_head(),0)}
multi_cursor_skip_key  <C-x>
tagbar_left           #0
airline_detect_paste  #1
syntastic_enable_balloons #1
airline_section_c      %<%f%m %#__accent_red#%{airline#util#wrap(airline#parts#readonly(),0)}%#__restore__#
vimwiki_w32_dir_enc    
extensions            ['.wiki']
EasyMotion_smartcase  #0
loaded_gundo          #1
airline_section_gutter  %=
airline_section_x      %{airline#util#prepend(airline#extensions#tagbar#currenttag(),0)}%{airline#util#wrap(airline#parts#filetype(),0)}
airline_section_y      %{airline#util#wrap(airline#parts#ffenc(),0)}
NERDTreeIgnore        ['\~$']
SuperTabUndoBreak     #0
EasyMotion_off_screen_search #1
loaded_syntastic_notifier_balloons #1
NERDTreeBookmarksFile  /Users/chris/.NERDTreeBookmarks
rails#rake_errorformat  %D(in\ %f),%\\s%#from\ %f:%l:%m,%\\s%#from\ %f:%l:,%\\s#{RAILS_ROOT}/%f:%l:\ %#%m,%\\s%##\ %f:%l:%m,%\\s%##\ %f:%l,%\\s%#[%f:%l:\ %#%m,%\\s%#%f:%l:\ %#%m,%\\s%#%f:%l:,%m\ [%f:%l]:
SyntasticNotifiers    {'Instance': function('240'), '_initNotifiers': function('243'), 'reset': function('242'), 'refresh': function('241')}
loaded_surround       #1
loaded_dispatch       #1
multi_cursor_debug_latency #0
NERDTreeWinSize        31
loaded_nerdtree_autoload #1
loaded_gzip           #1
bundle_dir             /Users/chris/.vim/bundle
multi_cursor_exit_from_insert_mode #1
EasyMotion_enter_jump_first #0
val                   #1
multi_cursor_start_key  <C-n>
gitgutter_diff_args    
vimsyn_embed           lmpPr
vimwiki_hl_cb_checked #0
vroom_map_keys        #1
gitgutter_enabled     #1
calendar_action        vimwiki#diary#calendar_action
gitgutter_escape_grep #0
syntastic_bash_hack   #1
EasyMotion_use_upper  #0
tagbar_map_closefold  ['-', '<kMinus>', 'zc']
tagbar_width          #40
UseNumberToggleTrigger #1
EasyMotion_do_mapping #1
syntastic_always_populate_loc_list #0
SyntasticBalloonsNotifier {'enabled': function('189'), 'reset': function('191'), 'New': function('188'), 'refresh': function('190')}
NERDTreeCreator       {'BufNamePrefix': function('169'), 'createSecondary': function('173'), '_createTreeWin': function('176'), 'TogglePrimary': function('183'), '_nextBufferName': function('178'), 'togglePrimary': function('184'), 'createMirror': function('175'), '_setupStatusline': function('182'), 'CreatePrimary': function('170'), '_setCommonBufOptions': function('181'), 'CreateSecondary': function('172'), 'New': function('177'), '_broadcastInitEvent': function('168'), 'CreateMirror': function('174'), '_pathForString': function('180'), 'createPrimary': function('171'), '_nextBufferNumber': function('179'), '_bindMappings': function('167')}
vimwiki_html_header_numbering #0
SuperTabCrMapping     #1
NERDTreeMapToggleFilters  f
fugitive_git_executable  git
NERDTreeMapToggleBookmarks  B
tagbar_autoclose      #0
airline_left_alt_sep   
syntastic_filetype_map {}
SignaturePeriodicRefresh #1
autoloaded_rails       5.1
airline_powerline_fonts #1
unimpaired_html_entities {'omicron': 959, 'rdquo': 8221, 'Ecirc': 202, 'there4': 8756, 'curren': 164, 'rho': 961, 'Gamma': 915, 'upsih': 978, 'Yuml': 376, 'trade': 8482, 'Pi': 928, 'Igrave': 204, 'hellip': 8230, 'weierp': 8472, 'divide': 247, 'Acirc': 194, 'hearts': 9829, 'dagger': 8224, 'sim': 8764, 'Uacute': 218, 'phi': 966, 'lowast': 8727, 'permil': 8240, 'lfloor': 8970, 'copy': 169, 'nsub': 8836, 'rceil': 8969, 'zwnj': 8204, 'plusmn': 177, 'Ograve': 210, 'or': 8744, 'rarr': 8594, 'pi': 960, 'Prime': 8243, 'empty': 8709, 'Yacute': 221, 'psi': 968, 'isin': 8712, 'sbquo': 8218, 'cedil': 184, 'crarr': 8629, 'Alpha': 913, 'zwj': 8205, 'piv': 982, 'dArr': 8659, 'Upsilon': 933, 'thinsp': 8201, 'ccedil': 231, 'larr': 8592, 'thorn': 254, 'lambda': 955, 'rfloor': 8971, 'lrm': 8206, 'bdquo': 8222, 'Rho': 929, 'lsaquo': 8249, 'tilde': 732, 'and': 8743, 'deg': 176, 'Ugrave': 217, 'prod': 8719, 'ge': 8805, 'tau': 964, 'OElig': 338, 'sum': 8721, 'sup': 8835, 'sup1': 185, 'sup2': 178, 'sup3': 179, 'nabla': 8711, 'euro': 8364, 'cent': 162, 'real': 8476, 'Sigma': 931, 'ucirc': 251, 'Phi': 934, 'supe': 8839, 'times': 215, 'bull': 8226, 'aacute': 225, 'Scaron': 352, 'uuml': 252, 'acute': 180, 'hArr': 8660, 'image': 8465, 'epsilon': 949, 'rArr': 8658, 'sub': 8834, 'equiv': 8801, 'Auml': 196, 'ocirc': 244, 'rsaquo': 8250, 'brvbar': 166, 'oline': 8254, 'zeta': 950, 'Psi': 936, 'uml': 168, 'oslash': 248, 'Theta': 920, 'frac12': 189, 'infin': 8734, 'iota': 953, 'eacute': 233, 'Dagger': 8225, 'rlm': 8207, 'ouml': 246, 'atilde': 227, 'lceil': 8968, 'Uuml': 220, 'Epsilon': 917, 'lArr': 8656, 'delta': 948, 'frac14': 188, 'alefsym': 8501, 'notin': 8713, 'yen': 165, 'Omega': 937, 'minus': 8722, 'AElig': 198, 'ugrave': 249, 'Tau': 932, 'Zeta': 918, 'upsilon': 965, 'iacute': 237, 'fnof': 402, 'iuml': 239, 'Iota': 921, 'agrave': 224, 'ntilde': 241, 'egrave': 232, 'forall': 8704, 'aring': 229, 'oplus': 8853, 'Ouml': 214, 'circ': 710, 'otilde': 245, 'ang': 8736, 'ecirc': 234, 'thetasym': 977, 'iquest': 191, 'raquo': 187, 'gamma': 947, 'Ccedil': 199, 'ldquo': 8220, 'Lambda': 923, 'Atilde': 195, 'micro': 181, 'nbsp': 160, 'chi': 967, 'Iuml': 207, 'acirc': 226, 'uarr': 8593, 'frac34': 190, 'harr': 8596, 'oacute': 243, 'sigmaf': 962, 'laquo': 171, 'auml': 228, 'ordf': 170, 'ordm': 186, 'sect': 167, 'igrave': 236, 'apos': 39, 'Aacute': 193, 'perp': 8869, 'kappa': 954, 'prime': 8242, 'eta': 951, 'middot': 183, 'eth': 240, 'oelig': 339, 'Mu': 924, 'ni': 8715, 'beta': 946, 'reg': 174, 'Omicron': 927, 'alpha': 945, 'ETH': 208, 'rang': 9002, 'frasl': 8260, 'uacute': 250, 'Oslash': 216, 'iexcl': 161, 'ensp': 8194, 'le': 8804, 'Eacute': 201, 'lsquo': 8216, 'Ucirc': 219, 'Xi': 926, 'nu': 957, 'emsp': 8195, 'int': 8747, 'ograve': 242, 'otimes': 8855, 'diams': 9830, 'Nu': 925, 'Beta': 914, 'lang': 9001, 'para': 182, 'uArr': 8657, 'yacute': 253, 'ndash': 8211, 'part': 8706, 'sigma': 963, 'Iacute': 205, 'rsquo': 8217, 'Agrave': 192, 'radic': 8730, 'Ntilde': 209, 'Chi': 935, 'spades': 9824, 'Ocirc': 212, 'szlig': 223, 'mu': 956, 'Otilde': 213, 'pound': 163, 'not': 172, 'exist': 8707, 'cup': 8746, 'sdot': 8901, 'euml': 235, 'prop': 8733, 'macr': 175, 'icirc': 238, 'Kappa': 922, 'cong': 8773, 'cap': 8745, 'Eta': 919, 'Delta': 916, 'Egrave': 200, 'clubs': 9827, 'theta': 952, 'xi': 958, 'sube': 8838, 'ne': 8800, 'Icirc': 206, 'yuml': 255, 'loz': 9674, 'omega': 969, 'Oacute': 211, 'asymp': 8776, 'THORN': 222, 'Aring': 197, 'Euml': 203, 'mdash': 8212, 'darr': 8595, 'scaron': 353, 'shy': 173, 'aelig': 230}
loaded_rooter         #1
syntastic_check_on_open #0
NERDTreeMapPreview     go
fugitive_summary_format  %s
SignatureMarkTextHL    Exception
airline_left_sep       
loaded_snips          #1
VimwikiLog            {'path_html': 0, 'timing': [], 'path': 0, 'normalize_path': 0, 'html': [], 'subdir': 0}
loaded_ZoomWinPlugin   v25d
jellybeans_background_color  151515
did_load_filetypes    #1
NERDTreeNotificationThreshold  100
NERDTreeMapActivateNode  o
vimwiki_valid_html_tags  b,i,s,u,sub,sup,kbd,br,hr,div,center,strong,em
syntastic_warning_symbol  >>
ctrlp_alltags         []
loaded_visualstar     #1
vimwiki_html_header_numbering_sym  
loaded_vimballPlugin   v35
NERDTreeWinPos         left
vundle_log            []
syntastic_debug       #0
vimwiki_auto_checkbox #1
airline_mode_map      {'c': 'COMMAND', '^S': 'S-BLOCK', 'R': 'REPLACE', 's': 'SELECT', 'V': 'V-LINE', '^V': 'V-BLOCK', 'i': 'INSERT', '__': '------', 'S': 'S-LINE', 'v': 'VISUAL', 'n': 'NORMAL'}
loaded_tarPlugin       v29
gitgutter_realtime    #1
loaded_syntastic_notifier_autoloclist #1
SignaturePrioritizeMarks #1
buffergator_mru_cycle_loop #1
EasyMotion_disable_two_key_combo #0
ctrlp_cmd              CtrlP
NERDTreeMapMenu        m
tagbar_previewwin_pos  topleft
syntastic_reuse_loc_lists #1
EasyMotion_space_jump_first #0
loaded_supertab       #1
EasyMotion_prompt      Search for {n} character(s): 
EasyMotion_use_regexp #1
NERDTreeFileNode      {'isRoot': function('113'), 'openInNewTab': function('119'), 'rename': function('122'), 'activate': function('97'), 'clearBookmarks': function('100'), 'displayString': function('103'), 'cacheParent': function('99'), 'delete': function('102'), 'New': function('115'), 'findNode': function('105'), '_renderToString': function('124'), 'openSplit': function('117'), 'makeRoot': function('114'), 'findOpenDirSiblingWithVisibleChildren': function('106'), 'findSibling': function('107'), 'renderToString': function('123'), 'refresh': function('121'), 'openVSplit': function('118'), 'GetRootLineNum': function('110'), 'bookmark': function('98'), 'putCursorHere': function('120'), 'getLineNum': function('108'), 'equals': function('104'), 'isVisible': function('112'), 'copy': function('101'), 'GetSelected': function('111'), 'open': function('116'), 'GetRootForTab': function('109')}
tagbar_iconchars      ['▶', '▼']
SignatureIncludeMarkers  )!@#$%^&*(
rooter_use_lcd        #0
vimwiki_url_maxsave   #15
syntastic_echo_current_error #1
loaded_eunuch         #1
NERDTreeMapOpenInTabSilent  T
map_dict              {'silent': 0, 'noremap': 0, 'lhs': '<CR>', 'mode': 'i', 'nowait': 0, 'expr': 0, 'sid': 38, 'rhs': '<CR><Plug>DiscretionaryEnd', 'buffer': 0}
NERDTreePath          {'copyingWillOverwrite': function('10'), 'ignore': function('22'), 'delete': function('11'), 'getSortOrderIndex': function('19'), 'compareTo': function('6'), 'AbsolutePathFor': function('2'), 'displayString': function('12'), 'rename': function('32'), 'CopyingSupported': function('9'), '_strForUI': function('34'), 'strTrunk': function('39'), 'cacheDisplayString': function('4'), 'getLastPathComponent': function('18'), 'edit': function('13'), 'exists': function('15'), 'isUnixHiddenPath': function('21'), 'JoinPathStrings': function('25'), 'Slash': function('28'), 'bookmarkNames': function('3'), 'tabnr': function('40'), 'Create': function('7'), 'readInfoFromDisk': function('30'), '_strForGlob': function('37'), 'isUnder': function('24'), 'extractDriveLetter': function('14'), '_strForCd': function('35'), 'New': function('27'), 'getDir': function('16'), 'str': function('33'), '_ignorePatternMatches': function('23'), 'equals': function('26'), '_str': function('38'), 'WinToUnixPath': function('41'), 'copy': function('8'), 'isUnixHiddenFile': function('20'), 'refresh': function('31'), 'changeToDir': function('5'), '_strForEdit': function('36'), 'getParent': function('17'), 'Resolve': function('29')}
loaded_nrrw_rgn       #1
NERDTreeMapHelp        ?
SyntasticModeMap      {'isPassive': function('235'), '_noFiletypesArePassive': function('239'), 'Instance': function('232'), 'toggleMode': function('236'), '_isOneFiletypeActive': function('238'), 'echoMode': function('237'), 'synch': function('233'), 'allowsAutoChecking': function('234')}
NERDTreeMapJumpParent  p
ctrlp_builtins        #2
vimwiki_diary_months  {'11': 'November', '1': 'January', '2': 'February', '3': 'March', '4': 'April', '5': 'May', '6': 'June', '7': 'July', '8': 'August', '9': 'September', '12': 'December', '10': 'October'}
multi_cursor_quit_key  <Esc>
SuperTabMappingForward  <tab>
NERDTreeCasadeOpenSingleChildDir  1
loaded_syntastic_notifier_signs #1
vimwiki_conceallevel  #2
loaded_endwise        #1
SuperTabContextDefaultCompletionType  <c-p>
loaded_rails          #1
vimwiki_list_ignore_newline #1
NERDTreeMapJumpPrevSibling  <C-k>
SyntasticDebugTrace   #1
NERDTreeShowBookmarks  0
loaded_2html_plugin    vim7.4_v1
NERDMenuMode           3
NERDDefaultNesting     1
focus                 #1
SignatureMarkOrder     pm
gitgutter_highlight_lines #0
NERDTreeMenuItem      {'isSeparator': function('61'), 'All': function('54'), 'AllEnabled': function('55'), 'execute': function('60'), 'enabled': function('59'), 'isSubmenu': function('62'), 'Create': function('56'), 'CreateSubmenu': function('58'), 'CreateSeparator': function('57')}
airline_exclude_preview #0
tagbar_map_preview     p
airline#extensions#quickfix#location_text  Location
vimwiki_autowriteall  #1
zipPlugin_ext          *.zip,*.jar,*.xpi,*.ja,*.war,*.ear,*.celzip,*.oxt,*.kmz,*.wsz,*.xap,*.docx,*.docm,*.dotx,*.dotm,*.potx,*.potm,*.ppsx,*.ppsm,*.pptx,*.pptm,*.ppam,*.sldx,*.thmx,*.xlam,*.xlsx,*.xlsm,*.xlsb,*.xltx,*.xltm,*.xlam,*.crtx,*.vdw,*.glox,*.gcsx,*.gqsx
NERDTreeMouseMode      1
syntastic_error_symbol  >>
EasyMotion_show_prompt #1
loaded_syntastic_modemap #1
loaded_matchparen     #1
dispatch_handlers     ['tmux', 'screen', 'windows', 'iterm', 'x11', 'headless']
EasyMotion_add_search_history #1
NERDTreeChDirMode      0
EasyMotion_do_shade   #1
ctrlp_mruf_relative   #0
vimwiki_dir_link       
SyntasticLoclist      {'getFirstIssue': function('221'), 'current': function('215'), 'errors': function('225'), 'decorate': function('224'), 'extend': function('216'), 'getName': function('222'), 'filter': function('229'), 'warnings': function('226'), 'getStatuslineFlag': function('220'), 'isEmpty': function('217'), 'messages': function('228'), 'getRaw': function('219'), 'setloclist': function('230'), 'New': function('214'), 'show': function('231'), 'hasErrorsOrWarningsToDisplay': function('227'), 'copyRaw': function('218'), 'setName': function('223')}
loaded_matchit        #1
tagbar_systemenc       utf-8
airline_exclude_filenames ['DebuggerWatch', 'DebuggerStack', 'DebuggerStatus']
vimwiki_CJK_length    #0
SuperTabMappingTabLiteral  <c-tab>
NERDTreeRemoveDirCmd   rm -rf 
gitgutter_sign_modified_removed  ~_
EasyMotion_grouping   #1
SignatureDeferPlacement #1
EasyMotion_inc_highlight #1
NERDTreeShowFiles      1
loaded_numbertoggle   #1
NERDTreeMapOpenSplit   i
existing               
vimwiki_user_htmls     
rooter_patterns       ['.git', '.git/', '_darcs/', '.hg/', '.bzr/', '.svn/']
EasyMotion_skipfoldedline #1
NERDTreeCaseSensitiveSort  0
SuperTabCompletionContexts ['s:ContextText']
ft_ignore_pat          \.\(Z\|gz\|bz2\|zip\|tgz\)$
SyntasticDebugVariables #16
tagbar_expand         #0
NERDTreeHijackNetrw    1
NERDSpaceDelims        0
NERDTreeShowLineNumbers  0
SignatureErrorIfNoAvailableMarks #1
syntastic_stl_format   [Syntax: line:%F (%t)]
indent_guides_auto_colors #0
NERDTreeKeyMap        {'All': function('63'), 'BindAll': function('65'), 'Create': function('70'), 'bind': function('66'), 'Add': function('71'), 'FindFor': function('64'), 'Invoke': function('69'), 'invoke': function('68'), 'Remove': function('67')}
map                    help
loaded_getscriptPlugin  v35
tagbar_autofocus      #0
NERDTreeHighlightCursorline  1
airline_right_alt_sep  
SuperTabNoCompleteAfter ['^', '\s']
airline_theme_map     {'.*zenburn.*': 'zenburn', 'Tomorrow.*': 'tomorrow', 'wombat.*': 'wombat', 'base16.*': 'base16', 'mo[l|n]okai': 'molokai', '.*solarized.*': 'solarized'}
syntastic_enable_highlighting #1
loaded_syntastic_util_autoload #1
loaded_trailing_whitespace_plugin #1
NERDLPlace             [>
rooter_change_directory_for_non_project_files #0
SyntasticSignsNotifier {'_signErrors': function('260'), '_bufSignIds': function('262'), 'enabled': function('257'), '_setup': function('259'), '_removeSigns': function('261'), 'New': function('256'), 'refresh': function('258')}
gitgutter_sign_modified  ~
loaded_vimwiki_auto   #1
tagbar_map_previewwin  P
updated_bundles       []
colors_name            jellybeans
tagbar_status_func     airline#extensions#tagbar#get_status
NERDRemoveExtraSpaces  0
tagbar_hide_nonpublic #0
snipMateSources       {'default': {'faked_function_reference': 'snipMate#DefaultPool'}}
vimwiki_rxSchemeUrlMatchScheme  \zs\%(wiki\d\+\|diary\|local\|http\|https\|file\|ftp\|gopher\|telnet\|nntp\|ldap\|rsync\|imap\|pop\|irc\|ircs\|cvs\|svn\|svn+ssh\|git\|ssh\|fish\|sftp\|mailto\|news\|xmpp\|sip\|sips\|doi\|urn\|tel\)\ze:.*
loaded_csv            #1
matchparen_insert_timeout #60
SignatureEnabledAtStartup #1
SignatureIncludeMarks  abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
NERDCreateDefaultMappings  1
loaded_syntastic_notifier_cursor #1
syntastic_enable_signs #1
NERDTreeDirNode       {'activate': function('126'), 'getChildIndex': function('135'), 'renderToString': function('123'), 'reveal': function('150'), 'refresh': function('149'), 'GetRootLineNum': function('110'), 'openInNewTab': function('145'), 'getVisibleChildCount': function('137'), 'transplantChild': function('154'), 'getVisibleChildren': function('138'), 'GetRootForTab': function('109'), 'addChild': function('127'), '_openRecursively2': function('148'), 'close': function('128'), 'delete': function('102'), '_renderToString': function('124'), 'openSplit': function('117'), 'hasVisibleChildren': function('139'), 'findOpenDirSiblingWithVisibleChildren': function('106'), 'openExplorer': function('144'), 'sortChildren': function('152'), 'AbsoluteTreeRoot': function('125'), 'getLineNum': function('108'), 'bookmark': function('98'), 'openVSplit': function('118'), 'isVisible': function('112'), 'copy': function('101'), 'GetSelected': function('136'), 'isRoot': function('113'), 'openAlong': function('143'), 'rename': function('122'), 'displayString': function('103'), 'cacheParent': function('99'), 'getChildByIndex': function('134'), 'findNode': function('131'), 'New': function('141'), 'removeChild': function('151'), '_initChildren': function('140'), 'getChild': function('133'), 'openRecursively': function('147'), 'toggleOpen': function('153'), 'equals': function('104'), '_openInNewTab': function('146'), 'clearBookmarks': function('100'), 'open': function('142'), 'makeRoot': function('114'), 'findSibling': function('107'), 'closeChildren': function('129'), 'putCursorHere': function('120'), 'createChild': function('130'), 'getChildCount': function('132')}
tagbar_map_closeallfolds ['=', 'zM']
airline#extensions#quickfix#quickfix_text  Quickfix
iabbrev_map           #0
NERDTreeMapCWD         CD
vimwiki_ext2syntax    {}
ctrlp_alldirs         []
loaded_airline        #1
tagbar_zoomwidth      #1
NERDTreeMapOpenInTab   t
NERDTreeMapPreviewVSplit  gs
loaded_tmux_navigator #1
multi_cursor_next_key  <C-n>
NERDChristmasTree      1
ctrlp_buftags         {}
NERDTreeMapUpdir       u
loaded_nerd_comments  #1
syntax_on             #1
vimwiki_global_ext    #1
vimwiki_listsyms        .oOX
loaded_tagbar         #1
NERDTreeMapJumpRoot    P
NERDCommentWholeLinesInVMode  0
buffergator_mru       [1]
tagbar_map_togglesort  s
vimwiki_table_auto_fmt #1
airline_statusline_funcrefs [function('airline#extensions#quickfix#apply'), function('airline#extensions#netrw#apply'), function('airline#extensions#ctrlp#apply'), function('airline#extensions#csv#apply')]
loaded_netrwPlugin     v149
i                     #255
loaded_Signature       3
vimwiki_table_mappings #1
multi_cursor_exit_from_visual_mode #1
NERDTreeMapChdir       cd
syn                    default
airline_detect_modified #1
multi_cursor_use_default_mapping #1
NERDRPlace             <]
loaded_ctrlp          #1
NERDTreeMapToggleZoom  A
NERDTreeBookmark      {'CacheBookmarks': function('78'), 'BookmarkNames': function('77'), 'openInNewTab': function('89'), 'activate': function('72'), 'open': function('88'), 'delete': function('81'), 'validate': function('95'), 'ToRoot': function('94'), 'New': function('87'), 'compareTo': function('79'), 'Bookmarks': function('74'), 'ClearAll': function('80'), 'InvalidBookmarks': function('85'), 'AddBookmark': function('73'), 'getNode': function('82'), 'toRoot': function('93'), 'str': function('92'), 'BookmarkFor': function('76'), 'Sort': function('91'), 'mustExist': function('86'), 'BookmarkExistsFor': function('75'), 'GetNodeForName': function('83'), 'GetSelected': function('84'), 'Write': function('96'), 'setPath': function('90')}
insertmode            #0
loaded_tlib           #109
loaded_syntastic_loclist #1
SignatureMarkerTextHL  WarningMsg
matchparen_timeout    #300
tagbar_foldlevel      #99
NERDTreeMapRefreshRoot  R
ctrlp_mruf_exclude     
EasyMotion_cursor_highlight #1
ctrlp_mruf_case_sensitive #1
airline_symbols       {'linenr': '', 'paste': 'PASTE', 'readonly': '', 'modified': '+', 'space': ' ', 'whitespace': '✹', 'branch': ''}
vimwiki_web_schemes1   http,https,file,ftp,gopher,telnet,nntp,ldap,rsync,imap,pop,irc,ircs,cvs,svn,svn+ssh,git,ssh,fish,sftp
airline_detect_iminsert #0
vimwiki_use_mouse     #0
syntastic_start       [1397543268, 547489]
did_buffergator       #1
NERDRemoveAltComs      1
NERDTreeAutoCenter     1
vimwiki_menu           Vimwiki
loaded_unimpaired     #1
syntastic_auto_jump   #0
loaded_syntastic_log_autoload #1
NERDTreeMapOpenVSplit  s
ruby_minlines         #500
EasyMotion_startofline #1
tagbar_map_hidenonpublic  v
SyntasticCursorNotifier {'enabled': function('206'), 'reset': function('208'), 'New': function('205'), 'refresh': function('207')}
syntastic_id_checkers #1
SyntasticChecker      {'_populateHighlightRegexes': function('202'), 'getName': function('194'), '_shescape': function('204'), '_quietMessages': function('201'), 'getLocList': function('198'), 'getExecEscaped': function('196'), 'getFiletype': function('193'), 'getExec': function('195'), 'isAvailable': function('200'), 'makeprgBuild': function('199'), 'getLocListRaw': function('197'), 'New': function('192'), '_getOpt': function('203')}
loaded_syntastic_notifiers #1
NERDTreeMapJumpLastChild  J
tagbar_map_openallfolds ['*', '<kMultiply>', 'zR']
SuperTabLongestEnhanced #0
loaded_syntastic_registry #1
vimwiki_folding        
ctrlp_map              F
vimwiki_schemes        wiki\d\+,diary,local
SyntasticAutoloclistNotifier {'AutoToggle': function('187'), 'New': function('185'), 'refresh': function('186')}
vundle_changelog      ['Updated Plugins:']
syntastic_aggregate_errors #0
tagbar_compact        #0
NERDTreeMapDeleteBookmark  D
ctrlp_mruf_include     
NERDBlockComIgnoreEmpty  0
SignatureUnconditionallyRecycleMarks #0
NERDTreeMenuController {'_echoPrompt': function('44'), '_cursorDown': function('52'), 'showMenu': function('43'), '_setCmdheight': function('49'), '_nextIndexFor': function('48'), '_allIndexesFor': function('47'), '_cursorUp': function('53'), '_saveOptions': function('50'), '_current': function('45'), '_handleKeypress': function('46'), 'New': function('42'), '_restoreOptions': function('51')}
syntastic_version      3.4.0-28
airline_section_z      %3p%% %{g:airline_symbols.linenr}%#__accent_bold#%4l%#__restore__#:%3c 
snips_author           Me
vimwiki_debug         #0
NERDTreeMapJumpNextSibling  <C-j>
loaded_syntastic_plugin #1
ctrlp_status_func     {'prog': 'airline#extensions#ctrlp#ctrlp_airline_status', 'main': 'airline#extensions#ctrlp#ctrlp_airline'}
did_load_ftplugin     #1
SyntasticDebugNotifications #4
airline_inactive_collapse #1
gitgutter_sign_removed  _
calendar_sign          vimwiki#diary#calendar_sign
SyntasticDebugLoclist #2
SuperTabClosePreviewOnPopupClose #0
NERDTreeCopyCmd        cp -r 
SuperTabRetainCompletionDuration  insert
syntastic_style_error_symbol  S>
airline#extensions#tabline#enabled #1
tagbar_sort           #1
NERDTreeMapQuit        q
NERDTreeMapChangeRoot  C
airline_section_warning  %{airline#util#wrap(airline#extensions#syntastic#get_warnings(),0)}%{airline#util#wrap(airline#extensions#whitespace#check(),0)}
multi_cursor_prev_key  <C-p>
NERDCompactSexyComs    0
syntastic_quiet_messages {}
relativemode          #1
did_indent_on         #1
loaded_nerdtree_exec_menuitem #1
tagbar_show_linenumbers #0
NERDTreeSortDirs       1
SignaturePurgeConfirmation #0
NERDTreeMapToggleFiles  F
syntastic_loc_list_height #10
EasyMotion_keys        asdghklqwertyuiopzxcvbnmfj;
airline_theme          jellybeans
NERDAllowAnyVisualDelims  1
cr                    #1
NERDTreeDirArrows      1
airline#themes#jellybeans#palette {'accents': {'orange': ['#df5f00', '', 166, ''], 'bold': ['', '', '', '', 'bold'], 'blue': ['#005fff', '', 27, ''], 'green': ['#008700', '', 22, ''], 'purple': ['#af00df', '', 128, ''], 'italic': ['', '', '', '', 'italic'], 'yellow': ['#dfff00', '', 190, ''], 'airline_warning': ['#000000', '#df5f00', 232, 166], 'red': ['', '', '167', 1, '']}, 'inactive': {'airline_a_to_airline_b_inactive': ['', '', '234', '234'], 'airline_b_to_airline_c_inactive': ['', '', '234', '234'], 'airline_x': ['#444444', '#1c1c1c', 237, 234, ''], 'airline_y': ['#444444', '#1c1c1c', 237, 234, ''], 'airline_z': ['#444444', '#1c1c1c', 237, 234, ''], 'airline_y_to_airline_z_inactive': ['', '', '234', '234'], 'airline_c_to_airline_x_inactive': ['', '', '234', '234'], 'airline_z_to_airline_warning_inactive': ['', '', '166', '234'], 'airline_x_to_airline_y_inactive': ['', '', '234', '234'], 'airline_a': ['#444444', '#1c1c1c', 237, 234, ''], 'airline_b': ['#444444', '#1c1c1c', 237, 234, ''], 'airline_c': ['#444444', '#1c1c1c', 237, 234, ''], 'airline_warning': ['#000000', '#df5f00', 232, 166]}, 'replace': {'airline_x': ['', '', '240', '233', ''], 'airline_y': ['', '', '145', '236', ''], 'airline_z': ['', '', '217', '16', ''], 'airline_a': ['', '', '217', '16', 'bold'], 'airline_b': ['', '', '145', '236', ''], 'airline_c': ['', '', '240', '233', ''], 'airline_warning': ['#000000', '#df5f00', 232, 166]}, 'normal': {'airline_y_to_airline_z': ['', '', '25', '236'], 'airline_x': ['', '', '240', '233', ''], 'airline_y': ['', '', '145', '236', ''], 'airline_z': ['', '', '195', '25', ''], 'airline_c_to_airline_x': ['', '', '233', '233'], 'airline_a_to_airline_b': ['', '', '25', '236'], 'airline_x_to_airline_y': ['', '', '236', '233'], 'airline_b_to_airline_c': ['', '', '236', '233'], 'airline_z_to_airline_warning': ['', '', '166', '25'], 'airline_a': ['', '', '195', '25', 'bold'], 'airline_b': ['', '', '145', '236', ''], 'airline_c': ['', '', '240', '233', ''], 'airline_warning': ['#000000', '#df5f00', 232, 166]}, 'normal_modified': {'airline_warning': ['#000000', '#df5f00', 232, 166], 'airline_c': ['#ffb964', '', 215, '', '']}, 'visual_modified': {...}, 'insert_modified': {...}, 'inactive_modified': {...}, 'visual': {'airline_x': ['', '', '240', '233', ''], 'airline_y': ['', '', '145', '236', ''], 'airline_z': ['', '', '254', '52', ''], 'airline_a': ['', '', '254', '52', 'bold'], 'airline_b': ['', '', '145', '236', ''], 'airline_c': ['', '', '240', '233', ''], 'airline_warning': ['#000000', '#df5f00', 232, 166]}, 'replace_modified': {...}, 'insert': {'airline_x': ['', '', '240', '233', ''], 'airline_y': ['', '', '145', '236', ''], 'airline_z': ['', '', '193', '22', ''], 'airline_a': ['', '', '193', '22', 'bold'], 'airline_b': ['', '', '145', '236', ''], 'airline_c': ['', '', '240', '233', ''], 'airline_warning': ['#000000', '#df5f00', 232, 166]}}
tagbar_show_visibility #1
EasyMotion_force_csapprox #0
EasyMotion_loaded     #1
iabbrevs               ^@^@No abbreviation found
gitgutter_sign_added   +
NERDTreeMapOpenExpl    e
netrw_force_overwrite_statusline #0
rxSchemes              \%(wiki\d\+\|diary\|local\|http\|https\|file\|ftp\|gopher\|telnet\|nntp\|ldap\|rsync\|imap\|pop\|irc\|ircs\|cvs\|svn\|svn+ssh\|git\|ssh\|fish\|sftp\|mailto\|news\|xmpp\|sip\|sips\|doi\|urn\|tel\)
NERDTreeMapJumpFirstChild  K
SignatureMenu          P&lugin.&Signature
loaded_nerd_tree      #1
vimwiki_rxSchemeUrlMatchUrl  \%(wiki\d\+\|diary\|local\|http\|https\|file\|ftp\|gopher\|telnet\|nntp\|ldap\|rsync\|imap\|pop\|irc\|ircs\|cvs\|svn\|svn+ssh\|git\|ssh\|fish\|sftp\|mailto\|news\|xmpp\|sip\|sips\|doi\|urn\|tel\):\zs.*\ze
vimwiki_list          [{'maxhi': 0, 'css_name': 'style.css', 'auto_export': 0, 'diary_index': 'diary', 'template_default': '', 'nested_syntaxes': {}, 'diary_sort': 'desc', 'path': '~/vimwiki/', 'diary_link_fmt': '%Y-%m-%d', 'template_ext': '', 'syntax': 'default', 'custom_wiki2html': '', 'index': 'index', 'diary_header': 'Diary', 'ext': '.wiki', 'path_html': '', 'temp': 0, 'template_path': '', 'list_margin': -1, 'diary_rel_path': 'diary/'}]
loaded_gist_vim       #1
more_save             #1
ctrlp_allmixes        {}
airline_exclude_filetypes []
buffergator_track_mru #1
NERDTreeMapOpenRecursively  O
opt                    zoomwidth
gitgutter_signs       #1
tagbar_autoshowtag    #0
EasyMotion_command_line_key_mappings {}
gitgutter_sign_column_always #0
loaded_gitgutter      #1
SuperTabMappingBackward  <s-tab>
expr_map              #0
tagbar_ctags_bin       ctags
ctrlp_lines           []
SuperTabNoCompleteBefore []
SyntasticHighlightingNotifier {'enabled': function('210'), 'reset': function('212'), '_setup': function('213'), 'New': function('209'), 'refresh': function('211')}
vimwiki_hl_headers    #0
tagbar_map_close       q
NERDTreeMapUpdirKeepOpen  U
EasyMotion_landing_highlight #0
tagbar_map_zoomwin     x
SyntasticDebugAutocommands #8
ctrlp_mruf_save_on_update #1
NERDTreeQuitOnOpen     0
tagbar_map_prevtag     <C-P>
syntastic_style_warning_symbol  S>
tagbar_map_showproto   <Space>
loaded_fugitive       #1
ctrlp_allfiles        []
gitgutter_map_keys    #1
NERDTreeAutoCenterThreshold  3
NERDTreeMapToggleHidden  I
tagbar_autopreview    #0
NERDTreeStatusline     %{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}
b:undo_indent          setl indentkeys< indentexpr<
b:sig_enabled         #1
b:has_color_hi        {}
b:has_pattern_syn     {}
b:match_skip           getline(".") =~ "^\\s*sy\\%[ntax]\\s\\+region" || synIDattr(synID(line("."),col("."),1),"name") =~? "comment\\|string"
b:current_syntax       vim
b:color_match_id      []
b:gitgutter_repo_relative_path  fatal: Not a git repository (or any of the parent directories): .gitbugreport.vim
b:endwise_syngroups    vimFuncKey,vimNotFunc,vimCommand
b:syntastic_balloons  {}
b:endwise_words        fu,fun,func,function,wh,while,if,for,try
b:did_indent          #1
b:syntastic_sign_ids  []
b:airline_file_in_root #1
b:syntastic_loclist   {'_name': '', 'getFirstIssue': function('221'), 'current': function('215'), 'errors': function('225'), 'decorate': function('224'), 'extend': function('216'), 'getName': function('222'), 'filter': function('229'), 'warnings': function('226'), 'getStatuslineFlag': function('220'), 'isEmpty': function('217'), '_stl_format': '[Syntax: line:%F (%t)]', 'messages': function('228'), 'getRaw': function('219'), 'setloclist': function('230'), 'New': function('214'), 'show': function('231'), 'hasErrorsOrWarningsToDisplay': function('227'), '_rawLoclist': [], 'copyRaw': function('218'), '_stl_flag': '', 'setName': function('223')}
b:sig_markers         {}
b:match_ignorecase    #0
b:endwise_addition     end&
b:NERDCommenterDelims {'right': '', 'rightAlt': '', 'leftAlt': '', 'left': '"'}
b:did_ftplugin        #1
b:undo_ftplugin        setl fo< isk< com< tw< commentstring<| unlet! b:match_ignorecase b:match_words b:match_skip
b:NERDSexyComMarker    
b:sig_marks           {}
b:match_words          \<fu\%[nction]\>:\<retu\%[rn]\>:\<endf\%[unction]\>,\<\(wh\%[ile]\|for\)\>:\<brea\%[k]\>:\<con\%[tinue]\>:\<end\(w\%[hile]\|fo\%[r]\)\>,\<if\>:\<el\%[seif]\>:\<en\%[dif]\>,\<try\>:\<cat\%[ch]\>:\<fina\%[lly]\>:\<endt\%[ry]\>,\<aug\%[roup]\s\+\%(END\>\)\@!\S:\<aug\%[roup]\s\+END\>,(:)
b:changedtick         #4
w:airline_lastmode     normal
w:buffergator_mru     [1]
w:airline_active      #1
w:airline_current_mode  NORMAL
v:version             #704
v:beval_winnr         #0
v:lnum                #0
v:scrollstart          /Applications/MacVim.app/Contents/Resources/vim/runtime/bugreport.vim line 21
v:oldfiles            ['/usr/share/vim/vim73/bugreport.vim', '~/dotfiles/bash_profile', '~/dotfiles/tmux.conf', '~/dotfiles/vimrc', '~/Projects/Bonfire/Code/ContentService/src/main/java/com/ghostgroup/config/Environment.java', '~/Projects/Bonfire/Code/ContentService/ControlP', '~/Projects/Bonfire/Code/ContentService/src/main/java/com/ghostgroup/contentService/init/Initializer.java', '~/Projects/Bonfire/Code/ContentService/src/main/webapp/WEB-INF/application.json', '~/Projects/Bonfire/Code/ContentService/src/main/webapp/WEB-INF/.git-info', '~/Projects/Bonfire/Code/ContentService/src/main/resources/log4j.properties', '/private/var/folders/r2/m6018bc10j15zlmgzcn2j0g80000gn/T/bash-fc-4124564080', '/private/var/folders/r2/m6018bc10j15zlmgzcn2j0g80000gn/T/bash-fc-1397571678', '~/Projects/Bonfire/Code/infrastructure/ansible/production', '~/Projects/Bonfire/Code/infrastructure/.git/COMMIT_EDITMSG', '~/install_notes.txt', '~/dotfiles/[Vundle] Installer', '~/[Vundle] Installer', '~/[Vundle] clean', '~/vimrc', '~/dotfiles/NERD_tree_1', '~/.vimrc', '~/dotfiles/vim/settings/janus.vim', '~/dotfiles/[Vundle] clean', '/private/var/folders/r2/m6018bc10j15zlmgzcn2j0g80000gn/T/bash-fc-7397063142', '/private/var/folders/r2/m6018bc10j15zlmgzcn2j0g80000gn/T/bash-fc-4124397227', '/private/var/folders/r2/m6018bc10j15zlmgzcn2j0g80000gn/T/bash-fc-1397541092', '~/.bash_profile', '~/NERD_tree_1', '~/.vimrc.before', '~/.vimrc.after', '~/dotfiles_old/NERD_tree_1', '~/dotfiles_old/.vim/janus/vim/vimrc', '~/dotfiles_old/.vimrc', '~/Projects/stereotypical/app/controllers/groups_controller.rb', '~/Projects/stereotypical/ControlP', '~/Projects/stereotypical/app/controllers/application_controller.rb', '~/Projects/stereotypical/NERD_tree_1', '~/Projects/stereotypical/app/controllers/main_controller.rb', '~/Projects/stereotypical/app/controllers/group_controller.rb', '~/Projects/stereotypical/config/routes.rb', '/private/var/folders/r2/m6018bc10j15zlmgzcn2j0g80000gn/T/bash-fc-7398450006', '~/Projects/Bonfire/Code/ContentService/src/main/java/com/ghostgroup/dataRegistry/DataRegistryInitializer.java', '~/Projects/Bonfire/Code/ContentService/src/main/webapp/WEB-INF/ControlP', '~/Projects/Bonfire/Code/weedmaps/lib/capistrano/tasks/sidekiq.cap', '~/Projects/Bonfire/Code/weedmaps/NERD_tree_1', '~/Projects/Bonfire/Code/weedmaps/Capfile', '~/Projects/Bonfire/Code/weedmaps/install_notes.txt', '~/Projects/Bonfire/Code/weedmaps/config/deploy.rb', '~/Projects/Bonfire/Code/ContentService/NERD_tree_1', '~/Projects/Bonfire/Code/ContentService/pom.xml', '/private/var/folders/r2/m6018bc10j15zlmgzcn2j0g80000gn/T/bash-fc-4124693096', '/private/var/folders/r2/m6018bc10j15zlmgzcn2j0g80000gn/T/bash-fc-1397269196', '/Applications/MacVim.app/Contents/Resources/vim/runtime/doc/help.txt', '/usr/share/vim/vim73/vimrc_example.vim', '~/dotfiles/vim/tmux_line_theme', 'fugitive:///Users/chris/dotfiles/.git//0/vim/tmux_line_theme', '/usr/share/vim/vim62/vimrc_example.vim', '/usr/share/vim/vimrc', '~/dotfiles/vim/bundle/vim-airline/README.md', '~/dotfiles/vim/bundle/tmuxline.vim/vimr', '~/dotfiles/vim/bundle/tmuxline.vim/README.md', '~/dotfiles/vim/bundle/tmuxline.vim/ControlP', '~/dotfiles/vim/bundle/tmuxline.vim/[[buffergator-buffers]]', '~/dotfiles/ControlP', '~/dotfiles/install.sh', '~/.tmux.conf', '~/Projects/stereotypical/app/models/stereotype.rb', '~/Projects/stereotypical/db/schema.rb', '~/Projects/stereotypical/spec/models/stereotype.rb', '~/.ssh/config', '~/Projects/Bonfire/Code/infrastructure/ansible/roles/rails/tasks/main.yml', '~/.ssh/known_hosts', '~/Projects/Bonfire/Code/infrastructure/ansible/roles/rails/templates/sidekiq.conf.j2', '~/Projects/Bonfire/Code/spikes/websockets/public/partials/home.html', '~/Projects/Bonfire/Code/weedmaps/db/migrate/201307220509_add_age_checked_at_to_users.rb', '~/Projects/Bonfire/Code/weedmaps/db/migrate/20130221230231_add_topics_count_to_forem_forums.forem.rb', '~/Projects/Bonfire/Code/weedmaps/db/migrate/20130722050959_add_age_checked_at_to_users.rb', '~/Projects/Bonfire/Code/weedmaps/app/assets/javascripts/new_coupons/views/deal.js.coffee', '~/Projects/Bonfire/Code/weedmaps/app/assets/javascripts/new_admin/coupons.js.coffee', '~/Projects/Bonfire/Code/weedmaps/app/assets/javascripts/new_coupons/collections/deals.js', '~/Projects/Bonfire/Code/weedmaps/app/assets/javascripts/new_coupons/views/organic_deal.js.coffee', '~/Projects/Bonfire/Code/weedmaps/app/assets/javascripts/new_coupons/templates/deal.jst.ejs', '~/Projects/Bonfire/Code/weedmaps/config/application.yml', '~/Projects/Bonfire/Code/weedmaps/app/assets/stylesheets/new_coupons/coupon.scss', '/private/var/folders/r2/m6018bc10j15zlmgzcn2j0g80000gn/T/vZacmdr/6.fugitiveblame', '~/Projects/Bonfire/Code/weedmaps/db/schema.rb', '~/Projects/Bonfire/Code/weedmaps/[[buffergator-tabs]]', '~/Projects/Bonfire/Code/weedmaps/app/models/discount_type.rb', '~/Projects/Bonfire/Code/weedmaps/app/models/coupon_claim.rb', '~/Projects/Bonfire/Code/weedmaps/ControlP', '~/Projects/Bonfire/Code/weedmaps/app/models/deal.rb', '~/.vim/NERD_tree_1', '~/Projects/Bonfire/Code/weedmaps/config/schedule.rb', '/usr/local/etc/wemux.conf', '~/Projects/Bonfire/Code/weedmaps/app/workers/expire_lab_test_results_worker.rb', '~/Projects/Bonfire/Code/weedmaps/app/workersv', '~/Projects/Bonfire/Code/weedmaps/app/models/dispensary.rb', '~/Projects/Bonfire/Code/weedmaps/app/models/concerns/listable.rb', '~/Projects/Bonfire/Code/weedmaps/app/assets/javascripts/mobile/dispensary.js', '~/Projects/Bonfire/Code/weedmaps/spec/queries/deal_query_spec.rb']
v:dying               #0
v:windowid            #0
v:lang                 en_US.UTF-8
v:count               #0
v:progname             Vim
v:cmdbang             #0
v:foldlevel           #0
v:ctype                en_US.UTF-8
v:prevcount           #0
v:register             *
v:mouse_win           #0
v:count1              #1
v:foldstart           #0
v:foldend             #0
v:profiling           #0
v:beval_col           #0
v:errmsg               Tagbar: Ctags doesn't seem to be Exuberant Ctags!
v:beval_lnum          #0
v:mouse_lnum          #0
v:beval_bufnr         #0
v:shell_error         #0
v:lc_time              en_US.UTF-8
v:searchforward       #1
v:mouse_col           #0
v:statusmsg            No abbreviation found